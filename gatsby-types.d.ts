/* eslint-disable */

/* THIS FILE IS AUTOGENERATED. CHANGES WILL BE LOST ON SUBSEQUENT RUNS. */

declare namespace Queries {

type Maybe<T> = T | null;
type InputMaybe<T> = T | null;
type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
type Scalars = {
  /** The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID. */
  ID: string;
  /** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */
  String: string;
  /** The `Boolean` scalar type represents `true` or `false`. */
  Boolean: boolean;
  /** The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1. */
  Int: number;
  /** The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point). */
  Float: number;
  /** A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */
  Date: string;
  GatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData;
  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */
  JSON: Record<string, unknown>;
};

type AVIFOptions = {
  readonly lossless: InputMaybe<Scalars['Boolean']>;
  readonly quality: InputMaybe<Scalars['Int']>;
  readonly speed: InputMaybe<Scalars['Int']>;
};

type AnimationsJson = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly ddd: Maybe<Scalars['Int']>;
  readonly fr: Maybe<Scalars['Int']>;
  readonly h: Maybe<Scalars['Int']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly ip: Maybe<Scalars['Int']>;
  readonly layers: Maybe<ReadonlyArray<Maybe<AnimationsJsonLayers>>>;
  readonly nm: Maybe<Scalars['String']>;
  readonly op: Maybe<Scalars['Int']>;
  readonly parent: Maybe<Node>;
  readonly tgs: Maybe<Scalars['Int']>;
  readonly v: Maybe<Scalars['String']>;
  readonly w: Maybe<Scalars['Int']>;
};

type AnimationsJsonConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<AnimationsJsonEdge>;
  readonly group: ReadonlyArray<AnimationsJsonGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<AnimationsJson>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type AnimationsJsonConnection_distinctArgs = {
  field: AnimationsJsonFieldsEnum;
};


type AnimationsJsonConnection_groupArgs = {
  field: AnimationsJsonFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type AnimationsJsonConnection_maxArgs = {
  field: AnimationsJsonFieldsEnum;
};


type AnimationsJsonConnection_minArgs = {
  field: AnimationsJsonFieldsEnum;
};


type AnimationsJsonConnection_sumArgs = {
  field: AnimationsJsonFieldsEnum;
};

type AnimationsJsonEdge = {
  readonly next: Maybe<AnimationsJson>;
  readonly node: AnimationsJson;
  readonly previous: Maybe<AnimationsJson>;
};

type AnimationsJsonFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'ddd'
  | 'fr'
  | 'h'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'ip'
  | 'layers'
  | 'layers.ao'
  | 'layers.bm'
  | 'layers.ddd'
  | 'layers.ind'
  | 'layers.ip'
  | 'layers.ks.a.a'
  | 'layers.ks.a.k'
  | 'layers.ks.o.a'
  | 'layers.ks.p.a'
  | 'layers.ks.r.a'
  | 'layers.ks.s.a'
  | 'layers.nm'
  | 'layers.op'
  | 'layers.shapes'
  | 'layers.shapes.bm'
  | 'layers.shapes.hd'
  | 'layers.shapes.it'
  | 'layers.shapes.it.bm'
  | 'layers.shapes.it.hd'
  | 'layers.shapes.it.ind'
  | 'layers.shapes.it.lc'
  | 'layers.shapes.it.lj'
  | 'layers.shapes.it.ml'
  | 'layers.shapes.it.nm'
  | 'layers.shapes.it.ty'
  | 'layers.shapes.nm'
  | 'layers.shapes.ty'
  | 'layers.sr'
  | 'layers.st'
  | 'layers.ty'
  | 'nm'
  | 'op'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'tgs'
  | 'v'
  | 'w';

type AnimationsJsonFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly ddd: InputMaybe<IntQueryOperatorInput>;
  readonly fr: InputMaybe<IntQueryOperatorInput>;
  readonly h: InputMaybe<IntQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly ip: InputMaybe<IntQueryOperatorInput>;
  readonly layers: InputMaybe<AnimationsJsonLayersFilterListInput>;
  readonly nm: InputMaybe<StringQueryOperatorInput>;
  readonly op: InputMaybe<IntQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly tgs: InputMaybe<IntQueryOperatorInput>;
  readonly v: InputMaybe<StringQueryOperatorInput>;
  readonly w: InputMaybe<IntQueryOperatorInput>;
};

type AnimationsJsonFilterListInput = {
  readonly elemMatch: InputMaybe<AnimationsJsonFilterInput>;
};

type AnimationsJsonGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<AnimationsJsonEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<AnimationsJsonGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<AnimationsJson>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type AnimationsJsonGroupConnection_distinctArgs = {
  field: AnimationsJsonFieldsEnum;
};


type AnimationsJsonGroupConnection_groupArgs = {
  field: AnimationsJsonFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type AnimationsJsonGroupConnection_maxArgs = {
  field: AnimationsJsonFieldsEnum;
};


type AnimationsJsonGroupConnection_minArgs = {
  field: AnimationsJsonFieldsEnum;
};


type AnimationsJsonGroupConnection_sumArgs = {
  field: AnimationsJsonFieldsEnum;
};

type AnimationsJsonLayers = {
  readonly ao: Maybe<Scalars['Int']>;
  readonly bm: Maybe<Scalars['Int']>;
  readonly ddd: Maybe<Scalars['Int']>;
  readonly ind: Maybe<Scalars['Int']>;
  readonly ip: Maybe<Scalars['Int']>;
  readonly ks: Maybe<AnimationsJsonLayersKs>;
  readonly nm: Maybe<Scalars['String']>;
  readonly op: Maybe<Scalars['Int']>;
  readonly shapes: Maybe<ReadonlyArray<Maybe<AnimationsJsonLayersShapes>>>;
  readonly sr: Maybe<Scalars['Int']>;
  readonly st: Maybe<Scalars['Int']>;
  readonly ty: Maybe<Scalars['Int']>;
};

type AnimationsJsonLayersFilterInput = {
  readonly ao: InputMaybe<IntQueryOperatorInput>;
  readonly bm: InputMaybe<IntQueryOperatorInput>;
  readonly ddd: InputMaybe<IntQueryOperatorInput>;
  readonly ind: InputMaybe<IntQueryOperatorInput>;
  readonly ip: InputMaybe<IntQueryOperatorInput>;
  readonly ks: InputMaybe<AnimationsJsonLayersKsFilterInput>;
  readonly nm: InputMaybe<StringQueryOperatorInput>;
  readonly op: InputMaybe<IntQueryOperatorInput>;
  readonly shapes: InputMaybe<AnimationsJsonLayersShapesFilterListInput>;
  readonly sr: InputMaybe<IntQueryOperatorInput>;
  readonly st: InputMaybe<IntQueryOperatorInput>;
  readonly ty: InputMaybe<IntQueryOperatorInput>;
};

type AnimationsJsonLayersFilterListInput = {
  readonly elemMatch: InputMaybe<AnimationsJsonLayersFilterInput>;
};

type AnimationsJsonLayersKs = {
  readonly a: Maybe<AnimationsJsonLayersKsA>;
  readonly o: Maybe<AnimationsJsonLayersKsO>;
  readonly p: Maybe<AnimationsJsonLayersKsP>;
  readonly r: Maybe<AnimationsJsonLayersKsR>;
  readonly s: Maybe<AnimationsJsonLayersKsS>;
};

type AnimationsJsonLayersKsA = {
  readonly a: Maybe<Scalars['Int']>;
  readonly k: Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>;
};

type AnimationsJsonLayersKsAFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<FloatQueryOperatorInput>;
};

type AnimationsJsonLayersKsFilterInput = {
  readonly a: InputMaybe<AnimationsJsonLayersKsAFilterInput>;
  readonly o: InputMaybe<AnimationsJsonLayersKsOFilterInput>;
  readonly p: InputMaybe<AnimationsJsonLayersKsPFilterInput>;
  readonly r: InputMaybe<AnimationsJsonLayersKsRFilterInput>;
  readonly s: InputMaybe<AnimationsJsonLayersKsSFilterInput>;
};

type AnimationsJsonLayersKsO = {
  readonly a: Maybe<Scalars['Int']>;
};

type AnimationsJsonLayersKsOFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
};

type AnimationsJsonLayersKsP = {
  readonly a: Maybe<Scalars['Int']>;
};

type AnimationsJsonLayersKsPFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
};

type AnimationsJsonLayersKsR = {
  readonly a: Maybe<Scalars['Int']>;
};

type AnimationsJsonLayersKsRFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
};

type AnimationsJsonLayersKsS = {
  readonly a: Maybe<Scalars['Int']>;
};

type AnimationsJsonLayersKsSFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
};

type AnimationsJsonLayersShapes = {
  readonly bm: Maybe<Scalars['Int']>;
  readonly hd: Maybe<Scalars['Boolean']>;
  readonly it: Maybe<ReadonlyArray<Maybe<AnimationsJsonLayersShapesIt>>>;
  readonly nm: Maybe<Scalars['String']>;
  readonly ty: Maybe<Scalars['String']>;
};

type AnimationsJsonLayersShapesFilterInput = {
  readonly bm: InputMaybe<IntQueryOperatorInput>;
  readonly hd: InputMaybe<BooleanQueryOperatorInput>;
  readonly it: InputMaybe<AnimationsJsonLayersShapesItFilterListInput>;
  readonly nm: InputMaybe<StringQueryOperatorInput>;
  readonly ty: InputMaybe<StringQueryOperatorInput>;
};

type AnimationsJsonLayersShapesFilterListInput = {
  readonly elemMatch: InputMaybe<AnimationsJsonLayersShapesFilterInput>;
};

type AnimationsJsonLayersShapesIt = {
  readonly a: Maybe<AnimationsJsonLayersShapesItA>;
  readonly bm: Maybe<Scalars['Int']>;
  readonly c: Maybe<AnimationsJsonLayersShapesItC>;
  readonly hd: Maybe<Scalars['Boolean']>;
  readonly ind: Maybe<Scalars['Int']>;
  readonly ks: Maybe<AnimationsJsonLayersShapesItKs>;
  readonly lc: Maybe<Scalars['Int']>;
  readonly lj: Maybe<Scalars['Int']>;
  readonly ml: Maybe<Scalars['Float']>;
  readonly nm: Maybe<Scalars['String']>;
  readonly o: Maybe<AnimationsJsonLayersShapesItO>;
  readonly p: Maybe<AnimationsJsonLayersShapesItP>;
  readonly s: Maybe<AnimationsJsonLayersShapesItS>;
  readonly sa: Maybe<AnimationsJsonLayersShapesItSa>;
  readonly sk: Maybe<AnimationsJsonLayersShapesItSk>;
  readonly ty: Maybe<Scalars['String']>;
  readonly w: Maybe<AnimationsJsonLayersShapesItW>;
};

type AnimationsJsonLayersShapesItA = {
  readonly a: Maybe<Scalars['Int']>;
  readonly k: Maybe<ReadonlyArray<Maybe<Scalars['Int']>>>;
};

type AnimationsJsonLayersShapesItAFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type AnimationsJsonLayersShapesItC = {
  readonly a: Maybe<Scalars['Int']>;
  readonly k: Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>;
};

type AnimationsJsonLayersShapesItCFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<FloatQueryOperatorInput>;
};

type AnimationsJsonLayersShapesItFilterInput = {
  readonly a: InputMaybe<AnimationsJsonLayersShapesItAFilterInput>;
  readonly bm: InputMaybe<IntQueryOperatorInput>;
  readonly c: InputMaybe<AnimationsJsonLayersShapesItCFilterInput>;
  readonly hd: InputMaybe<BooleanQueryOperatorInput>;
  readonly ind: InputMaybe<IntQueryOperatorInput>;
  readonly ks: InputMaybe<AnimationsJsonLayersShapesItKsFilterInput>;
  readonly lc: InputMaybe<IntQueryOperatorInput>;
  readonly lj: InputMaybe<IntQueryOperatorInput>;
  readonly ml: InputMaybe<FloatQueryOperatorInput>;
  readonly nm: InputMaybe<StringQueryOperatorInput>;
  readonly o: InputMaybe<AnimationsJsonLayersShapesItOFilterInput>;
  readonly p: InputMaybe<AnimationsJsonLayersShapesItPFilterInput>;
  readonly s: InputMaybe<AnimationsJsonLayersShapesItSFilterInput>;
  readonly sa: InputMaybe<AnimationsJsonLayersShapesItSaFilterInput>;
  readonly sk: InputMaybe<AnimationsJsonLayersShapesItSkFilterInput>;
  readonly ty: InputMaybe<StringQueryOperatorInput>;
  readonly w: InputMaybe<AnimationsJsonLayersShapesItWFilterInput>;
};

type AnimationsJsonLayersShapesItFilterListInput = {
  readonly elemMatch: InputMaybe<AnimationsJsonLayersShapesItFilterInput>;
};

type AnimationsJsonLayersShapesItKs = {
  readonly a: Maybe<Scalars['Int']>;
};

type AnimationsJsonLayersShapesItKsFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
};

type AnimationsJsonLayersShapesItO = {
  readonly a: Maybe<Scalars['Int']>;
  readonly k: Maybe<Scalars['Int']>;
};

type AnimationsJsonLayersShapesItOFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type AnimationsJsonLayersShapesItP = {
  readonly a: Maybe<Scalars['Int']>;
};

type AnimationsJsonLayersShapesItPFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
};

type AnimationsJsonLayersShapesItS = {
  readonly a: Maybe<Scalars['Int']>;
  readonly k: Maybe<ReadonlyArray<Maybe<Scalars['Int']>>>;
};

type AnimationsJsonLayersShapesItSFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type AnimationsJsonLayersShapesItSa = {
  readonly a: Maybe<Scalars['Int']>;
  readonly k: Maybe<Scalars['Int']>;
};

type AnimationsJsonLayersShapesItSaFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type AnimationsJsonLayersShapesItSk = {
  readonly a: Maybe<Scalars['Int']>;
  readonly k: Maybe<Scalars['Int']>;
};

type AnimationsJsonLayersShapesItSkFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type AnimationsJsonLayersShapesItW = {
  readonly a: Maybe<Scalars['Int']>;
  readonly k: Maybe<Scalars['Float']>;
};

type AnimationsJsonLayersShapesItWFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<FloatQueryOperatorInput>;
};

type AnimationsJsonSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<AnimationsJsonFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type BlurredOptions = {
  /** Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this */
  readonly toFormat: InputMaybe<ImageFormat>;
  /** Width of the generated low-res preview. Default is 20px */
  readonly width: InputMaybe<Scalars['Int']>;
};

type BooleanQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Boolean']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Boolean']>>>;
  readonly ne: InputMaybe<Scalars['Boolean']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Boolean']>>>;
};

type DateQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Date']>;
  readonly gt: InputMaybe<Scalars['Date']>;
  readonly gte: InputMaybe<Scalars['Date']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Date']>>>;
  readonly lt: InputMaybe<Scalars['Date']>;
  readonly lte: InputMaybe<Scalars['Date']>;
  readonly ne: InputMaybe<Scalars['Date']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Date']>>>;
};

type Directory = Node & {
  readonly absolutePath: Scalars['String'];
  readonly accessTime: Scalars['Date'];
  readonly atime: Scalars['Date'];
  readonly atimeMs: Scalars['Float'];
  readonly base: Scalars['String'];
  readonly birthTime: Scalars['Date'];
  /** @deprecated Use `birthTime` instead */
  readonly birthtime: Maybe<Scalars['Date']>;
  /** @deprecated Use `birthTime` instead */
  readonly birthtimeMs: Maybe<Scalars['Float']>;
  readonly changeTime: Scalars['Date'];
  readonly children: ReadonlyArray<Node>;
  readonly ctime: Scalars['Date'];
  readonly ctimeMs: Scalars['Float'];
  readonly dev: Scalars['Int'];
  readonly dir: Scalars['String'];
  readonly ext: Scalars['String'];
  readonly extension: Scalars['String'];
  readonly gid: Scalars['Int'];
  readonly id: Scalars['ID'];
  readonly ino: Scalars['Float'];
  readonly internal: Internal;
  readonly mode: Scalars['Int'];
  readonly modifiedTime: Scalars['Date'];
  readonly mtime: Scalars['Date'];
  readonly mtimeMs: Scalars['Float'];
  readonly name: Scalars['String'];
  readonly nlink: Scalars['Int'];
  readonly parent: Maybe<Node>;
  readonly prettySize: Scalars['String'];
  readonly rdev: Scalars['Int'];
  readonly relativeDirectory: Scalars['String'];
  readonly relativePath: Scalars['String'];
  readonly root: Scalars['String'];
  readonly size: Scalars['Int'];
  readonly sourceInstanceName: Scalars['String'];
  readonly uid: Scalars['Int'];
};


type Directory_accessTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_atimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_birthTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_changeTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_ctimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_modifiedTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_mtimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type DirectoryConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<DirectoryEdge>;
  readonly group: ReadonlyArray<DirectoryGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Directory>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type DirectoryConnection_distinctArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryConnection_groupArgs = {
  field: DirectoryFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type DirectoryConnection_maxArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryConnection_minArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryConnection_sumArgs = {
  field: DirectoryFieldsEnum;
};

type DirectoryEdge = {
  readonly next: Maybe<Directory>;
  readonly node: Directory;
  readonly previous: Maybe<Directory>;
};

type DirectoryFieldsEnum =
  | 'absolutePath'
  | 'accessTime'
  | 'atime'
  | 'atimeMs'
  | 'base'
  | 'birthTime'
  | 'birthtime'
  | 'birthtimeMs'
  | 'changeTime'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'ctime'
  | 'ctimeMs'
  | 'dev'
  | 'dir'
  | 'ext'
  | 'extension'
  | 'gid'
  | 'id'
  | 'ino'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'mode'
  | 'modifiedTime'
  | 'mtime'
  | 'mtimeMs'
  | 'name'
  | 'nlink'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'prettySize'
  | 'rdev'
  | 'relativeDirectory'
  | 'relativePath'
  | 'root'
  | 'size'
  | 'sourceInstanceName'
  | 'uid';

type DirectoryFilterInput = {
  readonly absolutePath: InputMaybe<StringQueryOperatorInput>;
  readonly accessTime: InputMaybe<DateQueryOperatorInput>;
  readonly atime: InputMaybe<DateQueryOperatorInput>;
  readonly atimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly base: InputMaybe<StringQueryOperatorInput>;
  readonly birthTime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly changeTime: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly ctime: InputMaybe<DateQueryOperatorInput>;
  readonly ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly dev: InputMaybe<IntQueryOperatorInput>;
  readonly dir: InputMaybe<StringQueryOperatorInput>;
  readonly ext: InputMaybe<StringQueryOperatorInput>;
  readonly extension: InputMaybe<StringQueryOperatorInput>;
  readonly gid: InputMaybe<IntQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly ino: InputMaybe<FloatQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly mode: InputMaybe<IntQueryOperatorInput>;
  readonly modifiedTime: InputMaybe<DateQueryOperatorInput>;
  readonly mtime: InputMaybe<DateQueryOperatorInput>;
  readonly mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly nlink: InputMaybe<IntQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly prettySize: InputMaybe<StringQueryOperatorInput>;
  readonly rdev: InputMaybe<IntQueryOperatorInput>;
  readonly relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  readonly relativePath: InputMaybe<StringQueryOperatorInput>;
  readonly root: InputMaybe<StringQueryOperatorInput>;
  readonly size: InputMaybe<IntQueryOperatorInput>;
  readonly sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  readonly uid: InputMaybe<IntQueryOperatorInput>;
};

type DirectoryGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<DirectoryEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<DirectoryGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Directory>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type DirectoryGroupConnection_distinctArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryGroupConnection_groupArgs = {
  field: DirectoryFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type DirectoryGroupConnection_maxArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryGroupConnection_minArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryGroupConnection_sumArgs = {
  field: DirectoryFieldsEnum;
};

type DirectorySortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<DirectoryFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type DocsJson = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly module: Maybe<DocsJsonModule>;
  readonly parent: Maybe<Node>;
  readonly type: Maybe<Scalars['String']>;
};

type DocsJsonConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<DocsJsonEdge>;
  readonly group: ReadonlyArray<DocsJsonGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<DocsJson>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type DocsJsonConnection_distinctArgs = {
  field: DocsJsonFieldsEnum;
};


type DocsJsonConnection_groupArgs = {
  field: DocsJsonFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type DocsJsonConnection_maxArgs = {
  field: DocsJsonFieldsEnum;
};


type DocsJsonConnection_minArgs = {
  field: DocsJsonFieldsEnum;
};


type DocsJsonConnection_sumArgs = {
  field: DocsJsonFieldsEnum;
};

type DocsJsonEdge = {
  readonly next: Maybe<DocsJson>;
  readonly node: DocsJson;
  readonly previous: Maybe<DocsJson>;
};

type DocsJsonFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'module.animation.absolutePath'
  | 'module.animation.accessTime'
  | 'module.animation.atime'
  | 'module.animation.atimeMs'
  | 'module.animation.base'
  | 'module.animation.birthTime'
  | 'module.animation.birthtime'
  | 'module.animation.birthtimeMs'
  | 'module.animation.blksize'
  | 'module.animation.blocks'
  | 'module.animation.changeTime'
  | 'module.animation.childAnimationsJson.children'
  | 'module.animation.childAnimationsJson.ddd'
  | 'module.animation.childAnimationsJson.fr'
  | 'module.animation.childAnimationsJson.h'
  | 'module.animation.childAnimationsJson.id'
  | 'module.animation.childAnimationsJson.ip'
  | 'module.animation.childAnimationsJson.layers'
  | 'module.animation.childAnimationsJson.nm'
  | 'module.animation.childAnimationsJson.op'
  | 'module.animation.childAnimationsJson.tgs'
  | 'module.animation.childAnimationsJson.v'
  | 'module.animation.childAnimationsJson.w'
  | 'module.animation.childDocsJson.children'
  | 'module.animation.childDocsJson.id'
  | 'module.animation.childDocsJson.type'
  | 'module.animation.childImageSharp.children'
  | 'module.animation.childImageSharp.gatsbyImageData'
  | 'module.animation.childImageSharp.id'
  | 'module.animation.childImagesJson.assets'
  | 'module.animation.childImagesJson.children'
  | 'module.animation.childImagesJson.ddd'
  | 'module.animation.childImagesJson.fr'
  | 'module.animation.childImagesJson.h'
  | 'module.animation.childImagesJson.id'
  | 'module.animation.childImagesJson.ip'
  | 'module.animation.childImagesJson.layers'
  | 'module.animation.childImagesJson.nm'
  | 'module.animation.childImagesJson.op'
  | 'module.animation.childImagesJson.v'
  | 'module.animation.childImagesJson.w'
  | 'module.animation.childPageDoc.children'
  | 'module.animation.childPageDoc.description'
  | 'module.animation.childPageDoc.id'
  | 'module.animation.childPageDoc.title'
  | 'module.animation.children'
  | 'module.animation.childrenAnimationsJson'
  | 'module.animation.childrenAnimationsJson.children'
  | 'module.animation.childrenAnimationsJson.ddd'
  | 'module.animation.childrenAnimationsJson.fr'
  | 'module.animation.childrenAnimationsJson.h'
  | 'module.animation.childrenAnimationsJson.id'
  | 'module.animation.childrenAnimationsJson.ip'
  | 'module.animation.childrenAnimationsJson.layers'
  | 'module.animation.childrenAnimationsJson.nm'
  | 'module.animation.childrenAnimationsJson.op'
  | 'module.animation.childrenAnimationsJson.tgs'
  | 'module.animation.childrenAnimationsJson.v'
  | 'module.animation.childrenAnimationsJson.w'
  | 'module.animation.childrenDocsJson'
  | 'module.animation.childrenDocsJson.children'
  | 'module.animation.childrenDocsJson.id'
  | 'module.animation.childrenDocsJson.type'
  | 'module.animation.childrenImageSharp'
  | 'module.animation.childrenImageSharp.children'
  | 'module.animation.childrenImageSharp.gatsbyImageData'
  | 'module.animation.childrenImageSharp.id'
  | 'module.animation.childrenImagesJson'
  | 'module.animation.childrenImagesJson.assets'
  | 'module.animation.childrenImagesJson.children'
  | 'module.animation.childrenImagesJson.ddd'
  | 'module.animation.childrenImagesJson.fr'
  | 'module.animation.childrenImagesJson.h'
  | 'module.animation.childrenImagesJson.id'
  | 'module.animation.childrenImagesJson.ip'
  | 'module.animation.childrenImagesJson.layers'
  | 'module.animation.childrenImagesJson.nm'
  | 'module.animation.childrenImagesJson.op'
  | 'module.animation.childrenImagesJson.v'
  | 'module.animation.childrenImagesJson.w'
  | 'module.animation.childrenPageDoc'
  | 'module.animation.childrenPageDoc.children'
  | 'module.animation.childrenPageDoc.description'
  | 'module.animation.childrenPageDoc.id'
  | 'module.animation.childrenPageDoc.title'
  | 'module.animation.children.children'
  | 'module.animation.children.id'
  | 'module.animation.ctime'
  | 'module.animation.ctimeMs'
  | 'module.animation.dev'
  | 'module.animation.dir'
  | 'module.animation.ext'
  | 'module.animation.extension'
  | 'module.animation.gid'
  | 'module.animation.id'
  | 'module.animation.ino'
  | 'module.animation.internal.content'
  | 'module.animation.internal.contentDigest'
  | 'module.animation.internal.description'
  | 'module.animation.internal.fieldOwners'
  | 'module.animation.internal.ignoreType'
  | 'module.animation.internal.mediaType'
  | 'module.animation.internal.owner'
  | 'module.animation.internal.type'
  | 'module.animation.mode'
  | 'module.animation.modifiedTime'
  | 'module.animation.mtime'
  | 'module.animation.mtimeMs'
  | 'module.animation.name'
  | 'module.animation.nlink'
  | 'module.animation.parent.children'
  | 'module.animation.parent.id'
  | 'module.animation.prettySize'
  | 'module.animation.publicURL'
  | 'module.animation.rdev'
  | 'module.animation.relativeDirectory'
  | 'module.animation.relativePath'
  | 'module.animation.root'
  | 'module.animation.size'
  | 'module.animation.sourceInstanceName'
  | 'module.animation.uid'
  | 'module.description'
  | 'module.image.absolutePath'
  | 'module.image.accessTime'
  | 'module.image.atime'
  | 'module.image.atimeMs'
  | 'module.image.base'
  | 'module.image.birthTime'
  | 'module.image.birthtime'
  | 'module.image.birthtimeMs'
  | 'module.image.blksize'
  | 'module.image.blocks'
  | 'module.image.changeTime'
  | 'module.image.childAnimationsJson.children'
  | 'module.image.childAnimationsJson.ddd'
  | 'module.image.childAnimationsJson.fr'
  | 'module.image.childAnimationsJson.h'
  | 'module.image.childAnimationsJson.id'
  | 'module.image.childAnimationsJson.ip'
  | 'module.image.childAnimationsJson.layers'
  | 'module.image.childAnimationsJson.nm'
  | 'module.image.childAnimationsJson.op'
  | 'module.image.childAnimationsJson.tgs'
  | 'module.image.childAnimationsJson.v'
  | 'module.image.childAnimationsJson.w'
  | 'module.image.childDocsJson.children'
  | 'module.image.childDocsJson.id'
  | 'module.image.childDocsJson.type'
  | 'module.image.childImageSharp.children'
  | 'module.image.childImageSharp.gatsbyImageData'
  | 'module.image.childImageSharp.id'
  | 'module.image.childImagesJson.assets'
  | 'module.image.childImagesJson.children'
  | 'module.image.childImagesJson.ddd'
  | 'module.image.childImagesJson.fr'
  | 'module.image.childImagesJson.h'
  | 'module.image.childImagesJson.id'
  | 'module.image.childImagesJson.ip'
  | 'module.image.childImagesJson.layers'
  | 'module.image.childImagesJson.nm'
  | 'module.image.childImagesJson.op'
  | 'module.image.childImagesJson.v'
  | 'module.image.childImagesJson.w'
  | 'module.image.childPageDoc.children'
  | 'module.image.childPageDoc.description'
  | 'module.image.childPageDoc.id'
  | 'module.image.childPageDoc.title'
  | 'module.image.children'
  | 'module.image.childrenAnimationsJson'
  | 'module.image.childrenAnimationsJson.children'
  | 'module.image.childrenAnimationsJson.ddd'
  | 'module.image.childrenAnimationsJson.fr'
  | 'module.image.childrenAnimationsJson.h'
  | 'module.image.childrenAnimationsJson.id'
  | 'module.image.childrenAnimationsJson.ip'
  | 'module.image.childrenAnimationsJson.layers'
  | 'module.image.childrenAnimationsJson.nm'
  | 'module.image.childrenAnimationsJson.op'
  | 'module.image.childrenAnimationsJson.tgs'
  | 'module.image.childrenAnimationsJson.v'
  | 'module.image.childrenAnimationsJson.w'
  | 'module.image.childrenDocsJson'
  | 'module.image.childrenDocsJson.children'
  | 'module.image.childrenDocsJson.id'
  | 'module.image.childrenDocsJson.type'
  | 'module.image.childrenImageSharp'
  | 'module.image.childrenImageSharp.children'
  | 'module.image.childrenImageSharp.gatsbyImageData'
  | 'module.image.childrenImageSharp.id'
  | 'module.image.childrenImagesJson'
  | 'module.image.childrenImagesJson.assets'
  | 'module.image.childrenImagesJson.children'
  | 'module.image.childrenImagesJson.ddd'
  | 'module.image.childrenImagesJson.fr'
  | 'module.image.childrenImagesJson.h'
  | 'module.image.childrenImagesJson.id'
  | 'module.image.childrenImagesJson.ip'
  | 'module.image.childrenImagesJson.layers'
  | 'module.image.childrenImagesJson.nm'
  | 'module.image.childrenImagesJson.op'
  | 'module.image.childrenImagesJson.v'
  | 'module.image.childrenImagesJson.w'
  | 'module.image.childrenPageDoc'
  | 'module.image.childrenPageDoc.children'
  | 'module.image.childrenPageDoc.description'
  | 'module.image.childrenPageDoc.id'
  | 'module.image.childrenPageDoc.title'
  | 'module.image.children.children'
  | 'module.image.children.id'
  | 'module.image.ctime'
  | 'module.image.ctimeMs'
  | 'module.image.dev'
  | 'module.image.dir'
  | 'module.image.ext'
  | 'module.image.extension'
  | 'module.image.gid'
  | 'module.image.id'
  | 'module.image.ino'
  | 'module.image.internal.content'
  | 'module.image.internal.contentDigest'
  | 'module.image.internal.description'
  | 'module.image.internal.fieldOwners'
  | 'module.image.internal.ignoreType'
  | 'module.image.internal.mediaType'
  | 'module.image.internal.owner'
  | 'module.image.internal.type'
  | 'module.image.mode'
  | 'module.image.modifiedTime'
  | 'module.image.mtime'
  | 'module.image.mtimeMs'
  | 'module.image.name'
  | 'module.image.nlink'
  | 'module.image.parent.children'
  | 'module.image.parent.id'
  | 'module.image.prettySize'
  | 'module.image.publicURL'
  | 'module.image.rdev'
  | 'module.image.relativeDirectory'
  | 'module.image.relativePath'
  | 'module.image.root'
  | 'module.image.size'
  | 'module.image.sourceInstanceName'
  | 'module.image.uid'
  | 'module.title'
  | 'module.video.absolutePath'
  | 'module.video.accessTime'
  | 'module.video.atime'
  | 'module.video.atimeMs'
  | 'module.video.base'
  | 'module.video.birthTime'
  | 'module.video.birthtime'
  | 'module.video.birthtimeMs'
  | 'module.video.blksize'
  | 'module.video.blocks'
  | 'module.video.changeTime'
  | 'module.video.childAnimationsJson.children'
  | 'module.video.childAnimationsJson.ddd'
  | 'module.video.childAnimationsJson.fr'
  | 'module.video.childAnimationsJson.h'
  | 'module.video.childAnimationsJson.id'
  | 'module.video.childAnimationsJson.ip'
  | 'module.video.childAnimationsJson.layers'
  | 'module.video.childAnimationsJson.nm'
  | 'module.video.childAnimationsJson.op'
  | 'module.video.childAnimationsJson.tgs'
  | 'module.video.childAnimationsJson.v'
  | 'module.video.childAnimationsJson.w'
  | 'module.video.childDocsJson.children'
  | 'module.video.childDocsJson.id'
  | 'module.video.childDocsJson.type'
  | 'module.video.childImageSharp.children'
  | 'module.video.childImageSharp.gatsbyImageData'
  | 'module.video.childImageSharp.id'
  | 'module.video.childImagesJson.assets'
  | 'module.video.childImagesJson.children'
  | 'module.video.childImagesJson.ddd'
  | 'module.video.childImagesJson.fr'
  | 'module.video.childImagesJson.h'
  | 'module.video.childImagesJson.id'
  | 'module.video.childImagesJson.ip'
  | 'module.video.childImagesJson.layers'
  | 'module.video.childImagesJson.nm'
  | 'module.video.childImagesJson.op'
  | 'module.video.childImagesJson.v'
  | 'module.video.childImagesJson.w'
  | 'module.video.childPageDoc.children'
  | 'module.video.childPageDoc.description'
  | 'module.video.childPageDoc.id'
  | 'module.video.childPageDoc.title'
  | 'module.video.children'
  | 'module.video.childrenAnimationsJson'
  | 'module.video.childrenAnimationsJson.children'
  | 'module.video.childrenAnimationsJson.ddd'
  | 'module.video.childrenAnimationsJson.fr'
  | 'module.video.childrenAnimationsJson.h'
  | 'module.video.childrenAnimationsJson.id'
  | 'module.video.childrenAnimationsJson.ip'
  | 'module.video.childrenAnimationsJson.layers'
  | 'module.video.childrenAnimationsJson.nm'
  | 'module.video.childrenAnimationsJson.op'
  | 'module.video.childrenAnimationsJson.tgs'
  | 'module.video.childrenAnimationsJson.v'
  | 'module.video.childrenAnimationsJson.w'
  | 'module.video.childrenDocsJson'
  | 'module.video.childrenDocsJson.children'
  | 'module.video.childrenDocsJson.id'
  | 'module.video.childrenDocsJson.type'
  | 'module.video.childrenImageSharp'
  | 'module.video.childrenImageSharp.children'
  | 'module.video.childrenImageSharp.gatsbyImageData'
  | 'module.video.childrenImageSharp.id'
  | 'module.video.childrenImagesJson'
  | 'module.video.childrenImagesJson.assets'
  | 'module.video.childrenImagesJson.children'
  | 'module.video.childrenImagesJson.ddd'
  | 'module.video.childrenImagesJson.fr'
  | 'module.video.childrenImagesJson.h'
  | 'module.video.childrenImagesJson.id'
  | 'module.video.childrenImagesJson.ip'
  | 'module.video.childrenImagesJson.layers'
  | 'module.video.childrenImagesJson.nm'
  | 'module.video.childrenImagesJson.op'
  | 'module.video.childrenImagesJson.v'
  | 'module.video.childrenImagesJson.w'
  | 'module.video.childrenPageDoc'
  | 'module.video.childrenPageDoc.children'
  | 'module.video.childrenPageDoc.description'
  | 'module.video.childrenPageDoc.id'
  | 'module.video.childrenPageDoc.title'
  | 'module.video.children.children'
  | 'module.video.children.id'
  | 'module.video.ctime'
  | 'module.video.ctimeMs'
  | 'module.video.dev'
  | 'module.video.dir'
  | 'module.video.ext'
  | 'module.video.extension'
  | 'module.video.gid'
  | 'module.video.id'
  | 'module.video.ino'
  | 'module.video.internal.content'
  | 'module.video.internal.contentDigest'
  | 'module.video.internal.description'
  | 'module.video.internal.fieldOwners'
  | 'module.video.internal.ignoreType'
  | 'module.video.internal.mediaType'
  | 'module.video.internal.owner'
  | 'module.video.internal.type'
  | 'module.video.mode'
  | 'module.video.modifiedTime'
  | 'module.video.mtime'
  | 'module.video.mtimeMs'
  | 'module.video.name'
  | 'module.video.nlink'
  | 'module.video.parent.children'
  | 'module.video.parent.id'
  | 'module.video.prettySize'
  | 'module.video.publicURL'
  | 'module.video.rdev'
  | 'module.video.relativeDirectory'
  | 'module.video.relativePath'
  | 'module.video.root'
  | 'module.video.size'
  | 'module.video.sourceInstanceName'
  | 'module.video.uid'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'type';

type DocsJsonFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly module: InputMaybe<DocsJsonModuleFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type DocsJsonFilterListInput = {
  readonly elemMatch: InputMaybe<DocsJsonFilterInput>;
};

type DocsJsonGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<DocsJsonEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<DocsJsonGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<DocsJson>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type DocsJsonGroupConnection_distinctArgs = {
  field: DocsJsonFieldsEnum;
};


type DocsJsonGroupConnection_groupArgs = {
  field: DocsJsonFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type DocsJsonGroupConnection_maxArgs = {
  field: DocsJsonFieldsEnum;
};


type DocsJsonGroupConnection_minArgs = {
  field: DocsJsonFieldsEnum;
};


type DocsJsonGroupConnection_sumArgs = {
  field: DocsJsonFieldsEnum;
};

type DocsJsonModule = {
  readonly animation: Maybe<File>;
  readonly description: Maybe<Scalars['String']>;
  readonly image: Maybe<File>;
  readonly title: Maybe<Scalars['String']>;
  readonly video: Maybe<File>;
};

type DocsJsonModuleFilterInput = {
  readonly animation: InputMaybe<FileFilterInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly image: InputMaybe<FileFilterInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly video: InputMaybe<FileFilterInput>;
};

type DocsJsonSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<DocsJsonFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type DuotoneGradient = {
  readonly highlight: Scalars['String'];
  readonly opacity: InputMaybe<Scalars['Int']>;
  readonly shadow: Scalars['String'];
};

type ExtractedLottie = Node & {
  readonly animationJson: Scalars['String'];
  readonly children: ReadonlyArray<Node>;
  readonly content: Scalars['String'];
  readonly encoded: Scalars['String'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
};

type ExtractedLottieConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ExtractedLottieEdge>;
  readonly group: ReadonlyArray<ExtractedLottieGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ExtractedLottie>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ExtractedLottieConnection_distinctArgs = {
  field: ExtractedLottieFieldsEnum;
};


type ExtractedLottieConnection_groupArgs = {
  field: ExtractedLottieFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ExtractedLottieConnection_maxArgs = {
  field: ExtractedLottieFieldsEnum;
};


type ExtractedLottieConnection_minArgs = {
  field: ExtractedLottieFieldsEnum;
};


type ExtractedLottieConnection_sumArgs = {
  field: ExtractedLottieFieldsEnum;
};

type ExtractedLottieEdge = {
  readonly next: Maybe<ExtractedLottie>;
  readonly node: ExtractedLottie;
  readonly previous: Maybe<ExtractedLottie>;
};

type ExtractedLottieFieldsEnum =
  | 'animationJson'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'content'
  | 'encoded'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id';

type ExtractedLottieFilterInput = {
  readonly animationJson: InputMaybe<StringQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly content: InputMaybe<StringQueryOperatorInput>;
  readonly encoded: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type ExtractedLottieGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ExtractedLottieEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ExtractedLottieGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ExtractedLottie>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ExtractedLottieGroupConnection_distinctArgs = {
  field: ExtractedLottieFieldsEnum;
};


type ExtractedLottieGroupConnection_groupArgs = {
  field: ExtractedLottieFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ExtractedLottieGroupConnection_maxArgs = {
  field: ExtractedLottieFieldsEnum;
};


type ExtractedLottieGroupConnection_minArgs = {
  field: ExtractedLottieFieldsEnum;
};


type ExtractedLottieGroupConnection_sumArgs = {
  field: ExtractedLottieFieldsEnum;
};

type ExtractedLottieSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<ExtractedLottieFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type ExtractedSvg = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly content: Scalars['String'];
  readonly encoded: Scalars['String'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
  readonly path: Scalars['String'];
};

type ExtractedSvgConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ExtractedSvgEdge>;
  readonly group: ReadonlyArray<ExtractedSvgGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ExtractedSvg>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ExtractedSvgConnection_distinctArgs = {
  field: ExtractedSvgFieldsEnum;
};


type ExtractedSvgConnection_groupArgs = {
  field: ExtractedSvgFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ExtractedSvgConnection_maxArgs = {
  field: ExtractedSvgFieldsEnum;
};


type ExtractedSvgConnection_minArgs = {
  field: ExtractedSvgFieldsEnum;
};


type ExtractedSvgConnection_sumArgs = {
  field: ExtractedSvgFieldsEnum;
};

type ExtractedSvgEdge = {
  readonly next: Maybe<ExtractedSvg>;
  readonly node: ExtractedSvg;
  readonly previous: Maybe<ExtractedSvg>;
};

type ExtractedSvgFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'content'
  | 'encoded'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'path';

type ExtractedSvgFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly content: InputMaybe<StringQueryOperatorInput>;
  readonly encoded: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly path: InputMaybe<StringQueryOperatorInput>;
};

type ExtractedSvgGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ExtractedSvgEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ExtractedSvgGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ExtractedSvg>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ExtractedSvgGroupConnection_distinctArgs = {
  field: ExtractedSvgFieldsEnum;
};


type ExtractedSvgGroupConnection_groupArgs = {
  field: ExtractedSvgFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ExtractedSvgGroupConnection_maxArgs = {
  field: ExtractedSvgFieldsEnum;
};


type ExtractedSvgGroupConnection_minArgs = {
  field: ExtractedSvgFieldsEnum;
};


type ExtractedSvgGroupConnection_sumArgs = {
  field: ExtractedSvgFieldsEnum;
};

type ExtractedSvgSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<ExtractedSvgFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type File = Node & {
  readonly absolutePath: Scalars['String'];
  readonly accessTime: Scalars['Date'];
  readonly atime: Scalars['Date'];
  readonly atimeMs: Scalars['Float'];
  readonly base: Scalars['String'];
  readonly birthTime: Scalars['Date'];
  /** @deprecated Use `birthTime` instead */
  readonly birthtime: Maybe<Scalars['Date']>;
  /** @deprecated Use `birthTime` instead */
  readonly birthtimeMs: Maybe<Scalars['Float']>;
  readonly blksize: Maybe<Scalars['Int']>;
  readonly blocks: Maybe<Scalars['Int']>;
  readonly changeTime: Scalars['Date'];
  /** Returns the first child node of type AnimationsJson or null if there are no children of given type on this node */
  readonly childAnimationsJson: Maybe<AnimationsJson>;
  /** Returns the first child node of type DocsJson or null if there are no children of given type on this node */
  readonly childDocsJson: Maybe<DocsJson>;
  /** Returns the first child node of type ImageSharp or null if there are no children of given type on this node */
  readonly childImageSharp: Maybe<ImageSharp>;
  /** Returns the first child node of type ImagesJson or null if there are no children of given type on this node */
  readonly childImagesJson: Maybe<ImagesJson>;
  /** Returns the first child node of type PageDoc or null if there are no children of given type on this node */
  readonly childPageDoc: Maybe<PageDoc>;
  readonly children: ReadonlyArray<Node>;
  /** Returns all children nodes filtered by type AnimationsJson */
  readonly childrenAnimationsJson: Maybe<ReadonlyArray<Maybe<AnimationsJson>>>;
  /** Returns all children nodes filtered by type DocsJson */
  readonly childrenDocsJson: Maybe<ReadonlyArray<Maybe<DocsJson>>>;
  /** Returns all children nodes filtered by type ImageSharp */
  readonly childrenImageSharp: Maybe<ReadonlyArray<Maybe<ImageSharp>>>;
  /** Returns all children nodes filtered by type ImagesJson */
  readonly childrenImagesJson: Maybe<ReadonlyArray<Maybe<ImagesJson>>>;
  /** Returns all children nodes filtered by type PageDoc */
  readonly childrenPageDoc: Maybe<ReadonlyArray<Maybe<PageDoc>>>;
  readonly ctime: Scalars['Date'];
  readonly ctimeMs: Scalars['Float'];
  readonly dev: Scalars['Int'];
  readonly dir: Scalars['String'];
  readonly ext: Scalars['String'];
  readonly extension: Scalars['String'];
  readonly gid: Scalars['Int'];
  readonly id: Scalars['ID'];
  readonly ino: Scalars['Float'];
  readonly internal: Internal;
  readonly lottie: Maybe<ExtractedLottie>;
  readonly mode: Scalars['Int'];
  readonly modifiedTime: Scalars['Date'];
  readonly mtime: Scalars['Date'];
  readonly mtimeMs: Scalars['Float'];
  readonly name: Scalars['String'];
  readonly nlink: Scalars['Int'];
  readonly parent: Maybe<Node>;
  readonly prettySize: Scalars['String'];
  /** Copy file to static directory and return public url to it */
  readonly publicURL: Maybe<Scalars['String']>;
  readonly rdev: Scalars['Int'];
  readonly relativeDirectory: Scalars['String'];
  readonly relativePath: Scalars['String'];
  readonly root: Scalars['String'];
  readonly size: Scalars['Int'];
  readonly sourceInstanceName: Scalars['String'];
  readonly svg: Maybe<ExtractedSvg>;
  readonly uid: Scalars['Int'];
};


type File_accessTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_atimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_birthTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_changeTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_ctimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_modifiedTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_mtimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type FileConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<FileEdge>;
  readonly group: ReadonlyArray<FileGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<File>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type FileConnection_distinctArgs = {
  field: FileFieldsEnum;
};


type FileConnection_groupArgs = {
  field: FileFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type FileConnection_maxArgs = {
  field: FileFieldsEnum;
};


type FileConnection_minArgs = {
  field: FileFieldsEnum;
};


type FileConnection_sumArgs = {
  field: FileFieldsEnum;
};

type FileEdge = {
  readonly next: Maybe<File>;
  readonly node: File;
  readonly previous: Maybe<File>;
};

type FileFieldsEnum =
  | 'absolutePath'
  | 'accessTime'
  | 'atime'
  | 'atimeMs'
  | 'base'
  | 'birthTime'
  | 'birthtime'
  | 'birthtimeMs'
  | 'blksize'
  | 'blocks'
  | 'changeTime'
  | 'childAnimationsJson.children'
  | 'childAnimationsJson.children.children'
  | 'childAnimationsJson.children.children.children'
  | 'childAnimationsJson.children.children.id'
  | 'childAnimationsJson.children.id'
  | 'childAnimationsJson.children.internal.content'
  | 'childAnimationsJson.children.internal.contentDigest'
  | 'childAnimationsJson.children.internal.description'
  | 'childAnimationsJson.children.internal.fieldOwners'
  | 'childAnimationsJson.children.internal.ignoreType'
  | 'childAnimationsJson.children.internal.mediaType'
  | 'childAnimationsJson.children.internal.owner'
  | 'childAnimationsJson.children.internal.type'
  | 'childAnimationsJson.children.parent.children'
  | 'childAnimationsJson.children.parent.id'
  | 'childAnimationsJson.ddd'
  | 'childAnimationsJson.fr'
  | 'childAnimationsJson.h'
  | 'childAnimationsJson.id'
  | 'childAnimationsJson.internal.content'
  | 'childAnimationsJson.internal.contentDigest'
  | 'childAnimationsJson.internal.description'
  | 'childAnimationsJson.internal.fieldOwners'
  | 'childAnimationsJson.internal.ignoreType'
  | 'childAnimationsJson.internal.mediaType'
  | 'childAnimationsJson.internal.owner'
  | 'childAnimationsJson.internal.type'
  | 'childAnimationsJson.ip'
  | 'childAnimationsJson.layers'
  | 'childAnimationsJson.layers.ao'
  | 'childAnimationsJson.layers.bm'
  | 'childAnimationsJson.layers.ddd'
  | 'childAnimationsJson.layers.ind'
  | 'childAnimationsJson.layers.ip'
  | 'childAnimationsJson.layers.nm'
  | 'childAnimationsJson.layers.op'
  | 'childAnimationsJson.layers.shapes'
  | 'childAnimationsJson.layers.shapes.bm'
  | 'childAnimationsJson.layers.shapes.hd'
  | 'childAnimationsJson.layers.shapes.it'
  | 'childAnimationsJson.layers.shapes.nm'
  | 'childAnimationsJson.layers.shapes.ty'
  | 'childAnimationsJson.layers.sr'
  | 'childAnimationsJson.layers.st'
  | 'childAnimationsJson.layers.ty'
  | 'childAnimationsJson.nm'
  | 'childAnimationsJson.op'
  | 'childAnimationsJson.parent.children'
  | 'childAnimationsJson.parent.children.children'
  | 'childAnimationsJson.parent.children.id'
  | 'childAnimationsJson.parent.id'
  | 'childAnimationsJson.parent.internal.content'
  | 'childAnimationsJson.parent.internal.contentDigest'
  | 'childAnimationsJson.parent.internal.description'
  | 'childAnimationsJson.parent.internal.fieldOwners'
  | 'childAnimationsJson.parent.internal.ignoreType'
  | 'childAnimationsJson.parent.internal.mediaType'
  | 'childAnimationsJson.parent.internal.owner'
  | 'childAnimationsJson.parent.internal.type'
  | 'childAnimationsJson.parent.parent.children'
  | 'childAnimationsJson.parent.parent.id'
  | 'childAnimationsJson.tgs'
  | 'childAnimationsJson.v'
  | 'childAnimationsJson.w'
  | 'childDocsJson.children'
  | 'childDocsJson.children.children'
  | 'childDocsJson.children.children.children'
  | 'childDocsJson.children.children.id'
  | 'childDocsJson.children.id'
  | 'childDocsJson.children.internal.content'
  | 'childDocsJson.children.internal.contentDigest'
  | 'childDocsJson.children.internal.description'
  | 'childDocsJson.children.internal.fieldOwners'
  | 'childDocsJson.children.internal.ignoreType'
  | 'childDocsJson.children.internal.mediaType'
  | 'childDocsJson.children.internal.owner'
  | 'childDocsJson.children.internal.type'
  | 'childDocsJson.children.parent.children'
  | 'childDocsJson.children.parent.id'
  | 'childDocsJson.id'
  | 'childDocsJson.internal.content'
  | 'childDocsJson.internal.contentDigest'
  | 'childDocsJson.internal.description'
  | 'childDocsJson.internal.fieldOwners'
  | 'childDocsJson.internal.ignoreType'
  | 'childDocsJson.internal.mediaType'
  | 'childDocsJson.internal.owner'
  | 'childDocsJson.internal.type'
  | 'childDocsJson.module.animation.absolutePath'
  | 'childDocsJson.module.animation.accessTime'
  | 'childDocsJson.module.animation.atime'
  | 'childDocsJson.module.animation.atimeMs'
  | 'childDocsJson.module.animation.base'
  | 'childDocsJson.module.animation.birthTime'
  | 'childDocsJson.module.animation.birthtime'
  | 'childDocsJson.module.animation.birthtimeMs'
  | 'childDocsJson.module.animation.blksize'
  | 'childDocsJson.module.animation.blocks'
  | 'childDocsJson.module.animation.changeTime'
  | 'childDocsJson.module.animation.children'
  | 'childDocsJson.module.animation.childrenAnimationsJson'
  | 'childDocsJson.module.animation.childrenDocsJson'
  | 'childDocsJson.module.animation.childrenImageSharp'
  | 'childDocsJson.module.animation.childrenImagesJson'
  | 'childDocsJson.module.animation.childrenPageDoc'
  | 'childDocsJson.module.animation.ctime'
  | 'childDocsJson.module.animation.ctimeMs'
  | 'childDocsJson.module.animation.dev'
  | 'childDocsJson.module.animation.dir'
  | 'childDocsJson.module.animation.ext'
  | 'childDocsJson.module.animation.extension'
  | 'childDocsJson.module.animation.gid'
  | 'childDocsJson.module.animation.id'
  | 'childDocsJson.module.animation.ino'
  | 'childDocsJson.module.animation.mode'
  | 'childDocsJson.module.animation.modifiedTime'
  | 'childDocsJson.module.animation.mtime'
  | 'childDocsJson.module.animation.mtimeMs'
  | 'childDocsJson.module.animation.name'
  | 'childDocsJson.module.animation.nlink'
  | 'childDocsJson.module.animation.prettySize'
  | 'childDocsJson.module.animation.publicURL'
  | 'childDocsJson.module.animation.rdev'
  | 'childDocsJson.module.animation.relativeDirectory'
  | 'childDocsJson.module.animation.relativePath'
  | 'childDocsJson.module.animation.root'
  | 'childDocsJson.module.animation.size'
  | 'childDocsJson.module.animation.sourceInstanceName'
  | 'childDocsJson.module.animation.uid'
  | 'childDocsJson.module.description'
  | 'childDocsJson.module.image.absolutePath'
  | 'childDocsJson.module.image.accessTime'
  | 'childDocsJson.module.image.atime'
  | 'childDocsJson.module.image.atimeMs'
  | 'childDocsJson.module.image.base'
  | 'childDocsJson.module.image.birthTime'
  | 'childDocsJson.module.image.birthtime'
  | 'childDocsJson.module.image.birthtimeMs'
  | 'childDocsJson.module.image.blksize'
  | 'childDocsJson.module.image.blocks'
  | 'childDocsJson.module.image.changeTime'
  | 'childDocsJson.module.image.children'
  | 'childDocsJson.module.image.childrenAnimationsJson'
  | 'childDocsJson.module.image.childrenDocsJson'
  | 'childDocsJson.module.image.childrenImageSharp'
  | 'childDocsJson.module.image.childrenImagesJson'
  | 'childDocsJson.module.image.childrenPageDoc'
  | 'childDocsJson.module.image.ctime'
  | 'childDocsJson.module.image.ctimeMs'
  | 'childDocsJson.module.image.dev'
  | 'childDocsJson.module.image.dir'
  | 'childDocsJson.module.image.ext'
  | 'childDocsJson.module.image.extension'
  | 'childDocsJson.module.image.gid'
  | 'childDocsJson.module.image.id'
  | 'childDocsJson.module.image.ino'
  | 'childDocsJson.module.image.mode'
  | 'childDocsJson.module.image.modifiedTime'
  | 'childDocsJson.module.image.mtime'
  | 'childDocsJson.module.image.mtimeMs'
  | 'childDocsJson.module.image.name'
  | 'childDocsJson.module.image.nlink'
  | 'childDocsJson.module.image.prettySize'
  | 'childDocsJson.module.image.publicURL'
  | 'childDocsJson.module.image.rdev'
  | 'childDocsJson.module.image.relativeDirectory'
  | 'childDocsJson.module.image.relativePath'
  | 'childDocsJson.module.image.root'
  | 'childDocsJson.module.image.size'
  | 'childDocsJson.module.image.sourceInstanceName'
  | 'childDocsJson.module.image.uid'
  | 'childDocsJson.module.title'
  | 'childDocsJson.module.video.absolutePath'
  | 'childDocsJson.module.video.accessTime'
  | 'childDocsJson.module.video.atime'
  | 'childDocsJson.module.video.atimeMs'
  | 'childDocsJson.module.video.base'
  | 'childDocsJson.module.video.birthTime'
  | 'childDocsJson.module.video.birthtime'
  | 'childDocsJson.module.video.birthtimeMs'
  | 'childDocsJson.module.video.blksize'
  | 'childDocsJson.module.video.blocks'
  | 'childDocsJson.module.video.changeTime'
  | 'childDocsJson.module.video.children'
  | 'childDocsJson.module.video.childrenAnimationsJson'
  | 'childDocsJson.module.video.childrenDocsJson'
  | 'childDocsJson.module.video.childrenImageSharp'
  | 'childDocsJson.module.video.childrenImagesJson'
  | 'childDocsJson.module.video.childrenPageDoc'
  | 'childDocsJson.module.video.ctime'
  | 'childDocsJson.module.video.ctimeMs'
  | 'childDocsJson.module.video.dev'
  | 'childDocsJson.module.video.dir'
  | 'childDocsJson.module.video.ext'
  | 'childDocsJson.module.video.extension'
  | 'childDocsJson.module.video.gid'
  | 'childDocsJson.module.video.id'
  | 'childDocsJson.module.video.ino'
  | 'childDocsJson.module.video.mode'
  | 'childDocsJson.module.video.modifiedTime'
  | 'childDocsJson.module.video.mtime'
  | 'childDocsJson.module.video.mtimeMs'
  | 'childDocsJson.module.video.name'
  | 'childDocsJson.module.video.nlink'
  | 'childDocsJson.module.video.prettySize'
  | 'childDocsJson.module.video.publicURL'
  | 'childDocsJson.module.video.rdev'
  | 'childDocsJson.module.video.relativeDirectory'
  | 'childDocsJson.module.video.relativePath'
  | 'childDocsJson.module.video.root'
  | 'childDocsJson.module.video.size'
  | 'childDocsJson.module.video.sourceInstanceName'
  | 'childDocsJson.module.video.uid'
  | 'childDocsJson.parent.children'
  | 'childDocsJson.parent.children.children'
  | 'childDocsJson.parent.children.id'
  | 'childDocsJson.parent.id'
  | 'childDocsJson.parent.internal.content'
  | 'childDocsJson.parent.internal.contentDigest'
  | 'childDocsJson.parent.internal.description'
  | 'childDocsJson.parent.internal.fieldOwners'
  | 'childDocsJson.parent.internal.ignoreType'
  | 'childDocsJson.parent.internal.mediaType'
  | 'childDocsJson.parent.internal.owner'
  | 'childDocsJson.parent.internal.type'
  | 'childDocsJson.parent.parent.children'
  | 'childDocsJson.parent.parent.id'
  | 'childDocsJson.type'
  | 'childImageSharp.children'
  | 'childImageSharp.children.children'
  | 'childImageSharp.children.children.children'
  | 'childImageSharp.children.children.id'
  | 'childImageSharp.children.id'
  | 'childImageSharp.children.internal.content'
  | 'childImageSharp.children.internal.contentDigest'
  | 'childImageSharp.children.internal.description'
  | 'childImageSharp.children.internal.fieldOwners'
  | 'childImageSharp.children.internal.ignoreType'
  | 'childImageSharp.children.internal.mediaType'
  | 'childImageSharp.children.internal.owner'
  | 'childImageSharp.children.internal.type'
  | 'childImageSharp.children.parent.children'
  | 'childImageSharp.children.parent.id'
  | 'childImageSharp.fixed.aspectRatio'
  | 'childImageSharp.fixed.base64'
  | 'childImageSharp.fixed.height'
  | 'childImageSharp.fixed.originalName'
  | 'childImageSharp.fixed.src'
  | 'childImageSharp.fixed.srcSet'
  | 'childImageSharp.fixed.srcSetWebp'
  | 'childImageSharp.fixed.srcWebp'
  | 'childImageSharp.fixed.tracedSVG'
  | 'childImageSharp.fixed.width'
  | 'childImageSharp.fluid.aspectRatio'
  | 'childImageSharp.fluid.base64'
  | 'childImageSharp.fluid.originalImg'
  | 'childImageSharp.fluid.originalName'
  | 'childImageSharp.fluid.presentationHeight'
  | 'childImageSharp.fluid.presentationWidth'
  | 'childImageSharp.fluid.sizes'
  | 'childImageSharp.fluid.src'
  | 'childImageSharp.fluid.srcSet'
  | 'childImageSharp.fluid.srcSetWebp'
  | 'childImageSharp.fluid.srcWebp'
  | 'childImageSharp.fluid.tracedSVG'
  | 'childImageSharp.gatsbyImageData'
  | 'childImageSharp.id'
  | 'childImageSharp.internal.content'
  | 'childImageSharp.internal.contentDigest'
  | 'childImageSharp.internal.description'
  | 'childImageSharp.internal.fieldOwners'
  | 'childImageSharp.internal.ignoreType'
  | 'childImageSharp.internal.mediaType'
  | 'childImageSharp.internal.owner'
  | 'childImageSharp.internal.type'
  | 'childImageSharp.original.height'
  | 'childImageSharp.original.src'
  | 'childImageSharp.original.width'
  | 'childImageSharp.parent.children'
  | 'childImageSharp.parent.children.children'
  | 'childImageSharp.parent.children.id'
  | 'childImageSharp.parent.id'
  | 'childImageSharp.parent.internal.content'
  | 'childImageSharp.parent.internal.contentDigest'
  | 'childImageSharp.parent.internal.description'
  | 'childImageSharp.parent.internal.fieldOwners'
  | 'childImageSharp.parent.internal.ignoreType'
  | 'childImageSharp.parent.internal.mediaType'
  | 'childImageSharp.parent.internal.owner'
  | 'childImageSharp.parent.internal.type'
  | 'childImageSharp.parent.parent.children'
  | 'childImageSharp.parent.parent.id'
  | 'childImageSharp.resize.aspectRatio'
  | 'childImageSharp.resize.height'
  | 'childImageSharp.resize.originalName'
  | 'childImageSharp.resize.src'
  | 'childImageSharp.resize.tracedSVG'
  | 'childImageSharp.resize.width'
  | 'childImagesJson.assets'
  | 'childImagesJson.assets.id'
  | 'childImagesJson.assets.layers'
  | 'childImagesJson.assets.layers.ao'
  | 'childImagesJson.assets.layers.bm'
  | 'childImagesJson.assets.layers.ddd'
  | 'childImagesJson.assets.layers.hasMask'
  | 'childImagesJson.assets.layers.ind'
  | 'childImagesJson.assets.layers.ip'
  | 'childImagesJson.assets.layers.masksProperties'
  | 'childImagesJson.assets.layers.nm'
  | 'childImagesJson.assets.layers.op'
  | 'childImagesJson.assets.layers.parent'
  | 'childImagesJson.assets.layers.shapes'
  | 'childImagesJson.assets.layers.sr'
  | 'childImagesJson.assets.layers.st'
  | 'childImagesJson.assets.layers.ty'
  | 'childImagesJson.children'
  | 'childImagesJson.children.children'
  | 'childImagesJson.children.children.children'
  | 'childImagesJson.children.children.id'
  | 'childImagesJson.children.id'
  | 'childImagesJson.children.internal.content'
  | 'childImagesJson.children.internal.contentDigest'
  | 'childImagesJson.children.internal.description'
  | 'childImagesJson.children.internal.fieldOwners'
  | 'childImagesJson.children.internal.ignoreType'
  | 'childImagesJson.children.internal.mediaType'
  | 'childImagesJson.children.internal.owner'
  | 'childImagesJson.children.internal.type'
  | 'childImagesJson.children.parent.children'
  | 'childImagesJson.children.parent.id'
  | 'childImagesJson.ddd'
  | 'childImagesJson.fr'
  | 'childImagesJson.h'
  | 'childImagesJson.id'
  | 'childImagesJson.internal.content'
  | 'childImagesJson.internal.contentDigest'
  | 'childImagesJson.internal.description'
  | 'childImagesJson.internal.fieldOwners'
  | 'childImagesJson.internal.ignoreType'
  | 'childImagesJson.internal.mediaType'
  | 'childImagesJson.internal.owner'
  | 'childImagesJson.internal.type'
  | 'childImagesJson.ip'
  | 'childImagesJson.layers'
  | 'childImagesJson.layers.ao'
  | 'childImagesJson.layers.bm'
  | 'childImagesJson.layers.ddd'
  | 'childImagesJson.layers.h'
  | 'childImagesJson.layers.ind'
  | 'childImagesJson.layers.ip'
  | 'childImagesJson.layers.nm'
  | 'childImagesJson.layers.op'
  | 'childImagesJson.layers.parent'
  | 'childImagesJson.layers.refId'
  | 'childImagesJson.layers.shapes'
  | 'childImagesJson.layers.shapes.bm'
  | 'childImagesJson.layers.shapes.cix'
  | 'childImagesJson.layers.shapes.hd'
  | 'childImagesJson.layers.shapes.it'
  | 'childImagesJson.layers.shapes.ix'
  | 'childImagesJson.layers.shapes.mn'
  | 'childImagesJson.layers.shapes.nm'
  | 'childImagesJson.layers.shapes.np'
  | 'childImagesJson.layers.shapes.ty'
  | 'childImagesJson.layers.sr'
  | 'childImagesJson.layers.st'
  | 'childImagesJson.layers.ty'
  | 'childImagesJson.layers.w'
  | 'childImagesJson.nm'
  | 'childImagesJson.op'
  | 'childImagesJson.parent.children'
  | 'childImagesJson.parent.children.children'
  | 'childImagesJson.parent.children.id'
  | 'childImagesJson.parent.id'
  | 'childImagesJson.parent.internal.content'
  | 'childImagesJson.parent.internal.contentDigest'
  | 'childImagesJson.parent.internal.description'
  | 'childImagesJson.parent.internal.fieldOwners'
  | 'childImagesJson.parent.internal.ignoreType'
  | 'childImagesJson.parent.internal.mediaType'
  | 'childImagesJson.parent.internal.owner'
  | 'childImagesJson.parent.internal.type'
  | 'childImagesJson.parent.parent.children'
  | 'childImagesJson.parent.parent.id'
  | 'childImagesJson.v'
  | 'childImagesJson.w'
  | 'childPageDoc.animation.absolutePath'
  | 'childPageDoc.animation.accessTime'
  | 'childPageDoc.animation.atime'
  | 'childPageDoc.animation.atimeMs'
  | 'childPageDoc.animation.base'
  | 'childPageDoc.animation.birthTime'
  | 'childPageDoc.animation.birthtime'
  | 'childPageDoc.animation.birthtimeMs'
  | 'childPageDoc.animation.blksize'
  | 'childPageDoc.animation.blocks'
  | 'childPageDoc.animation.changeTime'
  | 'childPageDoc.animation.childAnimationsJson.children'
  | 'childPageDoc.animation.childAnimationsJson.ddd'
  | 'childPageDoc.animation.childAnimationsJson.fr'
  | 'childPageDoc.animation.childAnimationsJson.h'
  | 'childPageDoc.animation.childAnimationsJson.id'
  | 'childPageDoc.animation.childAnimationsJson.ip'
  | 'childPageDoc.animation.childAnimationsJson.layers'
  | 'childPageDoc.animation.childAnimationsJson.nm'
  | 'childPageDoc.animation.childAnimationsJson.op'
  | 'childPageDoc.animation.childAnimationsJson.tgs'
  | 'childPageDoc.animation.childAnimationsJson.v'
  | 'childPageDoc.animation.childAnimationsJson.w'
  | 'childPageDoc.animation.childDocsJson.children'
  | 'childPageDoc.animation.childDocsJson.id'
  | 'childPageDoc.animation.childDocsJson.type'
  | 'childPageDoc.animation.childImageSharp.children'
  | 'childPageDoc.animation.childImageSharp.gatsbyImageData'
  | 'childPageDoc.animation.childImageSharp.id'
  | 'childPageDoc.animation.childImagesJson.assets'
  | 'childPageDoc.animation.childImagesJson.children'
  | 'childPageDoc.animation.childImagesJson.ddd'
  | 'childPageDoc.animation.childImagesJson.fr'
  | 'childPageDoc.animation.childImagesJson.h'
  | 'childPageDoc.animation.childImagesJson.id'
  | 'childPageDoc.animation.childImagesJson.ip'
  | 'childPageDoc.animation.childImagesJson.layers'
  | 'childPageDoc.animation.childImagesJson.nm'
  | 'childPageDoc.animation.childImagesJson.op'
  | 'childPageDoc.animation.childImagesJson.v'
  | 'childPageDoc.animation.childImagesJson.w'
  | 'childPageDoc.animation.childPageDoc.children'
  | 'childPageDoc.animation.childPageDoc.description'
  | 'childPageDoc.animation.childPageDoc.id'
  | 'childPageDoc.animation.childPageDoc.title'
  | 'childPageDoc.animation.children'
  | 'childPageDoc.animation.childrenAnimationsJson'
  | 'childPageDoc.animation.childrenAnimationsJson.children'
  | 'childPageDoc.animation.childrenAnimationsJson.ddd'
  | 'childPageDoc.animation.childrenAnimationsJson.fr'
  | 'childPageDoc.animation.childrenAnimationsJson.h'
  | 'childPageDoc.animation.childrenAnimationsJson.id'
  | 'childPageDoc.animation.childrenAnimationsJson.ip'
  | 'childPageDoc.animation.childrenAnimationsJson.layers'
  | 'childPageDoc.animation.childrenAnimationsJson.nm'
  | 'childPageDoc.animation.childrenAnimationsJson.op'
  | 'childPageDoc.animation.childrenAnimationsJson.tgs'
  | 'childPageDoc.animation.childrenAnimationsJson.v'
  | 'childPageDoc.animation.childrenAnimationsJson.w'
  | 'childPageDoc.animation.childrenDocsJson'
  | 'childPageDoc.animation.childrenDocsJson.children'
  | 'childPageDoc.animation.childrenDocsJson.id'
  | 'childPageDoc.animation.childrenDocsJson.type'
  | 'childPageDoc.animation.childrenImageSharp'
  | 'childPageDoc.animation.childrenImageSharp.children'
  | 'childPageDoc.animation.childrenImageSharp.gatsbyImageData'
  | 'childPageDoc.animation.childrenImageSharp.id'
  | 'childPageDoc.animation.childrenImagesJson'
  | 'childPageDoc.animation.childrenImagesJson.assets'
  | 'childPageDoc.animation.childrenImagesJson.children'
  | 'childPageDoc.animation.childrenImagesJson.ddd'
  | 'childPageDoc.animation.childrenImagesJson.fr'
  | 'childPageDoc.animation.childrenImagesJson.h'
  | 'childPageDoc.animation.childrenImagesJson.id'
  | 'childPageDoc.animation.childrenImagesJson.ip'
  | 'childPageDoc.animation.childrenImagesJson.layers'
  | 'childPageDoc.animation.childrenImagesJson.nm'
  | 'childPageDoc.animation.childrenImagesJson.op'
  | 'childPageDoc.animation.childrenImagesJson.v'
  | 'childPageDoc.animation.childrenImagesJson.w'
  | 'childPageDoc.animation.childrenPageDoc'
  | 'childPageDoc.animation.childrenPageDoc.children'
  | 'childPageDoc.animation.childrenPageDoc.description'
  | 'childPageDoc.animation.childrenPageDoc.id'
  | 'childPageDoc.animation.childrenPageDoc.title'
  | 'childPageDoc.animation.children.children'
  | 'childPageDoc.animation.children.id'
  | 'childPageDoc.animation.ctime'
  | 'childPageDoc.animation.ctimeMs'
  | 'childPageDoc.animation.dev'
  | 'childPageDoc.animation.dir'
  | 'childPageDoc.animation.ext'
  | 'childPageDoc.animation.extension'
  | 'childPageDoc.animation.gid'
  | 'childPageDoc.animation.id'
  | 'childPageDoc.animation.ino'
  | 'childPageDoc.animation.internal.content'
  | 'childPageDoc.animation.internal.contentDigest'
  | 'childPageDoc.animation.internal.description'
  | 'childPageDoc.animation.internal.fieldOwners'
  | 'childPageDoc.animation.internal.ignoreType'
  | 'childPageDoc.animation.internal.mediaType'
  | 'childPageDoc.animation.internal.owner'
  | 'childPageDoc.animation.internal.type'
  | 'childPageDoc.animation.mode'
  | 'childPageDoc.animation.modifiedTime'
  | 'childPageDoc.animation.mtime'
  | 'childPageDoc.animation.mtimeMs'
  | 'childPageDoc.animation.name'
  | 'childPageDoc.animation.nlink'
  | 'childPageDoc.animation.parent.children'
  | 'childPageDoc.animation.parent.id'
  | 'childPageDoc.animation.prettySize'
  | 'childPageDoc.animation.publicURL'
  | 'childPageDoc.animation.rdev'
  | 'childPageDoc.animation.relativeDirectory'
  | 'childPageDoc.animation.relativePath'
  | 'childPageDoc.animation.root'
  | 'childPageDoc.animation.size'
  | 'childPageDoc.animation.sourceInstanceName'
  | 'childPageDoc.animation.uid'
  | 'childPageDoc.children'
  | 'childPageDoc.children.children'
  | 'childPageDoc.children.children.children'
  | 'childPageDoc.children.children.id'
  | 'childPageDoc.children.id'
  | 'childPageDoc.children.internal.content'
  | 'childPageDoc.children.internal.contentDigest'
  | 'childPageDoc.children.internal.description'
  | 'childPageDoc.children.internal.fieldOwners'
  | 'childPageDoc.children.internal.ignoreType'
  | 'childPageDoc.children.internal.mediaType'
  | 'childPageDoc.children.internal.owner'
  | 'childPageDoc.children.internal.type'
  | 'childPageDoc.children.parent.children'
  | 'childPageDoc.children.parent.id'
  | 'childPageDoc.description'
  | 'childPageDoc.fileInformation.ext'
  | 'childPageDoc.fileInformation.extension'
  | 'childPageDoc.fileInformation.name'
  | 'childPageDoc.fileInformation.relativeDirectory'
  | 'childPageDoc.id'
  | 'childPageDoc.image.absolutePath'
  | 'childPageDoc.image.accessTime'
  | 'childPageDoc.image.atime'
  | 'childPageDoc.image.atimeMs'
  | 'childPageDoc.image.base'
  | 'childPageDoc.image.birthTime'
  | 'childPageDoc.image.birthtime'
  | 'childPageDoc.image.birthtimeMs'
  | 'childPageDoc.image.blksize'
  | 'childPageDoc.image.blocks'
  | 'childPageDoc.image.changeTime'
  | 'childPageDoc.image.childAnimationsJson.children'
  | 'childPageDoc.image.childAnimationsJson.ddd'
  | 'childPageDoc.image.childAnimationsJson.fr'
  | 'childPageDoc.image.childAnimationsJson.h'
  | 'childPageDoc.image.childAnimationsJson.id'
  | 'childPageDoc.image.childAnimationsJson.ip'
  | 'childPageDoc.image.childAnimationsJson.layers'
  | 'childPageDoc.image.childAnimationsJson.nm'
  | 'childPageDoc.image.childAnimationsJson.op'
  | 'childPageDoc.image.childAnimationsJson.tgs'
  | 'childPageDoc.image.childAnimationsJson.v'
  | 'childPageDoc.image.childAnimationsJson.w'
  | 'childPageDoc.image.childDocsJson.children'
  | 'childPageDoc.image.childDocsJson.id'
  | 'childPageDoc.image.childDocsJson.type'
  | 'childPageDoc.image.childImageSharp.children'
  | 'childPageDoc.image.childImageSharp.gatsbyImageData'
  | 'childPageDoc.image.childImageSharp.id'
  | 'childPageDoc.image.childImagesJson.assets'
  | 'childPageDoc.image.childImagesJson.children'
  | 'childPageDoc.image.childImagesJson.ddd'
  | 'childPageDoc.image.childImagesJson.fr'
  | 'childPageDoc.image.childImagesJson.h'
  | 'childPageDoc.image.childImagesJson.id'
  | 'childPageDoc.image.childImagesJson.ip'
  | 'childPageDoc.image.childImagesJson.layers'
  | 'childPageDoc.image.childImagesJson.nm'
  | 'childPageDoc.image.childImagesJson.op'
  | 'childPageDoc.image.childImagesJson.v'
  | 'childPageDoc.image.childImagesJson.w'
  | 'childPageDoc.image.childPageDoc.children'
  | 'childPageDoc.image.childPageDoc.description'
  | 'childPageDoc.image.childPageDoc.id'
  | 'childPageDoc.image.childPageDoc.title'
  | 'childPageDoc.image.children'
  | 'childPageDoc.image.childrenAnimationsJson'
  | 'childPageDoc.image.childrenAnimationsJson.children'
  | 'childPageDoc.image.childrenAnimationsJson.ddd'
  | 'childPageDoc.image.childrenAnimationsJson.fr'
  | 'childPageDoc.image.childrenAnimationsJson.h'
  | 'childPageDoc.image.childrenAnimationsJson.id'
  | 'childPageDoc.image.childrenAnimationsJson.ip'
  | 'childPageDoc.image.childrenAnimationsJson.layers'
  | 'childPageDoc.image.childrenAnimationsJson.nm'
  | 'childPageDoc.image.childrenAnimationsJson.op'
  | 'childPageDoc.image.childrenAnimationsJson.tgs'
  | 'childPageDoc.image.childrenAnimationsJson.v'
  | 'childPageDoc.image.childrenAnimationsJson.w'
  | 'childPageDoc.image.childrenDocsJson'
  | 'childPageDoc.image.childrenDocsJson.children'
  | 'childPageDoc.image.childrenDocsJson.id'
  | 'childPageDoc.image.childrenDocsJson.type'
  | 'childPageDoc.image.childrenImageSharp'
  | 'childPageDoc.image.childrenImageSharp.children'
  | 'childPageDoc.image.childrenImageSharp.gatsbyImageData'
  | 'childPageDoc.image.childrenImageSharp.id'
  | 'childPageDoc.image.childrenImagesJson'
  | 'childPageDoc.image.childrenImagesJson.assets'
  | 'childPageDoc.image.childrenImagesJson.children'
  | 'childPageDoc.image.childrenImagesJson.ddd'
  | 'childPageDoc.image.childrenImagesJson.fr'
  | 'childPageDoc.image.childrenImagesJson.h'
  | 'childPageDoc.image.childrenImagesJson.id'
  | 'childPageDoc.image.childrenImagesJson.ip'
  | 'childPageDoc.image.childrenImagesJson.layers'
  | 'childPageDoc.image.childrenImagesJson.nm'
  | 'childPageDoc.image.childrenImagesJson.op'
  | 'childPageDoc.image.childrenImagesJson.v'
  | 'childPageDoc.image.childrenImagesJson.w'
  | 'childPageDoc.image.childrenPageDoc'
  | 'childPageDoc.image.childrenPageDoc.children'
  | 'childPageDoc.image.childrenPageDoc.description'
  | 'childPageDoc.image.childrenPageDoc.id'
  | 'childPageDoc.image.childrenPageDoc.title'
  | 'childPageDoc.image.children.children'
  | 'childPageDoc.image.children.id'
  | 'childPageDoc.image.ctime'
  | 'childPageDoc.image.ctimeMs'
  | 'childPageDoc.image.dev'
  | 'childPageDoc.image.dir'
  | 'childPageDoc.image.ext'
  | 'childPageDoc.image.extension'
  | 'childPageDoc.image.gid'
  | 'childPageDoc.image.id'
  | 'childPageDoc.image.ino'
  | 'childPageDoc.image.internal.content'
  | 'childPageDoc.image.internal.contentDigest'
  | 'childPageDoc.image.internal.description'
  | 'childPageDoc.image.internal.fieldOwners'
  | 'childPageDoc.image.internal.ignoreType'
  | 'childPageDoc.image.internal.mediaType'
  | 'childPageDoc.image.internal.owner'
  | 'childPageDoc.image.internal.type'
  | 'childPageDoc.image.mode'
  | 'childPageDoc.image.modifiedTime'
  | 'childPageDoc.image.mtime'
  | 'childPageDoc.image.mtimeMs'
  | 'childPageDoc.image.name'
  | 'childPageDoc.image.nlink'
  | 'childPageDoc.image.parent.children'
  | 'childPageDoc.image.parent.id'
  | 'childPageDoc.image.prettySize'
  | 'childPageDoc.image.publicURL'
  | 'childPageDoc.image.rdev'
  | 'childPageDoc.image.relativeDirectory'
  | 'childPageDoc.image.relativePath'
  | 'childPageDoc.image.root'
  | 'childPageDoc.image.size'
  | 'childPageDoc.image.sourceInstanceName'
  | 'childPageDoc.image.uid'
  | 'childPageDoc.internal.content'
  | 'childPageDoc.internal.contentDigest'
  | 'childPageDoc.internal.description'
  | 'childPageDoc.internal.fieldOwners'
  | 'childPageDoc.internal.ignoreType'
  | 'childPageDoc.internal.mediaType'
  | 'childPageDoc.internal.owner'
  | 'childPageDoc.internal.type'
  | 'childPageDoc.parent.children'
  | 'childPageDoc.parent.children.children'
  | 'childPageDoc.parent.children.id'
  | 'childPageDoc.parent.id'
  | 'childPageDoc.parent.internal.content'
  | 'childPageDoc.parent.internal.contentDigest'
  | 'childPageDoc.parent.internal.description'
  | 'childPageDoc.parent.internal.fieldOwners'
  | 'childPageDoc.parent.internal.ignoreType'
  | 'childPageDoc.parent.internal.mediaType'
  | 'childPageDoc.parent.internal.owner'
  | 'childPageDoc.parent.internal.type'
  | 'childPageDoc.parent.parent.children'
  | 'childPageDoc.parent.parent.id'
  | 'childPageDoc.title'
  | 'childPageDoc.video.absolutePath'
  | 'childPageDoc.video.accessTime'
  | 'childPageDoc.video.atime'
  | 'childPageDoc.video.atimeMs'
  | 'childPageDoc.video.base'
  | 'childPageDoc.video.birthTime'
  | 'childPageDoc.video.birthtime'
  | 'childPageDoc.video.birthtimeMs'
  | 'childPageDoc.video.blksize'
  | 'childPageDoc.video.blocks'
  | 'childPageDoc.video.changeTime'
  | 'childPageDoc.video.childAnimationsJson.children'
  | 'childPageDoc.video.childAnimationsJson.ddd'
  | 'childPageDoc.video.childAnimationsJson.fr'
  | 'childPageDoc.video.childAnimationsJson.h'
  | 'childPageDoc.video.childAnimationsJson.id'
  | 'childPageDoc.video.childAnimationsJson.ip'
  | 'childPageDoc.video.childAnimationsJson.layers'
  | 'childPageDoc.video.childAnimationsJson.nm'
  | 'childPageDoc.video.childAnimationsJson.op'
  | 'childPageDoc.video.childAnimationsJson.tgs'
  | 'childPageDoc.video.childAnimationsJson.v'
  | 'childPageDoc.video.childAnimationsJson.w'
  | 'childPageDoc.video.childDocsJson.children'
  | 'childPageDoc.video.childDocsJson.id'
  | 'childPageDoc.video.childDocsJson.type'
  | 'childPageDoc.video.childImageSharp.children'
  | 'childPageDoc.video.childImageSharp.gatsbyImageData'
  | 'childPageDoc.video.childImageSharp.id'
  | 'childPageDoc.video.childImagesJson.assets'
  | 'childPageDoc.video.childImagesJson.children'
  | 'childPageDoc.video.childImagesJson.ddd'
  | 'childPageDoc.video.childImagesJson.fr'
  | 'childPageDoc.video.childImagesJson.h'
  | 'childPageDoc.video.childImagesJson.id'
  | 'childPageDoc.video.childImagesJson.ip'
  | 'childPageDoc.video.childImagesJson.layers'
  | 'childPageDoc.video.childImagesJson.nm'
  | 'childPageDoc.video.childImagesJson.op'
  | 'childPageDoc.video.childImagesJson.v'
  | 'childPageDoc.video.childImagesJson.w'
  | 'childPageDoc.video.childPageDoc.children'
  | 'childPageDoc.video.childPageDoc.description'
  | 'childPageDoc.video.childPageDoc.id'
  | 'childPageDoc.video.childPageDoc.title'
  | 'childPageDoc.video.children'
  | 'childPageDoc.video.childrenAnimationsJson'
  | 'childPageDoc.video.childrenAnimationsJson.children'
  | 'childPageDoc.video.childrenAnimationsJson.ddd'
  | 'childPageDoc.video.childrenAnimationsJson.fr'
  | 'childPageDoc.video.childrenAnimationsJson.h'
  | 'childPageDoc.video.childrenAnimationsJson.id'
  | 'childPageDoc.video.childrenAnimationsJson.ip'
  | 'childPageDoc.video.childrenAnimationsJson.layers'
  | 'childPageDoc.video.childrenAnimationsJson.nm'
  | 'childPageDoc.video.childrenAnimationsJson.op'
  | 'childPageDoc.video.childrenAnimationsJson.tgs'
  | 'childPageDoc.video.childrenAnimationsJson.v'
  | 'childPageDoc.video.childrenAnimationsJson.w'
  | 'childPageDoc.video.childrenDocsJson'
  | 'childPageDoc.video.childrenDocsJson.children'
  | 'childPageDoc.video.childrenDocsJson.id'
  | 'childPageDoc.video.childrenDocsJson.type'
  | 'childPageDoc.video.childrenImageSharp'
  | 'childPageDoc.video.childrenImageSharp.children'
  | 'childPageDoc.video.childrenImageSharp.gatsbyImageData'
  | 'childPageDoc.video.childrenImageSharp.id'
  | 'childPageDoc.video.childrenImagesJson'
  | 'childPageDoc.video.childrenImagesJson.assets'
  | 'childPageDoc.video.childrenImagesJson.children'
  | 'childPageDoc.video.childrenImagesJson.ddd'
  | 'childPageDoc.video.childrenImagesJson.fr'
  | 'childPageDoc.video.childrenImagesJson.h'
  | 'childPageDoc.video.childrenImagesJson.id'
  | 'childPageDoc.video.childrenImagesJson.ip'
  | 'childPageDoc.video.childrenImagesJson.layers'
  | 'childPageDoc.video.childrenImagesJson.nm'
  | 'childPageDoc.video.childrenImagesJson.op'
  | 'childPageDoc.video.childrenImagesJson.v'
  | 'childPageDoc.video.childrenImagesJson.w'
  | 'childPageDoc.video.childrenPageDoc'
  | 'childPageDoc.video.childrenPageDoc.children'
  | 'childPageDoc.video.childrenPageDoc.description'
  | 'childPageDoc.video.childrenPageDoc.id'
  | 'childPageDoc.video.childrenPageDoc.title'
  | 'childPageDoc.video.children.children'
  | 'childPageDoc.video.children.id'
  | 'childPageDoc.video.ctime'
  | 'childPageDoc.video.ctimeMs'
  | 'childPageDoc.video.dev'
  | 'childPageDoc.video.dir'
  | 'childPageDoc.video.ext'
  | 'childPageDoc.video.extension'
  | 'childPageDoc.video.gid'
  | 'childPageDoc.video.id'
  | 'childPageDoc.video.ino'
  | 'childPageDoc.video.internal.content'
  | 'childPageDoc.video.internal.contentDigest'
  | 'childPageDoc.video.internal.description'
  | 'childPageDoc.video.internal.fieldOwners'
  | 'childPageDoc.video.internal.ignoreType'
  | 'childPageDoc.video.internal.mediaType'
  | 'childPageDoc.video.internal.owner'
  | 'childPageDoc.video.internal.type'
  | 'childPageDoc.video.mode'
  | 'childPageDoc.video.modifiedTime'
  | 'childPageDoc.video.mtime'
  | 'childPageDoc.video.mtimeMs'
  | 'childPageDoc.video.name'
  | 'childPageDoc.video.nlink'
  | 'childPageDoc.video.parent.children'
  | 'childPageDoc.video.parent.id'
  | 'childPageDoc.video.prettySize'
  | 'childPageDoc.video.publicURL'
  | 'childPageDoc.video.rdev'
  | 'childPageDoc.video.relativeDirectory'
  | 'childPageDoc.video.relativePath'
  | 'childPageDoc.video.root'
  | 'childPageDoc.video.size'
  | 'childPageDoc.video.sourceInstanceName'
  | 'childPageDoc.video.uid'
  | 'children'
  | 'childrenAnimationsJson'
  | 'childrenAnimationsJson.children'
  | 'childrenAnimationsJson.children.children'
  | 'childrenAnimationsJson.children.children.children'
  | 'childrenAnimationsJson.children.children.id'
  | 'childrenAnimationsJson.children.id'
  | 'childrenAnimationsJson.children.internal.content'
  | 'childrenAnimationsJson.children.internal.contentDigest'
  | 'childrenAnimationsJson.children.internal.description'
  | 'childrenAnimationsJson.children.internal.fieldOwners'
  | 'childrenAnimationsJson.children.internal.ignoreType'
  | 'childrenAnimationsJson.children.internal.mediaType'
  | 'childrenAnimationsJson.children.internal.owner'
  | 'childrenAnimationsJson.children.internal.type'
  | 'childrenAnimationsJson.children.parent.children'
  | 'childrenAnimationsJson.children.parent.id'
  | 'childrenAnimationsJson.ddd'
  | 'childrenAnimationsJson.fr'
  | 'childrenAnimationsJson.h'
  | 'childrenAnimationsJson.id'
  | 'childrenAnimationsJson.internal.content'
  | 'childrenAnimationsJson.internal.contentDigest'
  | 'childrenAnimationsJson.internal.description'
  | 'childrenAnimationsJson.internal.fieldOwners'
  | 'childrenAnimationsJson.internal.ignoreType'
  | 'childrenAnimationsJson.internal.mediaType'
  | 'childrenAnimationsJson.internal.owner'
  | 'childrenAnimationsJson.internal.type'
  | 'childrenAnimationsJson.ip'
  | 'childrenAnimationsJson.layers'
  | 'childrenAnimationsJson.layers.ao'
  | 'childrenAnimationsJson.layers.bm'
  | 'childrenAnimationsJson.layers.ddd'
  | 'childrenAnimationsJson.layers.ind'
  | 'childrenAnimationsJson.layers.ip'
  | 'childrenAnimationsJson.layers.nm'
  | 'childrenAnimationsJson.layers.op'
  | 'childrenAnimationsJson.layers.shapes'
  | 'childrenAnimationsJson.layers.shapes.bm'
  | 'childrenAnimationsJson.layers.shapes.hd'
  | 'childrenAnimationsJson.layers.shapes.it'
  | 'childrenAnimationsJson.layers.shapes.nm'
  | 'childrenAnimationsJson.layers.shapes.ty'
  | 'childrenAnimationsJson.layers.sr'
  | 'childrenAnimationsJson.layers.st'
  | 'childrenAnimationsJson.layers.ty'
  | 'childrenAnimationsJson.nm'
  | 'childrenAnimationsJson.op'
  | 'childrenAnimationsJson.parent.children'
  | 'childrenAnimationsJson.parent.children.children'
  | 'childrenAnimationsJson.parent.children.id'
  | 'childrenAnimationsJson.parent.id'
  | 'childrenAnimationsJson.parent.internal.content'
  | 'childrenAnimationsJson.parent.internal.contentDigest'
  | 'childrenAnimationsJson.parent.internal.description'
  | 'childrenAnimationsJson.parent.internal.fieldOwners'
  | 'childrenAnimationsJson.parent.internal.ignoreType'
  | 'childrenAnimationsJson.parent.internal.mediaType'
  | 'childrenAnimationsJson.parent.internal.owner'
  | 'childrenAnimationsJson.parent.internal.type'
  | 'childrenAnimationsJson.parent.parent.children'
  | 'childrenAnimationsJson.parent.parent.id'
  | 'childrenAnimationsJson.tgs'
  | 'childrenAnimationsJson.v'
  | 'childrenAnimationsJson.w'
  | 'childrenDocsJson'
  | 'childrenDocsJson.children'
  | 'childrenDocsJson.children.children'
  | 'childrenDocsJson.children.children.children'
  | 'childrenDocsJson.children.children.id'
  | 'childrenDocsJson.children.id'
  | 'childrenDocsJson.children.internal.content'
  | 'childrenDocsJson.children.internal.contentDigest'
  | 'childrenDocsJson.children.internal.description'
  | 'childrenDocsJson.children.internal.fieldOwners'
  | 'childrenDocsJson.children.internal.ignoreType'
  | 'childrenDocsJson.children.internal.mediaType'
  | 'childrenDocsJson.children.internal.owner'
  | 'childrenDocsJson.children.internal.type'
  | 'childrenDocsJson.children.parent.children'
  | 'childrenDocsJson.children.parent.id'
  | 'childrenDocsJson.id'
  | 'childrenDocsJson.internal.content'
  | 'childrenDocsJson.internal.contentDigest'
  | 'childrenDocsJson.internal.description'
  | 'childrenDocsJson.internal.fieldOwners'
  | 'childrenDocsJson.internal.ignoreType'
  | 'childrenDocsJson.internal.mediaType'
  | 'childrenDocsJson.internal.owner'
  | 'childrenDocsJson.internal.type'
  | 'childrenDocsJson.module.animation.absolutePath'
  | 'childrenDocsJson.module.animation.accessTime'
  | 'childrenDocsJson.module.animation.atime'
  | 'childrenDocsJson.module.animation.atimeMs'
  | 'childrenDocsJson.module.animation.base'
  | 'childrenDocsJson.module.animation.birthTime'
  | 'childrenDocsJson.module.animation.birthtime'
  | 'childrenDocsJson.module.animation.birthtimeMs'
  | 'childrenDocsJson.module.animation.blksize'
  | 'childrenDocsJson.module.animation.blocks'
  | 'childrenDocsJson.module.animation.changeTime'
  | 'childrenDocsJson.module.animation.children'
  | 'childrenDocsJson.module.animation.childrenAnimationsJson'
  | 'childrenDocsJson.module.animation.childrenDocsJson'
  | 'childrenDocsJson.module.animation.childrenImageSharp'
  | 'childrenDocsJson.module.animation.childrenImagesJson'
  | 'childrenDocsJson.module.animation.childrenPageDoc'
  | 'childrenDocsJson.module.animation.ctime'
  | 'childrenDocsJson.module.animation.ctimeMs'
  | 'childrenDocsJson.module.animation.dev'
  | 'childrenDocsJson.module.animation.dir'
  | 'childrenDocsJson.module.animation.ext'
  | 'childrenDocsJson.module.animation.extension'
  | 'childrenDocsJson.module.animation.gid'
  | 'childrenDocsJson.module.animation.id'
  | 'childrenDocsJson.module.animation.ino'
  | 'childrenDocsJson.module.animation.mode'
  | 'childrenDocsJson.module.animation.modifiedTime'
  | 'childrenDocsJson.module.animation.mtime'
  | 'childrenDocsJson.module.animation.mtimeMs'
  | 'childrenDocsJson.module.animation.name'
  | 'childrenDocsJson.module.animation.nlink'
  | 'childrenDocsJson.module.animation.prettySize'
  | 'childrenDocsJson.module.animation.publicURL'
  | 'childrenDocsJson.module.animation.rdev'
  | 'childrenDocsJson.module.animation.relativeDirectory'
  | 'childrenDocsJson.module.animation.relativePath'
  | 'childrenDocsJson.module.animation.root'
  | 'childrenDocsJson.module.animation.size'
  | 'childrenDocsJson.module.animation.sourceInstanceName'
  | 'childrenDocsJson.module.animation.uid'
  | 'childrenDocsJson.module.description'
  | 'childrenDocsJson.module.image.absolutePath'
  | 'childrenDocsJson.module.image.accessTime'
  | 'childrenDocsJson.module.image.atime'
  | 'childrenDocsJson.module.image.atimeMs'
  | 'childrenDocsJson.module.image.base'
  | 'childrenDocsJson.module.image.birthTime'
  | 'childrenDocsJson.module.image.birthtime'
  | 'childrenDocsJson.module.image.birthtimeMs'
  | 'childrenDocsJson.module.image.blksize'
  | 'childrenDocsJson.module.image.blocks'
  | 'childrenDocsJson.module.image.changeTime'
  | 'childrenDocsJson.module.image.children'
  | 'childrenDocsJson.module.image.childrenAnimationsJson'
  | 'childrenDocsJson.module.image.childrenDocsJson'
  | 'childrenDocsJson.module.image.childrenImageSharp'
  | 'childrenDocsJson.module.image.childrenImagesJson'
  | 'childrenDocsJson.module.image.childrenPageDoc'
  | 'childrenDocsJson.module.image.ctime'
  | 'childrenDocsJson.module.image.ctimeMs'
  | 'childrenDocsJson.module.image.dev'
  | 'childrenDocsJson.module.image.dir'
  | 'childrenDocsJson.module.image.ext'
  | 'childrenDocsJson.module.image.extension'
  | 'childrenDocsJson.module.image.gid'
  | 'childrenDocsJson.module.image.id'
  | 'childrenDocsJson.module.image.ino'
  | 'childrenDocsJson.module.image.mode'
  | 'childrenDocsJson.module.image.modifiedTime'
  | 'childrenDocsJson.module.image.mtime'
  | 'childrenDocsJson.module.image.mtimeMs'
  | 'childrenDocsJson.module.image.name'
  | 'childrenDocsJson.module.image.nlink'
  | 'childrenDocsJson.module.image.prettySize'
  | 'childrenDocsJson.module.image.publicURL'
  | 'childrenDocsJson.module.image.rdev'
  | 'childrenDocsJson.module.image.relativeDirectory'
  | 'childrenDocsJson.module.image.relativePath'
  | 'childrenDocsJson.module.image.root'
  | 'childrenDocsJson.module.image.size'
  | 'childrenDocsJson.module.image.sourceInstanceName'
  | 'childrenDocsJson.module.image.uid'
  | 'childrenDocsJson.module.title'
  | 'childrenDocsJson.module.video.absolutePath'
  | 'childrenDocsJson.module.video.accessTime'
  | 'childrenDocsJson.module.video.atime'
  | 'childrenDocsJson.module.video.atimeMs'
  | 'childrenDocsJson.module.video.base'
  | 'childrenDocsJson.module.video.birthTime'
  | 'childrenDocsJson.module.video.birthtime'
  | 'childrenDocsJson.module.video.birthtimeMs'
  | 'childrenDocsJson.module.video.blksize'
  | 'childrenDocsJson.module.video.blocks'
  | 'childrenDocsJson.module.video.changeTime'
  | 'childrenDocsJson.module.video.children'
  | 'childrenDocsJson.module.video.childrenAnimationsJson'
  | 'childrenDocsJson.module.video.childrenDocsJson'
  | 'childrenDocsJson.module.video.childrenImageSharp'
  | 'childrenDocsJson.module.video.childrenImagesJson'
  | 'childrenDocsJson.module.video.childrenPageDoc'
  | 'childrenDocsJson.module.video.ctime'
  | 'childrenDocsJson.module.video.ctimeMs'
  | 'childrenDocsJson.module.video.dev'
  | 'childrenDocsJson.module.video.dir'
  | 'childrenDocsJson.module.video.ext'
  | 'childrenDocsJson.module.video.extension'
  | 'childrenDocsJson.module.video.gid'
  | 'childrenDocsJson.module.video.id'
  | 'childrenDocsJson.module.video.ino'
  | 'childrenDocsJson.module.video.mode'
  | 'childrenDocsJson.module.video.modifiedTime'
  | 'childrenDocsJson.module.video.mtime'
  | 'childrenDocsJson.module.video.mtimeMs'
  | 'childrenDocsJson.module.video.name'
  | 'childrenDocsJson.module.video.nlink'
  | 'childrenDocsJson.module.video.prettySize'
  | 'childrenDocsJson.module.video.publicURL'
  | 'childrenDocsJson.module.video.rdev'
  | 'childrenDocsJson.module.video.relativeDirectory'
  | 'childrenDocsJson.module.video.relativePath'
  | 'childrenDocsJson.module.video.root'
  | 'childrenDocsJson.module.video.size'
  | 'childrenDocsJson.module.video.sourceInstanceName'
  | 'childrenDocsJson.module.video.uid'
  | 'childrenDocsJson.parent.children'
  | 'childrenDocsJson.parent.children.children'
  | 'childrenDocsJson.parent.children.id'
  | 'childrenDocsJson.parent.id'
  | 'childrenDocsJson.parent.internal.content'
  | 'childrenDocsJson.parent.internal.contentDigest'
  | 'childrenDocsJson.parent.internal.description'
  | 'childrenDocsJson.parent.internal.fieldOwners'
  | 'childrenDocsJson.parent.internal.ignoreType'
  | 'childrenDocsJson.parent.internal.mediaType'
  | 'childrenDocsJson.parent.internal.owner'
  | 'childrenDocsJson.parent.internal.type'
  | 'childrenDocsJson.parent.parent.children'
  | 'childrenDocsJson.parent.parent.id'
  | 'childrenDocsJson.type'
  | 'childrenImageSharp'
  | 'childrenImageSharp.children'
  | 'childrenImageSharp.children.children'
  | 'childrenImageSharp.children.children.children'
  | 'childrenImageSharp.children.children.id'
  | 'childrenImageSharp.children.id'
  | 'childrenImageSharp.children.internal.content'
  | 'childrenImageSharp.children.internal.contentDigest'
  | 'childrenImageSharp.children.internal.description'
  | 'childrenImageSharp.children.internal.fieldOwners'
  | 'childrenImageSharp.children.internal.ignoreType'
  | 'childrenImageSharp.children.internal.mediaType'
  | 'childrenImageSharp.children.internal.owner'
  | 'childrenImageSharp.children.internal.type'
  | 'childrenImageSharp.children.parent.children'
  | 'childrenImageSharp.children.parent.id'
  | 'childrenImageSharp.fixed.aspectRatio'
  | 'childrenImageSharp.fixed.base64'
  | 'childrenImageSharp.fixed.height'
  | 'childrenImageSharp.fixed.originalName'
  | 'childrenImageSharp.fixed.src'
  | 'childrenImageSharp.fixed.srcSet'
  | 'childrenImageSharp.fixed.srcSetWebp'
  | 'childrenImageSharp.fixed.srcWebp'
  | 'childrenImageSharp.fixed.tracedSVG'
  | 'childrenImageSharp.fixed.width'
  | 'childrenImageSharp.fluid.aspectRatio'
  | 'childrenImageSharp.fluid.base64'
  | 'childrenImageSharp.fluid.originalImg'
  | 'childrenImageSharp.fluid.originalName'
  | 'childrenImageSharp.fluid.presentationHeight'
  | 'childrenImageSharp.fluid.presentationWidth'
  | 'childrenImageSharp.fluid.sizes'
  | 'childrenImageSharp.fluid.src'
  | 'childrenImageSharp.fluid.srcSet'
  | 'childrenImageSharp.fluid.srcSetWebp'
  | 'childrenImageSharp.fluid.srcWebp'
  | 'childrenImageSharp.fluid.tracedSVG'
  | 'childrenImageSharp.gatsbyImageData'
  | 'childrenImageSharp.id'
  | 'childrenImageSharp.internal.content'
  | 'childrenImageSharp.internal.contentDigest'
  | 'childrenImageSharp.internal.description'
  | 'childrenImageSharp.internal.fieldOwners'
  | 'childrenImageSharp.internal.ignoreType'
  | 'childrenImageSharp.internal.mediaType'
  | 'childrenImageSharp.internal.owner'
  | 'childrenImageSharp.internal.type'
  | 'childrenImageSharp.original.height'
  | 'childrenImageSharp.original.src'
  | 'childrenImageSharp.original.width'
  | 'childrenImageSharp.parent.children'
  | 'childrenImageSharp.parent.children.children'
  | 'childrenImageSharp.parent.children.id'
  | 'childrenImageSharp.parent.id'
  | 'childrenImageSharp.parent.internal.content'
  | 'childrenImageSharp.parent.internal.contentDigest'
  | 'childrenImageSharp.parent.internal.description'
  | 'childrenImageSharp.parent.internal.fieldOwners'
  | 'childrenImageSharp.parent.internal.ignoreType'
  | 'childrenImageSharp.parent.internal.mediaType'
  | 'childrenImageSharp.parent.internal.owner'
  | 'childrenImageSharp.parent.internal.type'
  | 'childrenImageSharp.parent.parent.children'
  | 'childrenImageSharp.parent.parent.id'
  | 'childrenImageSharp.resize.aspectRatio'
  | 'childrenImageSharp.resize.height'
  | 'childrenImageSharp.resize.originalName'
  | 'childrenImageSharp.resize.src'
  | 'childrenImageSharp.resize.tracedSVG'
  | 'childrenImageSharp.resize.width'
  | 'childrenImagesJson'
  | 'childrenImagesJson.assets'
  | 'childrenImagesJson.assets.id'
  | 'childrenImagesJson.assets.layers'
  | 'childrenImagesJson.assets.layers.ao'
  | 'childrenImagesJson.assets.layers.bm'
  | 'childrenImagesJson.assets.layers.ddd'
  | 'childrenImagesJson.assets.layers.hasMask'
  | 'childrenImagesJson.assets.layers.ind'
  | 'childrenImagesJson.assets.layers.ip'
  | 'childrenImagesJson.assets.layers.masksProperties'
  | 'childrenImagesJson.assets.layers.nm'
  | 'childrenImagesJson.assets.layers.op'
  | 'childrenImagesJson.assets.layers.parent'
  | 'childrenImagesJson.assets.layers.shapes'
  | 'childrenImagesJson.assets.layers.sr'
  | 'childrenImagesJson.assets.layers.st'
  | 'childrenImagesJson.assets.layers.ty'
  | 'childrenImagesJson.children'
  | 'childrenImagesJson.children.children'
  | 'childrenImagesJson.children.children.children'
  | 'childrenImagesJson.children.children.id'
  | 'childrenImagesJson.children.id'
  | 'childrenImagesJson.children.internal.content'
  | 'childrenImagesJson.children.internal.contentDigest'
  | 'childrenImagesJson.children.internal.description'
  | 'childrenImagesJson.children.internal.fieldOwners'
  | 'childrenImagesJson.children.internal.ignoreType'
  | 'childrenImagesJson.children.internal.mediaType'
  | 'childrenImagesJson.children.internal.owner'
  | 'childrenImagesJson.children.internal.type'
  | 'childrenImagesJson.children.parent.children'
  | 'childrenImagesJson.children.parent.id'
  | 'childrenImagesJson.ddd'
  | 'childrenImagesJson.fr'
  | 'childrenImagesJson.h'
  | 'childrenImagesJson.id'
  | 'childrenImagesJson.internal.content'
  | 'childrenImagesJson.internal.contentDigest'
  | 'childrenImagesJson.internal.description'
  | 'childrenImagesJson.internal.fieldOwners'
  | 'childrenImagesJson.internal.ignoreType'
  | 'childrenImagesJson.internal.mediaType'
  | 'childrenImagesJson.internal.owner'
  | 'childrenImagesJson.internal.type'
  | 'childrenImagesJson.ip'
  | 'childrenImagesJson.layers'
  | 'childrenImagesJson.layers.ao'
  | 'childrenImagesJson.layers.bm'
  | 'childrenImagesJson.layers.ddd'
  | 'childrenImagesJson.layers.h'
  | 'childrenImagesJson.layers.ind'
  | 'childrenImagesJson.layers.ip'
  | 'childrenImagesJson.layers.nm'
  | 'childrenImagesJson.layers.op'
  | 'childrenImagesJson.layers.parent'
  | 'childrenImagesJson.layers.refId'
  | 'childrenImagesJson.layers.shapes'
  | 'childrenImagesJson.layers.shapes.bm'
  | 'childrenImagesJson.layers.shapes.cix'
  | 'childrenImagesJson.layers.shapes.hd'
  | 'childrenImagesJson.layers.shapes.it'
  | 'childrenImagesJson.layers.shapes.ix'
  | 'childrenImagesJson.layers.shapes.mn'
  | 'childrenImagesJson.layers.shapes.nm'
  | 'childrenImagesJson.layers.shapes.np'
  | 'childrenImagesJson.layers.shapes.ty'
  | 'childrenImagesJson.layers.sr'
  | 'childrenImagesJson.layers.st'
  | 'childrenImagesJson.layers.ty'
  | 'childrenImagesJson.layers.w'
  | 'childrenImagesJson.nm'
  | 'childrenImagesJson.op'
  | 'childrenImagesJson.parent.children'
  | 'childrenImagesJson.parent.children.children'
  | 'childrenImagesJson.parent.children.id'
  | 'childrenImagesJson.parent.id'
  | 'childrenImagesJson.parent.internal.content'
  | 'childrenImagesJson.parent.internal.contentDigest'
  | 'childrenImagesJson.parent.internal.description'
  | 'childrenImagesJson.parent.internal.fieldOwners'
  | 'childrenImagesJson.parent.internal.ignoreType'
  | 'childrenImagesJson.parent.internal.mediaType'
  | 'childrenImagesJson.parent.internal.owner'
  | 'childrenImagesJson.parent.internal.type'
  | 'childrenImagesJson.parent.parent.children'
  | 'childrenImagesJson.parent.parent.id'
  | 'childrenImagesJson.v'
  | 'childrenImagesJson.w'
  | 'childrenPageDoc'
  | 'childrenPageDoc.animation.absolutePath'
  | 'childrenPageDoc.animation.accessTime'
  | 'childrenPageDoc.animation.atime'
  | 'childrenPageDoc.animation.atimeMs'
  | 'childrenPageDoc.animation.base'
  | 'childrenPageDoc.animation.birthTime'
  | 'childrenPageDoc.animation.birthtime'
  | 'childrenPageDoc.animation.birthtimeMs'
  | 'childrenPageDoc.animation.blksize'
  | 'childrenPageDoc.animation.blocks'
  | 'childrenPageDoc.animation.changeTime'
  | 'childrenPageDoc.animation.childAnimationsJson.children'
  | 'childrenPageDoc.animation.childAnimationsJson.ddd'
  | 'childrenPageDoc.animation.childAnimationsJson.fr'
  | 'childrenPageDoc.animation.childAnimationsJson.h'
  | 'childrenPageDoc.animation.childAnimationsJson.id'
  | 'childrenPageDoc.animation.childAnimationsJson.ip'
  | 'childrenPageDoc.animation.childAnimationsJson.layers'
  | 'childrenPageDoc.animation.childAnimationsJson.nm'
  | 'childrenPageDoc.animation.childAnimationsJson.op'
  | 'childrenPageDoc.animation.childAnimationsJson.tgs'
  | 'childrenPageDoc.animation.childAnimationsJson.v'
  | 'childrenPageDoc.animation.childAnimationsJson.w'
  | 'childrenPageDoc.animation.childDocsJson.children'
  | 'childrenPageDoc.animation.childDocsJson.id'
  | 'childrenPageDoc.animation.childDocsJson.type'
  | 'childrenPageDoc.animation.childImageSharp.children'
  | 'childrenPageDoc.animation.childImageSharp.gatsbyImageData'
  | 'childrenPageDoc.animation.childImageSharp.id'
  | 'childrenPageDoc.animation.childImagesJson.assets'
  | 'childrenPageDoc.animation.childImagesJson.children'
  | 'childrenPageDoc.animation.childImagesJson.ddd'
  | 'childrenPageDoc.animation.childImagesJson.fr'
  | 'childrenPageDoc.animation.childImagesJson.h'
  | 'childrenPageDoc.animation.childImagesJson.id'
  | 'childrenPageDoc.animation.childImagesJson.ip'
  | 'childrenPageDoc.animation.childImagesJson.layers'
  | 'childrenPageDoc.animation.childImagesJson.nm'
  | 'childrenPageDoc.animation.childImagesJson.op'
  | 'childrenPageDoc.animation.childImagesJson.v'
  | 'childrenPageDoc.animation.childImagesJson.w'
  | 'childrenPageDoc.animation.childPageDoc.children'
  | 'childrenPageDoc.animation.childPageDoc.description'
  | 'childrenPageDoc.animation.childPageDoc.id'
  | 'childrenPageDoc.animation.childPageDoc.title'
  | 'childrenPageDoc.animation.children'
  | 'childrenPageDoc.animation.childrenAnimationsJson'
  | 'childrenPageDoc.animation.childrenAnimationsJson.children'
  | 'childrenPageDoc.animation.childrenAnimationsJson.ddd'
  | 'childrenPageDoc.animation.childrenAnimationsJson.fr'
  | 'childrenPageDoc.animation.childrenAnimationsJson.h'
  | 'childrenPageDoc.animation.childrenAnimationsJson.id'
  | 'childrenPageDoc.animation.childrenAnimationsJson.ip'
  | 'childrenPageDoc.animation.childrenAnimationsJson.layers'
  | 'childrenPageDoc.animation.childrenAnimationsJson.nm'
  | 'childrenPageDoc.animation.childrenAnimationsJson.op'
  | 'childrenPageDoc.animation.childrenAnimationsJson.tgs'
  | 'childrenPageDoc.animation.childrenAnimationsJson.v'
  | 'childrenPageDoc.animation.childrenAnimationsJson.w'
  | 'childrenPageDoc.animation.childrenDocsJson'
  | 'childrenPageDoc.animation.childrenDocsJson.children'
  | 'childrenPageDoc.animation.childrenDocsJson.id'
  | 'childrenPageDoc.animation.childrenDocsJson.type'
  | 'childrenPageDoc.animation.childrenImageSharp'
  | 'childrenPageDoc.animation.childrenImageSharp.children'
  | 'childrenPageDoc.animation.childrenImageSharp.gatsbyImageData'
  | 'childrenPageDoc.animation.childrenImageSharp.id'
  | 'childrenPageDoc.animation.childrenImagesJson'
  | 'childrenPageDoc.animation.childrenImagesJson.assets'
  | 'childrenPageDoc.animation.childrenImagesJson.children'
  | 'childrenPageDoc.animation.childrenImagesJson.ddd'
  | 'childrenPageDoc.animation.childrenImagesJson.fr'
  | 'childrenPageDoc.animation.childrenImagesJson.h'
  | 'childrenPageDoc.animation.childrenImagesJson.id'
  | 'childrenPageDoc.animation.childrenImagesJson.ip'
  | 'childrenPageDoc.animation.childrenImagesJson.layers'
  | 'childrenPageDoc.animation.childrenImagesJson.nm'
  | 'childrenPageDoc.animation.childrenImagesJson.op'
  | 'childrenPageDoc.animation.childrenImagesJson.v'
  | 'childrenPageDoc.animation.childrenImagesJson.w'
  | 'childrenPageDoc.animation.childrenPageDoc'
  | 'childrenPageDoc.animation.childrenPageDoc.children'
  | 'childrenPageDoc.animation.childrenPageDoc.description'
  | 'childrenPageDoc.animation.childrenPageDoc.id'
  | 'childrenPageDoc.animation.childrenPageDoc.title'
  | 'childrenPageDoc.animation.children.children'
  | 'childrenPageDoc.animation.children.id'
  | 'childrenPageDoc.animation.ctime'
  | 'childrenPageDoc.animation.ctimeMs'
  | 'childrenPageDoc.animation.dev'
  | 'childrenPageDoc.animation.dir'
  | 'childrenPageDoc.animation.ext'
  | 'childrenPageDoc.animation.extension'
  | 'childrenPageDoc.animation.gid'
  | 'childrenPageDoc.animation.id'
  | 'childrenPageDoc.animation.ino'
  | 'childrenPageDoc.animation.internal.content'
  | 'childrenPageDoc.animation.internal.contentDigest'
  | 'childrenPageDoc.animation.internal.description'
  | 'childrenPageDoc.animation.internal.fieldOwners'
  | 'childrenPageDoc.animation.internal.ignoreType'
  | 'childrenPageDoc.animation.internal.mediaType'
  | 'childrenPageDoc.animation.internal.owner'
  | 'childrenPageDoc.animation.internal.type'
  | 'childrenPageDoc.animation.mode'
  | 'childrenPageDoc.animation.modifiedTime'
  | 'childrenPageDoc.animation.mtime'
  | 'childrenPageDoc.animation.mtimeMs'
  | 'childrenPageDoc.animation.name'
  | 'childrenPageDoc.animation.nlink'
  | 'childrenPageDoc.animation.parent.children'
  | 'childrenPageDoc.animation.parent.id'
  | 'childrenPageDoc.animation.prettySize'
  | 'childrenPageDoc.animation.publicURL'
  | 'childrenPageDoc.animation.rdev'
  | 'childrenPageDoc.animation.relativeDirectory'
  | 'childrenPageDoc.animation.relativePath'
  | 'childrenPageDoc.animation.root'
  | 'childrenPageDoc.animation.size'
  | 'childrenPageDoc.animation.sourceInstanceName'
  | 'childrenPageDoc.animation.uid'
  | 'childrenPageDoc.children'
  | 'childrenPageDoc.children.children'
  | 'childrenPageDoc.children.children.children'
  | 'childrenPageDoc.children.children.id'
  | 'childrenPageDoc.children.id'
  | 'childrenPageDoc.children.internal.content'
  | 'childrenPageDoc.children.internal.contentDigest'
  | 'childrenPageDoc.children.internal.description'
  | 'childrenPageDoc.children.internal.fieldOwners'
  | 'childrenPageDoc.children.internal.ignoreType'
  | 'childrenPageDoc.children.internal.mediaType'
  | 'childrenPageDoc.children.internal.owner'
  | 'childrenPageDoc.children.internal.type'
  | 'childrenPageDoc.children.parent.children'
  | 'childrenPageDoc.children.parent.id'
  | 'childrenPageDoc.description'
  | 'childrenPageDoc.fileInformation.ext'
  | 'childrenPageDoc.fileInformation.extension'
  | 'childrenPageDoc.fileInformation.name'
  | 'childrenPageDoc.fileInformation.relativeDirectory'
  | 'childrenPageDoc.id'
  | 'childrenPageDoc.image.absolutePath'
  | 'childrenPageDoc.image.accessTime'
  | 'childrenPageDoc.image.atime'
  | 'childrenPageDoc.image.atimeMs'
  | 'childrenPageDoc.image.base'
  | 'childrenPageDoc.image.birthTime'
  | 'childrenPageDoc.image.birthtime'
  | 'childrenPageDoc.image.birthtimeMs'
  | 'childrenPageDoc.image.blksize'
  | 'childrenPageDoc.image.blocks'
  | 'childrenPageDoc.image.changeTime'
  | 'childrenPageDoc.image.childAnimationsJson.children'
  | 'childrenPageDoc.image.childAnimationsJson.ddd'
  | 'childrenPageDoc.image.childAnimationsJson.fr'
  | 'childrenPageDoc.image.childAnimationsJson.h'
  | 'childrenPageDoc.image.childAnimationsJson.id'
  | 'childrenPageDoc.image.childAnimationsJson.ip'
  | 'childrenPageDoc.image.childAnimationsJson.layers'
  | 'childrenPageDoc.image.childAnimationsJson.nm'
  | 'childrenPageDoc.image.childAnimationsJson.op'
  | 'childrenPageDoc.image.childAnimationsJson.tgs'
  | 'childrenPageDoc.image.childAnimationsJson.v'
  | 'childrenPageDoc.image.childAnimationsJson.w'
  | 'childrenPageDoc.image.childDocsJson.children'
  | 'childrenPageDoc.image.childDocsJson.id'
  | 'childrenPageDoc.image.childDocsJson.type'
  | 'childrenPageDoc.image.childImageSharp.children'
  | 'childrenPageDoc.image.childImageSharp.gatsbyImageData'
  | 'childrenPageDoc.image.childImageSharp.id'
  | 'childrenPageDoc.image.childImagesJson.assets'
  | 'childrenPageDoc.image.childImagesJson.children'
  | 'childrenPageDoc.image.childImagesJson.ddd'
  | 'childrenPageDoc.image.childImagesJson.fr'
  | 'childrenPageDoc.image.childImagesJson.h'
  | 'childrenPageDoc.image.childImagesJson.id'
  | 'childrenPageDoc.image.childImagesJson.ip'
  | 'childrenPageDoc.image.childImagesJson.layers'
  | 'childrenPageDoc.image.childImagesJson.nm'
  | 'childrenPageDoc.image.childImagesJson.op'
  | 'childrenPageDoc.image.childImagesJson.v'
  | 'childrenPageDoc.image.childImagesJson.w'
  | 'childrenPageDoc.image.childPageDoc.children'
  | 'childrenPageDoc.image.childPageDoc.description'
  | 'childrenPageDoc.image.childPageDoc.id'
  | 'childrenPageDoc.image.childPageDoc.title'
  | 'childrenPageDoc.image.children'
  | 'childrenPageDoc.image.childrenAnimationsJson'
  | 'childrenPageDoc.image.childrenAnimationsJson.children'
  | 'childrenPageDoc.image.childrenAnimationsJson.ddd'
  | 'childrenPageDoc.image.childrenAnimationsJson.fr'
  | 'childrenPageDoc.image.childrenAnimationsJson.h'
  | 'childrenPageDoc.image.childrenAnimationsJson.id'
  | 'childrenPageDoc.image.childrenAnimationsJson.ip'
  | 'childrenPageDoc.image.childrenAnimationsJson.layers'
  | 'childrenPageDoc.image.childrenAnimationsJson.nm'
  | 'childrenPageDoc.image.childrenAnimationsJson.op'
  | 'childrenPageDoc.image.childrenAnimationsJson.tgs'
  | 'childrenPageDoc.image.childrenAnimationsJson.v'
  | 'childrenPageDoc.image.childrenAnimationsJson.w'
  | 'childrenPageDoc.image.childrenDocsJson'
  | 'childrenPageDoc.image.childrenDocsJson.children'
  | 'childrenPageDoc.image.childrenDocsJson.id'
  | 'childrenPageDoc.image.childrenDocsJson.type'
  | 'childrenPageDoc.image.childrenImageSharp'
  | 'childrenPageDoc.image.childrenImageSharp.children'
  | 'childrenPageDoc.image.childrenImageSharp.gatsbyImageData'
  | 'childrenPageDoc.image.childrenImageSharp.id'
  | 'childrenPageDoc.image.childrenImagesJson'
  | 'childrenPageDoc.image.childrenImagesJson.assets'
  | 'childrenPageDoc.image.childrenImagesJson.children'
  | 'childrenPageDoc.image.childrenImagesJson.ddd'
  | 'childrenPageDoc.image.childrenImagesJson.fr'
  | 'childrenPageDoc.image.childrenImagesJson.h'
  | 'childrenPageDoc.image.childrenImagesJson.id'
  | 'childrenPageDoc.image.childrenImagesJson.ip'
  | 'childrenPageDoc.image.childrenImagesJson.layers'
  | 'childrenPageDoc.image.childrenImagesJson.nm'
  | 'childrenPageDoc.image.childrenImagesJson.op'
  | 'childrenPageDoc.image.childrenImagesJson.v'
  | 'childrenPageDoc.image.childrenImagesJson.w'
  | 'childrenPageDoc.image.childrenPageDoc'
  | 'childrenPageDoc.image.childrenPageDoc.children'
  | 'childrenPageDoc.image.childrenPageDoc.description'
  | 'childrenPageDoc.image.childrenPageDoc.id'
  | 'childrenPageDoc.image.childrenPageDoc.title'
  | 'childrenPageDoc.image.children.children'
  | 'childrenPageDoc.image.children.id'
  | 'childrenPageDoc.image.ctime'
  | 'childrenPageDoc.image.ctimeMs'
  | 'childrenPageDoc.image.dev'
  | 'childrenPageDoc.image.dir'
  | 'childrenPageDoc.image.ext'
  | 'childrenPageDoc.image.extension'
  | 'childrenPageDoc.image.gid'
  | 'childrenPageDoc.image.id'
  | 'childrenPageDoc.image.ino'
  | 'childrenPageDoc.image.internal.content'
  | 'childrenPageDoc.image.internal.contentDigest'
  | 'childrenPageDoc.image.internal.description'
  | 'childrenPageDoc.image.internal.fieldOwners'
  | 'childrenPageDoc.image.internal.ignoreType'
  | 'childrenPageDoc.image.internal.mediaType'
  | 'childrenPageDoc.image.internal.owner'
  | 'childrenPageDoc.image.internal.type'
  | 'childrenPageDoc.image.mode'
  | 'childrenPageDoc.image.modifiedTime'
  | 'childrenPageDoc.image.mtime'
  | 'childrenPageDoc.image.mtimeMs'
  | 'childrenPageDoc.image.name'
  | 'childrenPageDoc.image.nlink'
  | 'childrenPageDoc.image.parent.children'
  | 'childrenPageDoc.image.parent.id'
  | 'childrenPageDoc.image.prettySize'
  | 'childrenPageDoc.image.publicURL'
  | 'childrenPageDoc.image.rdev'
  | 'childrenPageDoc.image.relativeDirectory'
  | 'childrenPageDoc.image.relativePath'
  | 'childrenPageDoc.image.root'
  | 'childrenPageDoc.image.size'
  | 'childrenPageDoc.image.sourceInstanceName'
  | 'childrenPageDoc.image.uid'
  | 'childrenPageDoc.internal.content'
  | 'childrenPageDoc.internal.contentDigest'
  | 'childrenPageDoc.internal.description'
  | 'childrenPageDoc.internal.fieldOwners'
  | 'childrenPageDoc.internal.ignoreType'
  | 'childrenPageDoc.internal.mediaType'
  | 'childrenPageDoc.internal.owner'
  | 'childrenPageDoc.internal.type'
  | 'childrenPageDoc.parent.children'
  | 'childrenPageDoc.parent.children.children'
  | 'childrenPageDoc.parent.children.id'
  | 'childrenPageDoc.parent.id'
  | 'childrenPageDoc.parent.internal.content'
  | 'childrenPageDoc.parent.internal.contentDigest'
  | 'childrenPageDoc.parent.internal.description'
  | 'childrenPageDoc.parent.internal.fieldOwners'
  | 'childrenPageDoc.parent.internal.ignoreType'
  | 'childrenPageDoc.parent.internal.mediaType'
  | 'childrenPageDoc.parent.internal.owner'
  | 'childrenPageDoc.parent.internal.type'
  | 'childrenPageDoc.parent.parent.children'
  | 'childrenPageDoc.parent.parent.id'
  | 'childrenPageDoc.title'
  | 'childrenPageDoc.video.absolutePath'
  | 'childrenPageDoc.video.accessTime'
  | 'childrenPageDoc.video.atime'
  | 'childrenPageDoc.video.atimeMs'
  | 'childrenPageDoc.video.base'
  | 'childrenPageDoc.video.birthTime'
  | 'childrenPageDoc.video.birthtime'
  | 'childrenPageDoc.video.birthtimeMs'
  | 'childrenPageDoc.video.blksize'
  | 'childrenPageDoc.video.blocks'
  | 'childrenPageDoc.video.changeTime'
  | 'childrenPageDoc.video.childAnimationsJson.children'
  | 'childrenPageDoc.video.childAnimationsJson.ddd'
  | 'childrenPageDoc.video.childAnimationsJson.fr'
  | 'childrenPageDoc.video.childAnimationsJson.h'
  | 'childrenPageDoc.video.childAnimationsJson.id'
  | 'childrenPageDoc.video.childAnimationsJson.ip'
  | 'childrenPageDoc.video.childAnimationsJson.layers'
  | 'childrenPageDoc.video.childAnimationsJson.nm'
  | 'childrenPageDoc.video.childAnimationsJson.op'
  | 'childrenPageDoc.video.childAnimationsJson.tgs'
  | 'childrenPageDoc.video.childAnimationsJson.v'
  | 'childrenPageDoc.video.childAnimationsJson.w'
  | 'childrenPageDoc.video.childDocsJson.children'
  | 'childrenPageDoc.video.childDocsJson.id'
  | 'childrenPageDoc.video.childDocsJson.type'
  | 'childrenPageDoc.video.childImageSharp.children'
  | 'childrenPageDoc.video.childImageSharp.gatsbyImageData'
  | 'childrenPageDoc.video.childImageSharp.id'
  | 'childrenPageDoc.video.childImagesJson.assets'
  | 'childrenPageDoc.video.childImagesJson.children'
  | 'childrenPageDoc.video.childImagesJson.ddd'
  | 'childrenPageDoc.video.childImagesJson.fr'
  | 'childrenPageDoc.video.childImagesJson.h'
  | 'childrenPageDoc.video.childImagesJson.id'
  | 'childrenPageDoc.video.childImagesJson.ip'
  | 'childrenPageDoc.video.childImagesJson.layers'
  | 'childrenPageDoc.video.childImagesJson.nm'
  | 'childrenPageDoc.video.childImagesJson.op'
  | 'childrenPageDoc.video.childImagesJson.v'
  | 'childrenPageDoc.video.childImagesJson.w'
  | 'childrenPageDoc.video.childPageDoc.children'
  | 'childrenPageDoc.video.childPageDoc.description'
  | 'childrenPageDoc.video.childPageDoc.id'
  | 'childrenPageDoc.video.childPageDoc.title'
  | 'childrenPageDoc.video.children'
  | 'childrenPageDoc.video.childrenAnimationsJson'
  | 'childrenPageDoc.video.childrenAnimationsJson.children'
  | 'childrenPageDoc.video.childrenAnimationsJson.ddd'
  | 'childrenPageDoc.video.childrenAnimationsJson.fr'
  | 'childrenPageDoc.video.childrenAnimationsJson.h'
  | 'childrenPageDoc.video.childrenAnimationsJson.id'
  | 'childrenPageDoc.video.childrenAnimationsJson.ip'
  | 'childrenPageDoc.video.childrenAnimationsJson.layers'
  | 'childrenPageDoc.video.childrenAnimationsJson.nm'
  | 'childrenPageDoc.video.childrenAnimationsJson.op'
  | 'childrenPageDoc.video.childrenAnimationsJson.tgs'
  | 'childrenPageDoc.video.childrenAnimationsJson.v'
  | 'childrenPageDoc.video.childrenAnimationsJson.w'
  | 'childrenPageDoc.video.childrenDocsJson'
  | 'childrenPageDoc.video.childrenDocsJson.children'
  | 'childrenPageDoc.video.childrenDocsJson.id'
  | 'childrenPageDoc.video.childrenDocsJson.type'
  | 'childrenPageDoc.video.childrenImageSharp'
  | 'childrenPageDoc.video.childrenImageSharp.children'
  | 'childrenPageDoc.video.childrenImageSharp.gatsbyImageData'
  | 'childrenPageDoc.video.childrenImageSharp.id'
  | 'childrenPageDoc.video.childrenImagesJson'
  | 'childrenPageDoc.video.childrenImagesJson.assets'
  | 'childrenPageDoc.video.childrenImagesJson.children'
  | 'childrenPageDoc.video.childrenImagesJson.ddd'
  | 'childrenPageDoc.video.childrenImagesJson.fr'
  | 'childrenPageDoc.video.childrenImagesJson.h'
  | 'childrenPageDoc.video.childrenImagesJson.id'
  | 'childrenPageDoc.video.childrenImagesJson.ip'
  | 'childrenPageDoc.video.childrenImagesJson.layers'
  | 'childrenPageDoc.video.childrenImagesJson.nm'
  | 'childrenPageDoc.video.childrenImagesJson.op'
  | 'childrenPageDoc.video.childrenImagesJson.v'
  | 'childrenPageDoc.video.childrenImagesJson.w'
  | 'childrenPageDoc.video.childrenPageDoc'
  | 'childrenPageDoc.video.childrenPageDoc.children'
  | 'childrenPageDoc.video.childrenPageDoc.description'
  | 'childrenPageDoc.video.childrenPageDoc.id'
  | 'childrenPageDoc.video.childrenPageDoc.title'
  | 'childrenPageDoc.video.children.children'
  | 'childrenPageDoc.video.children.id'
  | 'childrenPageDoc.video.ctime'
  | 'childrenPageDoc.video.ctimeMs'
  | 'childrenPageDoc.video.dev'
  | 'childrenPageDoc.video.dir'
  | 'childrenPageDoc.video.ext'
  | 'childrenPageDoc.video.extension'
  | 'childrenPageDoc.video.gid'
  | 'childrenPageDoc.video.id'
  | 'childrenPageDoc.video.ino'
  | 'childrenPageDoc.video.internal.content'
  | 'childrenPageDoc.video.internal.contentDigest'
  | 'childrenPageDoc.video.internal.description'
  | 'childrenPageDoc.video.internal.fieldOwners'
  | 'childrenPageDoc.video.internal.ignoreType'
  | 'childrenPageDoc.video.internal.mediaType'
  | 'childrenPageDoc.video.internal.owner'
  | 'childrenPageDoc.video.internal.type'
  | 'childrenPageDoc.video.mode'
  | 'childrenPageDoc.video.modifiedTime'
  | 'childrenPageDoc.video.mtime'
  | 'childrenPageDoc.video.mtimeMs'
  | 'childrenPageDoc.video.name'
  | 'childrenPageDoc.video.nlink'
  | 'childrenPageDoc.video.parent.children'
  | 'childrenPageDoc.video.parent.id'
  | 'childrenPageDoc.video.prettySize'
  | 'childrenPageDoc.video.publicURL'
  | 'childrenPageDoc.video.rdev'
  | 'childrenPageDoc.video.relativeDirectory'
  | 'childrenPageDoc.video.relativePath'
  | 'childrenPageDoc.video.root'
  | 'childrenPageDoc.video.size'
  | 'childrenPageDoc.video.sourceInstanceName'
  | 'childrenPageDoc.video.uid'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'ctime'
  | 'ctimeMs'
  | 'dev'
  | 'dir'
  | 'ext'
  | 'extension'
  | 'gid'
  | 'id'
  | 'ino'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'mode'
  | 'modifiedTime'
  | 'mtime'
  | 'mtimeMs'
  | 'name'
  | 'nlink'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'prettySize'
  | 'publicURL'
  | 'rdev'
  | 'relativeDirectory'
  | 'relativePath'
  | 'root'
  | 'size'
  | 'sourceInstanceName'
  | 'uid';

type FileFilterInput = {
  readonly absolutePath: InputMaybe<StringQueryOperatorInput>;
  readonly accessTime: InputMaybe<DateQueryOperatorInput>;
  readonly atime: InputMaybe<DateQueryOperatorInput>;
  readonly atimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly base: InputMaybe<StringQueryOperatorInput>;
  readonly birthTime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly blksize: InputMaybe<IntQueryOperatorInput>;
  readonly blocks: InputMaybe<IntQueryOperatorInput>;
  readonly changeTime: InputMaybe<DateQueryOperatorInput>;
  readonly childAnimationsJson: InputMaybe<AnimationsJsonFilterInput>;
  readonly childDocsJson: InputMaybe<DocsJsonFilterInput>;
  readonly childImageSharp: InputMaybe<ImageSharpFilterInput>;
  readonly childImagesJson: InputMaybe<ImagesJsonFilterInput>;
  readonly childPageDoc: InputMaybe<PageDocFilterInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly childrenAnimationsJson: InputMaybe<AnimationsJsonFilterListInput>;
  readonly childrenDocsJson: InputMaybe<DocsJsonFilterListInput>;
  readonly childrenImageSharp: InputMaybe<ImageSharpFilterListInput>;
  readonly childrenImagesJson: InputMaybe<ImagesJsonFilterListInput>;
  readonly childrenPageDoc: InputMaybe<PageDocFilterListInput>;
  readonly ctime: InputMaybe<DateQueryOperatorInput>;
  readonly ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly dev: InputMaybe<IntQueryOperatorInput>;
  readonly dir: InputMaybe<StringQueryOperatorInput>;
  readonly ext: InputMaybe<StringQueryOperatorInput>;
  readonly extension: InputMaybe<StringQueryOperatorInput>;
  readonly gid: InputMaybe<IntQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly ino: InputMaybe<FloatQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly mode: InputMaybe<IntQueryOperatorInput>;
  readonly modifiedTime: InputMaybe<DateQueryOperatorInput>;
  readonly mtime: InputMaybe<DateQueryOperatorInput>;
  readonly mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly nlink: InputMaybe<IntQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly prettySize: InputMaybe<StringQueryOperatorInput>;
  readonly publicURL: InputMaybe<StringQueryOperatorInput>;
  readonly rdev: InputMaybe<IntQueryOperatorInput>;
  readonly relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  readonly relativePath: InputMaybe<StringQueryOperatorInput>;
  readonly root: InputMaybe<StringQueryOperatorInput>;
  readonly size: InputMaybe<IntQueryOperatorInput>;
  readonly sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  readonly uid: InputMaybe<IntQueryOperatorInput>;
};

type FileGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<FileEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<FileGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<File>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type FileGroupConnection_distinctArgs = {
  field: FileFieldsEnum;
};


type FileGroupConnection_groupArgs = {
  field: FileFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type FileGroupConnection_maxArgs = {
  field: FileFieldsEnum;
};


type FileGroupConnection_minArgs = {
  field: FileFieldsEnum;
};


type FileGroupConnection_sumArgs = {
  field: FileFieldsEnum;
};

type FileSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<FileFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type FloatQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Float']>;
  readonly gt: InputMaybe<Scalars['Float']>;
  readonly gte: InputMaybe<Scalars['Float']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  readonly lt: InputMaybe<Scalars['Float']>;
  readonly lte: InputMaybe<Scalars['Float']>;
  readonly ne: InputMaybe<Scalars['Float']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
};

type GatsbyImageDataQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['GatsbyImageData']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['GatsbyImageData']>>>;
  readonly ne: InputMaybe<Scalars['GatsbyImageData']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['GatsbyImageData']>>>;
};

type GatsbyImageFormat =
  | 'auto'
  | 'avif'
  | 'jpg'
  | 'NO_CHANGE'
  | 'png'
  | 'webp';

type GatsbyImageLayout =
  | 'constrained'
  | 'fixed'
  | 'fullWidth';

type GatsbyImagePlaceholder =
  | 'blurred'
  | 'dominantColor'
  | 'none'
  | 'tracedSVG';

type ImageCropFocus =
  | 17
  | 'CENTER'
  | 2
  | 16
  | 1
  | 5
  | 8
  | 3
  | 6
  | 7
  | 4;

type ImageFit =
  | 'contain'
  | 'cover'
  | 'fill'
  | 'inside'
  | 'outside';

type ImageFormat =
  | 'AUTO'
  | 'avif'
  | 'jpg'
  | 'NO_CHANGE'
  | 'png'
  | 'webp';

type ImageLayout =
  | 'constrained'
  | 'fixed'
  | 'fullWidth';

type ImagePlaceholder =
  | 'blurred'
  | 'dominantColor'
  | 'none'
  | 'tracedSVG';

type ImageSharp = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly fixed: Maybe<ImageSharpFixed>;
  readonly fluid: Maybe<ImageSharpFluid>;
  readonly gatsbyImageData: Scalars['GatsbyImageData'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly original: Maybe<ImageSharpOriginal>;
  readonly parent: Maybe<Node>;
  readonly resize: Maybe<ImageSharpResize>;
};


type ImageSharp_fixedArgs = {
  background?: InputMaybe<Scalars['String']>;
  base64Width: InputMaybe<Scalars['Int']>;
  cropFocus?: InputMaybe<ImageCropFocus>;
  duotone: InputMaybe<DuotoneGradient>;
  fit?: InputMaybe<ImageFit>;
  grayscale?: InputMaybe<Scalars['Boolean']>;
  height: InputMaybe<Scalars['Int']>;
  jpegProgressive?: InputMaybe<Scalars['Boolean']>;
  jpegQuality: InputMaybe<Scalars['Int']>;
  pngCompressionSpeed?: InputMaybe<Scalars['Int']>;
  pngQuality: InputMaybe<Scalars['Int']>;
  quality: InputMaybe<Scalars['Int']>;
  rotate?: InputMaybe<Scalars['Int']>;
  toFormat?: InputMaybe<ImageFormat>;
  toFormatBase64?: InputMaybe<ImageFormat>;
  traceSVG: InputMaybe<Potrace>;
  trim?: InputMaybe<Scalars['Float']>;
  webpQuality: InputMaybe<Scalars['Int']>;
  width: InputMaybe<Scalars['Int']>;
};


type ImageSharp_fluidArgs = {
  background?: InputMaybe<Scalars['String']>;
  base64Width: InputMaybe<Scalars['Int']>;
  cropFocus?: InputMaybe<ImageCropFocus>;
  duotone: InputMaybe<DuotoneGradient>;
  fit?: InputMaybe<ImageFit>;
  grayscale?: InputMaybe<Scalars['Boolean']>;
  jpegProgressive?: InputMaybe<Scalars['Boolean']>;
  jpegQuality: InputMaybe<Scalars['Int']>;
  maxHeight: InputMaybe<Scalars['Int']>;
  maxWidth: InputMaybe<Scalars['Int']>;
  pngCompressionSpeed?: InputMaybe<Scalars['Int']>;
  pngQuality: InputMaybe<Scalars['Int']>;
  quality: InputMaybe<Scalars['Int']>;
  rotate?: InputMaybe<Scalars['Int']>;
  sizes?: InputMaybe<Scalars['String']>;
  srcSetBreakpoints?: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  toFormat?: InputMaybe<ImageFormat>;
  toFormatBase64?: InputMaybe<ImageFormat>;
  traceSVG: InputMaybe<Potrace>;
  trim?: InputMaybe<Scalars['Float']>;
  webpQuality: InputMaybe<Scalars['Int']>;
};


type ImageSharp_gatsbyImageDataArgs = {
  aspectRatio: InputMaybe<Scalars['Float']>;
  avifOptions: InputMaybe<AVIFOptions>;
  backgroundColor: InputMaybe<Scalars['String']>;
  blurredOptions: InputMaybe<BlurredOptions>;
  breakpoints: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  formats: InputMaybe<ReadonlyArray<InputMaybe<ImageFormat>>>;
  height: InputMaybe<Scalars['Int']>;
  jpgOptions: InputMaybe<JPGOptions>;
  layout?: InputMaybe<ImageLayout>;
  outputPixelDensities: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  placeholder: InputMaybe<ImagePlaceholder>;
  pngOptions: InputMaybe<PNGOptions>;
  quality: InputMaybe<Scalars['Int']>;
  sizes: InputMaybe<Scalars['String']>;
  tracedSVGOptions: InputMaybe<Potrace>;
  transformOptions: InputMaybe<TransformOptions>;
  webpOptions: InputMaybe<WebPOptions>;
  width: InputMaybe<Scalars['Int']>;
};


type ImageSharp_resizeArgs = {
  background?: InputMaybe<Scalars['String']>;
  base64?: InputMaybe<Scalars['Boolean']>;
  cropFocus?: InputMaybe<ImageCropFocus>;
  duotone: InputMaybe<DuotoneGradient>;
  fit?: InputMaybe<ImageFit>;
  grayscale?: InputMaybe<Scalars['Boolean']>;
  height: InputMaybe<Scalars['Int']>;
  jpegProgressive?: InputMaybe<Scalars['Boolean']>;
  jpegQuality: InputMaybe<Scalars['Int']>;
  pngCompressionLevel?: InputMaybe<Scalars['Int']>;
  pngCompressionSpeed?: InputMaybe<Scalars['Int']>;
  pngQuality: InputMaybe<Scalars['Int']>;
  quality: InputMaybe<Scalars['Int']>;
  rotate?: InputMaybe<Scalars['Int']>;
  toFormat?: InputMaybe<ImageFormat>;
  traceSVG: InputMaybe<Potrace>;
  trim?: InputMaybe<Scalars['Float']>;
  webpQuality: InputMaybe<Scalars['Int']>;
  width: InputMaybe<Scalars['Int']>;
};

type ImageSharpConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ImageSharpEdge>;
  readonly group: ReadonlyArray<ImageSharpGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ImageSharp>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ImageSharpConnection_distinctArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpConnection_groupArgs = {
  field: ImageSharpFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ImageSharpConnection_maxArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpConnection_minArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpConnection_sumArgs = {
  field: ImageSharpFieldsEnum;
};

type ImageSharpEdge = {
  readonly next: Maybe<ImageSharp>;
  readonly node: ImageSharp;
  readonly previous: Maybe<ImageSharp>;
};

type ImageSharpFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'fixed.aspectRatio'
  | 'fixed.base64'
  | 'fixed.height'
  | 'fixed.originalName'
  | 'fixed.src'
  | 'fixed.srcSet'
  | 'fixed.srcSetWebp'
  | 'fixed.srcWebp'
  | 'fixed.tracedSVG'
  | 'fixed.width'
  | 'fluid.aspectRatio'
  | 'fluid.base64'
  | 'fluid.originalImg'
  | 'fluid.originalName'
  | 'fluid.presentationHeight'
  | 'fluid.presentationWidth'
  | 'fluid.sizes'
  | 'fluid.src'
  | 'fluid.srcSet'
  | 'fluid.srcSetWebp'
  | 'fluid.srcWebp'
  | 'fluid.tracedSVG'
  | 'gatsbyImageData'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'original.height'
  | 'original.src'
  | 'original.width'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'resize.aspectRatio'
  | 'resize.height'
  | 'resize.originalName'
  | 'resize.src'
  | 'resize.tracedSVG'
  | 'resize.width';

type ImageSharpFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly fixed: InputMaybe<ImageSharpFixedFilterInput>;
  readonly fluid: InputMaybe<ImageSharpFluidFilterInput>;
  readonly gatsbyImageData: InputMaybe<GatsbyImageDataQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly original: InputMaybe<ImageSharpOriginalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly resize: InputMaybe<ImageSharpResizeFilterInput>;
};

type ImageSharpFilterListInput = {
  readonly elemMatch: InputMaybe<ImageSharpFilterInput>;
};

type ImageSharpFixed = {
  readonly aspectRatio: Maybe<Scalars['Float']>;
  readonly base64: Maybe<Scalars['String']>;
  readonly height: Scalars['Float'];
  readonly originalName: Maybe<Scalars['String']>;
  readonly src: Scalars['String'];
  readonly srcSet: Scalars['String'];
  readonly srcSetWebp: Maybe<Scalars['String']>;
  readonly srcWebp: Maybe<Scalars['String']>;
  readonly tracedSVG: Maybe<Scalars['String']>;
  readonly width: Scalars['Float'];
};

type ImageSharpFixedFilterInput = {
  readonly aspectRatio: InputMaybe<FloatQueryOperatorInput>;
  readonly base64: InputMaybe<StringQueryOperatorInput>;
  readonly height: InputMaybe<FloatQueryOperatorInput>;
  readonly originalName: InputMaybe<StringQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly srcSet: InputMaybe<StringQueryOperatorInput>;
  readonly srcSetWebp: InputMaybe<StringQueryOperatorInput>;
  readonly srcWebp: InputMaybe<StringQueryOperatorInput>;
  readonly tracedSVG: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<FloatQueryOperatorInput>;
};

type ImageSharpFluid = {
  readonly aspectRatio: Scalars['Float'];
  readonly base64: Maybe<Scalars['String']>;
  readonly originalImg: Maybe<Scalars['String']>;
  readonly originalName: Maybe<Scalars['String']>;
  readonly presentationHeight: Scalars['Int'];
  readonly presentationWidth: Scalars['Int'];
  readonly sizes: Scalars['String'];
  readonly src: Scalars['String'];
  readonly srcSet: Scalars['String'];
  readonly srcSetWebp: Maybe<Scalars['String']>;
  readonly srcWebp: Maybe<Scalars['String']>;
  readonly tracedSVG: Maybe<Scalars['String']>;
};

type ImageSharpFluidFilterInput = {
  readonly aspectRatio: InputMaybe<FloatQueryOperatorInput>;
  readonly base64: InputMaybe<StringQueryOperatorInput>;
  readonly originalImg: InputMaybe<StringQueryOperatorInput>;
  readonly originalName: InputMaybe<StringQueryOperatorInput>;
  readonly presentationHeight: InputMaybe<IntQueryOperatorInput>;
  readonly presentationWidth: InputMaybe<IntQueryOperatorInput>;
  readonly sizes: InputMaybe<StringQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly srcSet: InputMaybe<StringQueryOperatorInput>;
  readonly srcSetWebp: InputMaybe<StringQueryOperatorInput>;
  readonly srcWebp: InputMaybe<StringQueryOperatorInput>;
  readonly tracedSVG: InputMaybe<StringQueryOperatorInput>;
};

type ImageSharpGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ImageSharpEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ImageSharpGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ImageSharp>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ImageSharpGroupConnection_distinctArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpGroupConnection_groupArgs = {
  field: ImageSharpFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ImageSharpGroupConnection_maxArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpGroupConnection_minArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpGroupConnection_sumArgs = {
  field: ImageSharpFieldsEnum;
};

type ImageSharpOriginal = {
  readonly height: Maybe<Scalars['Float']>;
  readonly src: Maybe<Scalars['String']>;
  readonly width: Maybe<Scalars['Float']>;
};

type ImageSharpOriginalFilterInput = {
  readonly height: InputMaybe<FloatQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<FloatQueryOperatorInput>;
};

type ImageSharpResize = {
  readonly aspectRatio: Maybe<Scalars['Float']>;
  readonly height: Maybe<Scalars['Int']>;
  readonly originalName: Maybe<Scalars['String']>;
  readonly src: Maybe<Scalars['String']>;
  readonly tracedSVG: Maybe<Scalars['String']>;
  readonly width: Maybe<Scalars['Int']>;
};

type ImageSharpResizeFilterInput = {
  readonly aspectRatio: InputMaybe<FloatQueryOperatorInput>;
  readonly height: InputMaybe<IntQueryOperatorInput>;
  readonly originalName: InputMaybe<StringQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly tracedSVG: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<IntQueryOperatorInput>;
};

type ImageSharpSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<ImageSharpFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type ImagesJson = Node & {
  readonly assets: Maybe<ReadonlyArray<Maybe<ImagesJsonAssets>>>;
  readonly children: ReadonlyArray<Node>;
  readonly ddd: Maybe<Scalars['Int']>;
  readonly fr: Maybe<Scalars['Int']>;
  readonly h: Maybe<Scalars['Int']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly ip: Maybe<Scalars['Int']>;
  readonly layers: Maybe<ReadonlyArray<Maybe<ImagesJsonLayers>>>;
  readonly nm: Maybe<Scalars['String']>;
  readonly op: Maybe<Scalars['Int']>;
  readonly parent: Maybe<Node>;
  readonly v: Maybe<Scalars['String']>;
  readonly w: Maybe<Scalars['Int']>;
};

type ImagesJsonAssets = {
  readonly id: Maybe<Scalars['String']>;
  readonly layers: Maybe<ReadonlyArray<Maybe<ImagesJsonAssetsLayers>>>;
};

type ImagesJsonAssetsFilterInput = {
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly layers: InputMaybe<ImagesJsonAssetsLayersFilterListInput>;
};

type ImagesJsonAssetsFilterListInput = {
  readonly elemMatch: InputMaybe<ImagesJsonAssetsFilterInput>;
};

type ImagesJsonAssetsLayers = {
  readonly ao: Maybe<Scalars['Int']>;
  readonly bm: Maybe<Scalars['Int']>;
  readonly ddd: Maybe<Scalars['Int']>;
  readonly hasMask: Maybe<Scalars['Boolean']>;
  readonly ind: Maybe<Scalars['Int']>;
  readonly ip: Maybe<Scalars['Int']>;
  readonly ks: Maybe<ImagesJsonAssetsLayersKs>;
  readonly masksProperties: Maybe<ReadonlyArray<Maybe<ImagesJsonAssetsLayersMasksProperties>>>;
  readonly nm: Maybe<Scalars['String']>;
  readonly op: Maybe<Scalars['Int']>;
  readonly parent: Maybe<Scalars['Int']>;
  readonly shapes: Maybe<ReadonlyArray<Maybe<ImagesJsonAssetsLayersShapes>>>;
  readonly sr: Maybe<Scalars['Int']>;
  readonly st: Maybe<Scalars['Int']>;
  readonly ty: Maybe<Scalars['Int']>;
};

type ImagesJsonAssetsLayersFilterInput = {
  readonly ao: InputMaybe<IntQueryOperatorInput>;
  readonly bm: InputMaybe<IntQueryOperatorInput>;
  readonly ddd: InputMaybe<IntQueryOperatorInput>;
  readonly hasMask: InputMaybe<BooleanQueryOperatorInput>;
  readonly ind: InputMaybe<IntQueryOperatorInput>;
  readonly ip: InputMaybe<IntQueryOperatorInput>;
  readonly ks: InputMaybe<ImagesJsonAssetsLayersKsFilterInput>;
  readonly masksProperties: InputMaybe<ImagesJsonAssetsLayersMasksPropertiesFilterListInput>;
  readonly nm: InputMaybe<StringQueryOperatorInput>;
  readonly op: InputMaybe<IntQueryOperatorInput>;
  readonly parent: InputMaybe<IntQueryOperatorInput>;
  readonly shapes: InputMaybe<ImagesJsonAssetsLayersShapesFilterListInput>;
  readonly sr: InputMaybe<IntQueryOperatorInput>;
  readonly st: InputMaybe<IntQueryOperatorInput>;
  readonly ty: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonAssetsLayersFilterListInput = {
  readonly elemMatch: InputMaybe<ImagesJsonAssetsLayersFilterInput>;
};

type ImagesJsonAssetsLayersKs = {
  readonly a: Maybe<ImagesJsonAssetsLayersKsA>;
  readonly o: Maybe<ImagesJsonAssetsLayersKsO>;
  readonly p: Maybe<ImagesJsonAssetsLayersKsP>;
  readonly r: Maybe<ImagesJsonAssetsLayersKsR>;
  readonly s: Maybe<ImagesJsonAssetsLayersKsS>;
};

type ImagesJsonAssetsLayersKsA = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>;
  readonly l: Maybe<Scalars['Int']>;
};

type ImagesJsonAssetsLayersKsAFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<FloatQueryOperatorInput>;
  readonly l: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonAssetsLayersKsFilterInput = {
  readonly a: InputMaybe<ImagesJsonAssetsLayersKsAFilterInput>;
  readonly o: InputMaybe<ImagesJsonAssetsLayersKsOFilterInput>;
  readonly p: InputMaybe<ImagesJsonAssetsLayersKsPFilterInput>;
  readonly r: InputMaybe<ImagesJsonAssetsLayersKsRFilterInput>;
  readonly s: InputMaybe<ImagesJsonAssetsLayersKsSFilterInput>;
};

type ImagesJsonAssetsLayersKsO = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<Scalars['Int']>;
};

type ImagesJsonAssetsLayersKsOFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonAssetsLayersKsP = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly l: Maybe<Scalars['Int']>;
};

type ImagesJsonAssetsLayersKsPFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly l: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonAssetsLayersKsR = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<Scalars['Int']>;
};

type ImagesJsonAssetsLayersKsRFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonAssetsLayersKsS = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<ReadonlyArray<Maybe<Scalars['Int']>>>;
  readonly l: Maybe<Scalars['Int']>;
};

type ImagesJsonAssetsLayersKsSFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
  readonly l: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonAssetsLayersMasksProperties = {
  readonly inv: Maybe<Scalars['Boolean']>;
  readonly mode: Maybe<Scalars['String']>;
  readonly nm: Maybe<Scalars['String']>;
  readonly o: Maybe<ImagesJsonAssetsLayersMasksPropertiesO>;
  readonly pt: Maybe<ImagesJsonAssetsLayersMasksPropertiesPt>;
  readonly x: Maybe<ImagesJsonAssetsLayersMasksPropertiesX>;
};

type ImagesJsonAssetsLayersMasksPropertiesFilterInput = {
  readonly inv: InputMaybe<BooleanQueryOperatorInput>;
  readonly mode: InputMaybe<StringQueryOperatorInput>;
  readonly nm: InputMaybe<StringQueryOperatorInput>;
  readonly o: InputMaybe<ImagesJsonAssetsLayersMasksPropertiesOFilterInput>;
  readonly pt: InputMaybe<ImagesJsonAssetsLayersMasksPropertiesPtFilterInput>;
  readonly x: InputMaybe<ImagesJsonAssetsLayersMasksPropertiesXFilterInput>;
};

type ImagesJsonAssetsLayersMasksPropertiesFilterListInput = {
  readonly elemMatch: InputMaybe<ImagesJsonAssetsLayersMasksPropertiesFilterInput>;
};

type ImagesJsonAssetsLayersMasksPropertiesO = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<Scalars['Int']>;
};

type ImagesJsonAssetsLayersMasksPropertiesOFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonAssetsLayersMasksPropertiesPt = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<ImagesJsonAssetsLayersMasksPropertiesPtK>;
};

type ImagesJsonAssetsLayersMasksPropertiesPtFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<ImagesJsonAssetsLayersMasksPropertiesPtKFilterInput>;
};

type ImagesJsonAssetsLayersMasksPropertiesPtK = {
  readonly c: Maybe<Scalars['Boolean']>;
  readonly i: Maybe<ReadonlyArray<Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>>>;
  readonly o: Maybe<ReadonlyArray<Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>>>;
  readonly v: Maybe<ReadonlyArray<Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>>>;
};

type ImagesJsonAssetsLayersMasksPropertiesPtKFilterInput = {
  readonly c: InputMaybe<BooleanQueryOperatorInput>;
  readonly i: InputMaybe<FloatQueryOperatorInput>;
  readonly o: InputMaybe<FloatQueryOperatorInput>;
  readonly v: InputMaybe<FloatQueryOperatorInput>;
};

type ImagesJsonAssetsLayersMasksPropertiesX = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<Scalars['Int']>;
};

type ImagesJsonAssetsLayersMasksPropertiesXFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapes = {
  readonly bm: Maybe<Scalars['Int']>;
  readonly cix: Maybe<Scalars['Int']>;
  readonly hd: Maybe<Scalars['Boolean']>;
  readonly it: Maybe<ReadonlyArray<Maybe<ImagesJsonAssetsLayersShapesIt>>>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly mn: Maybe<Scalars['String']>;
  readonly nm: Maybe<Scalars['String']>;
  readonly np: Maybe<Scalars['Int']>;
  readonly ty: Maybe<Scalars['String']>;
};

type ImagesJsonAssetsLayersShapesFilterInput = {
  readonly bm: InputMaybe<IntQueryOperatorInput>;
  readonly cix: InputMaybe<IntQueryOperatorInput>;
  readonly hd: InputMaybe<BooleanQueryOperatorInput>;
  readonly it: InputMaybe<ImagesJsonAssetsLayersShapesItFilterListInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly mn: InputMaybe<StringQueryOperatorInput>;
  readonly nm: InputMaybe<StringQueryOperatorInput>;
  readonly np: InputMaybe<IntQueryOperatorInput>;
  readonly ty: InputMaybe<StringQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesFilterListInput = {
  readonly elemMatch: InputMaybe<ImagesJsonAssetsLayersShapesFilterInput>;
};

type ImagesJsonAssetsLayersShapesIt = {
  readonly a: Maybe<ImagesJsonAssetsLayersShapesItA>;
  readonly bm: Maybe<Scalars['Int']>;
  readonly c: Maybe<ImagesJsonAssetsLayersShapesItC>;
  readonly cix: Maybe<Scalars['Int']>;
  readonly d: Maybe<Scalars['Int']>;
  readonly hd: Maybe<Scalars['Boolean']>;
  readonly ind: Maybe<Scalars['Int']>;
  readonly it: Maybe<ReadonlyArray<Maybe<ImagesJsonAssetsLayersShapesItIt>>>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly ks: Maybe<ImagesJsonAssetsLayersShapesItKs>;
  readonly mn: Maybe<Scalars['String']>;
  readonly nm: Maybe<Scalars['String']>;
  readonly np: Maybe<Scalars['Int']>;
  readonly o: Maybe<ImagesJsonAssetsLayersShapesItO>;
  readonly p: Maybe<ImagesJsonAssetsLayersShapesItP>;
  readonly s: Maybe<ImagesJsonAssetsLayersShapesItS>;
  readonly sa: Maybe<ImagesJsonAssetsLayersShapesItSa>;
  readonly sk: Maybe<ImagesJsonAssetsLayersShapesItSk>;
  readonly ty: Maybe<Scalars['String']>;
};

type ImagesJsonAssetsLayersShapesItA = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>;
};

type ImagesJsonAssetsLayersShapesItAFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<FloatQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesItC = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>;
};

type ImagesJsonAssetsLayersShapesItCFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<FloatQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesItFilterInput = {
  readonly a: InputMaybe<ImagesJsonAssetsLayersShapesItAFilterInput>;
  readonly bm: InputMaybe<IntQueryOperatorInput>;
  readonly c: InputMaybe<ImagesJsonAssetsLayersShapesItCFilterInput>;
  readonly cix: InputMaybe<IntQueryOperatorInput>;
  readonly d: InputMaybe<IntQueryOperatorInput>;
  readonly hd: InputMaybe<BooleanQueryOperatorInput>;
  readonly ind: InputMaybe<IntQueryOperatorInput>;
  readonly it: InputMaybe<ImagesJsonAssetsLayersShapesItItFilterListInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly ks: InputMaybe<ImagesJsonAssetsLayersShapesItKsFilterInput>;
  readonly mn: InputMaybe<StringQueryOperatorInput>;
  readonly nm: InputMaybe<StringQueryOperatorInput>;
  readonly np: InputMaybe<IntQueryOperatorInput>;
  readonly o: InputMaybe<ImagesJsonAssetsLayersShapesItOFilterInput>;
  readonly p: InputMaybe<ImagesJsonAssetsLayersShapesItPFilterInput>;
  readonly s: InputMaybe<ImagesJsonAssetsLayersShapesItSFilterInput>;
  readonly sa: InputMaybe<ImagesJsonAssetsLayersShapesItSaFilterInput>;
  readonly sk: InputMaybe<ImagesJsonAssetsLayersShapesItSkFilterInput>;
  readonly ty: InputMaybe<StringQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesItFilterListInput = {
  readonly elemMatch: InputMaybe<ImagesJsonAssetsLayersShapesItFilterInput>;
};

type ImagesJsonAssetsLayersShapesItIt = {
  readonly a: Maybe<ImagesJsonAssetsLayersShapesItItA>;
  readonly bm: Maybe<Scalars['Int']>;
  readonly c: Maybe<ImagesJsonAssetsLayersShapesItItC>;
  readonly cix: Maybe<Scalars['Int']>;
  readonly hd: Maybe<Scalars['Boolean']>;
  readonly ind: Maybe<Scalars['Int']>;
  readonly it: Maybe<ReadonlyArray<Maybe<ImagesJsonAssetsLayersShapesItItIt>>>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly ks: Maybe<ImagesJsonAssetsLayersShapesItItKs>;
  readonly mn: Maybe<Scalars['String']>;
  readonly nm: Maybe<Scalars['String']>;
  readonly np: Maybe<Scalars['Int']>;
  readonly o: Maybe<ImagesJsonAssetsLayersShapesItItO>;
  readonly p: Maybe<ImagesJsonAssetsLayersShapesItItP>;
  readonly s: Maybe<ImagesJsonAssetsLayersShapesItItS>;
  readonly sa: Maybe<ImagesJsonAssetsLayersShapesItItSa>;
  readonly sk: Maybe<ImagesJsonAssetsLayersShapesItItSk>;
  readonly ty: Maybe<Scalars['String']>;
};

type ImagesJsonAssetsLayersShapesItItA = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>;
};

type ImagesJsonAssetsLayersShapesItItAFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<FloatQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesItItC = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>;
};

type ImagesJsonAssetsLayersShapesItItCFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<FloatQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesItItFilterInput = {
  readonly a: InputMaybe<ImagesJsonAssetsLayersShapesItItAFilterInput>;
  readonly bm: InputMaybe<IntQueryOperatorInput>;
  readonly c: InputMaybe<ImagesJsonAssetsLayersShapesItItCFilterInput>;
  readonly cix: InputMaybe<IntQueryOperatorInput>;
  readonly hd: InputMaybe<BooleanQueryOperatorInput>;
  readonly ind: InputMaybe<IntQueryOperatorInput>;
  readonly it: InputMaybe<ImagesJsonAssetsLayersShapesItItItFilterListInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly ks: InputMaybe<ImagesJsonAssetsLayersShapesItItKsFilterInput>;
  readonly mn: InputMaybe<StringQueryOperatorInput>;
  readonly nm: InputMaybe<StringQueryOperatorInput>;
  readonly np: InputMaybe<IntQueryOperatorInput>;
  readonly o: InputMaybe<ImagesJsonAssetsLayersShapesItItOFilterInput>;
  readonly p: InputMaybe<ImagesJsonAssetsLayersShapesItItPFilterInput>;
  readonly s: InputMaybe<ImagesJsonAssetsLayersShapesItItSFilterInput>;
  readonly sa: InputMaybe<ImagesJsonAssetsLayersShapesItItSaFilterInput>;
  readonly sk: InputMaybe<ImagesJsonAssetsLayersShapesItItSkFilterInput>;
  readonly ty: InputMaybe<StringQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesItItFilterListInput = {
  readonly elemMatch: InputMaybe<ImagesJsonAssetsLayersShapesItItFilterInput>;
};

type ImagesJsonAssetsLayersShapesItItIt = {
  readonly a: Maybe<ImagesJsonAssetsLayersShapesItItItA>;
  readonly bm: Maybe<Scalars['Int']>;
  readonly c: Maybe<ImagesJsonAssetsLayersShapesItItItC>;
  readonly hd: Maybe<Scalars['Boolean']>;
  readonly ind: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly ks: Maybe<ImagesJsonAssetsLayersShapesItItItKs>;
  readonly mn: Maybe<Scalars['String']>;
  readonly nm: Maybe<Scalars['String']>;
  readonly o: Maybe<ImagesJsonAssetsLayersShapesItItItO>;
  readonly p: Maybe<ImagesJsonAssetsLayersShapesItItItP>;
  readonly s: Maybe<ImagesJsonAssetsLayersShapesItItItS>;
  readonly sa: Maybe<ImagesJsonAssetsLayersShapesItItItSa>;
  readonly sk: Maybe<ImagesJsonAssetsLayersShapesItItItSk>;
  readonly ty: Maybe<Scalars['String']>;
};

type ImagesJsonAssetsLayersShapesItItItA = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<ReadonlyArray<Maybe<Scalars['Int']>>>;
};

type ImagesJsonAssetsLayersShapesItItItAFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesItItItC = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>;
};

type ImagesJsonAssetsLayersShapesItItItCFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<FloatQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesItItItFilterInput = {
  readonly a: InputMaybe<ImagesJsonAssetsLayersShapesItItItAFilterInput>;
  readonly bm: InputMaybe<IntQueryOperatorInput>;
  readonly c: InputMaybe<ImagesJsonAssetsLayersShapesItItItCFilterInput>;
  readonly hd: InputMaybe<BooleanQueryOperatorInput>;
  readonly ind: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly ks: InputMaybe<ImagesJsonAssetsLayersShapesItItItKsFilterInput>;
  readonly mn: InputMaybe<StringQueryOperatorInput>;
  readonly nm: InputMaybe<StringQueryOperatorInput>;
  readonly o: InputMaybe<ImagesJsonAssetsLayersShapesItItItOFilterInput>;
  readonly p: InputMaybe<ImagesJsonAssetsLayersShapesItItItPFilterInput>;
  readonly s: InputMaybe<ImagesJsonAssetsLayersShapesItItItSFilterInput>;
  readonly sa: InputMaybe<ImagesJsonAssetsLayersShapesItItItSaFilterInput>;
  readonly sk: InputMaybe<ImagesJsonAssetsLayersShapesItItItSkFilterInput>;
  readonly ty: InputMaybe<StringQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesItItItFilterListInput = {
  readonly elemMatch: InputMaybe<ImagesJsonAssetsLayersShapesItItItFilterInput>;
};

type ImagesJsonAssetsLayersShapesItItItKs = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<ImagesJsonAssetsLayersShapesItItItKsK>;
};

type ImagesJsonAssetsLayersShapesItItItKsFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<ImagesJsonAssetsLayersShapesItItItKsKFilterInput>;
};

type ImagesJsonAssetsLayersShapesItItItKsK = {
  readonly c: Maybe<Scalars['Boolean']>;
  readonly i: Maybe<ReadonlyArray<Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>>>;
  readonly o: Maybe<ReadonlyArray<Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>>>;
  readonly v: Maybe<ReadonlyArray<Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>>>;
};

type ImagesJsonAssetsLayersShapesItItItKsKFilterInput = {
  readonly c: InputMaybe<BooleanQueryOperatorInput>;
  readonly i: InputMaybe<FloatQueryOperatorInput>;
  readonly o: InputMaybe<FloatQueryOperatorInput>;
  readonly v: InputMaybe<FloatQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesItItItO = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<Scalars['Int']>;
};

type ImagesJsonAssetsLayersShapesItItItOFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesItItItP = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>;
};

type ImagesJsonAssetsLayersShapesItItItPFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<FloatQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesItItItS = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<ReadonlyArray<Maybe<Scalars['Int']>>>;
};

type ImagesJsonAssetsLayersShapesItItItSFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesItItItSa = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<Scalars['Int']>;
};

type ImagesJsonAssetsLayersShapesItItItSaFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesItItItSk = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<Scalars['Int']>;
};

type ImagesJsonAssetsLayersShapesItItItSkFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesItItKs = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<ImagesJsonAssetsLayersShapesItItKsK>;
};

type ImagesJsonAssetsLayersShapesItItKsFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<ImagesJsonAssetsLayersShapesItItKsKFilterInput>;
};

type ImagesJsonAssetsLayersShapesItItKsK = {
  readonly c: Maybe<Scalars['Boolean']>;
  readonly i: Maybe<ReadonlyArray<Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>>>;
  readonly o: Maybe<ReadonlyArray<Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>>>;
  readonly v: Maybe<ReadonlyArray<Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>>>;
};

type ImagesJsonAssetsLayersShapesItItKsKFilterInput = {
  readonly c: InputMaybe<BooleanQueryOperatorInput>;
  readonly i: InputMaybe<FloatQueryOperatorInput>;
  readonly o: InputMaybe<FloatQueryOperatorInput>;
  readonly v: InputMaybe<FloatQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesItItO = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<Scalars['Int']>;
};

type ImagesJsonAssetsLayersShapesItItOFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesItItP = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>;
};

type ImagesJsonAssetsLayersShapesItItPFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<FloatQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesItItS = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<ReadonlyArray<Maybe<Scalars['Int']>>>;
};

type ImagesJsonAssetsLayersShapesItItSFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesItItSa = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<Scalars['Int']>;
};

type ImagesJsonAssetsLayersShapesItItSaFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesItItSk = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<Scalars['Int']>;
};

type ImagesJsonAssetsLayersShapesItItSkFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesItKs = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<ImagesJsonAssetsLayersShapesItKsK>;
};

type ImagesJsonAssetsLayersShapesItKsFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<ImagesJsonAssetsLayersShapesItKsKFilterInput>;
};

type ImagesJsonAssetsLayersShapesItKsK = {
  readonly c: Maybe<Scalars['Boolean']>;
  readonly i: Maybe<ReadonlyArray<Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>>>;
  readonly o: Maybe<ReadonlyArray<Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>>>;
  readonly v: Maybe<ReadonlyArray<Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>>>;
};

type ImagesJsonAssetsLayersShapesItKsKFilterInput = {
  readonly c: InputMaybe<BooleanQueryOperatorInput>;
  readonly i: InputMaybe<FloatQueryOperatorInput>;
  readonly o: InputMaybe<FloatQueryOperatorInput>;
  readonly v: InputMaybe<FloatQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesItO = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<Scalars['Int']>;
};

type ImagesJsonAssetsLayersShapesItOFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesItP = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
};

type ImagesJsonAssetsLayersShapesItPFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesItS = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>;
};

type ImagesJsonAssetsLayersShapesItSFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<FloatQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesItSa = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<Scalars['Int']>;
};

type ImagesJsonAssetsLayersShapesItSaFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonAssetsLayersShapesItSk = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<Scalars['Int']>;
};

type ImagesJsonAssetsLayersShapesItSkFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ImagesJsonEdge>;
  readonly group: ReadonlyArray<ImagesJsonGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ImagesJson>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ImagesJsonConnection_distinctArgs = {
  field: ImagesJsonFieldsEnum;
};


type ImagesJsonConnection_groupArgs = {
  field: ImagesJsonFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ImagesJsonConnection_maxArgs = {
  field: ImagesJsonFieldsEnum;
};


type ImagesJsonConnection_minArgs = {
  field: ImagesJsonFieldsEnum;
};


type ImagesJsonConnection_sumArgs = {
  field: ImagesJsonFieldsEnum;
};

type ImagesJsonEdge = {
  readonly next: Maybe<ImagesJson>;
  readonly node: ImagesJson;
  readonly previous: Maybe<ImagesJson>;
};

type ImagesJsonFieldsEnum =
  | 'assets'
  | 'assets.id'
  | 'assets.layers'
  | 'assets.layers.ao'
  | 'assets.layers.bm'
  | 'assets.layers.ddd'
  | 'assets.layers.hasMask'
  | 'assets.layers.ind'
  | 'assets.layers.ip'
  | 'assets.layers.masksProperties'
  | 'assets.layers.masksProperties.inv'
  | 'assets.layers.masksProperties.mode'
  | 'assets.layers.masksProperties.nm'
  | 'assets.layers.nm'
  | 'assets.layers.op'
  | 'assets.layers.parent'
  | 'assets.layers.shapes'
  | 'assets.layers.shapes.bm'
  | 'assets.layers.shapes.cix'
  | 'assets.layers.shapes.hd'
  | 'assets.layers.shapes.it'
  | 'assets.layers.shapes.ix'
  | 'assets.layers.shapes.mn'
  | 'assets.layers.shapes.nm'
  | 'assets.layers.shapes.np'
  | 'assets.layers.shapes.ty'
  | 'assets.layers.sr'
  | 'assets.layers.st'
  | 'assets.layers.ty'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'ddd'
  | 'fr'
  | 'h'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'ip'
  | 'layers'
  | 'layers.ao'
  | 'layers.bm'
  | 'layers.ddd'
  | 'layers.h'
  | 'layers.ind'
  | 'layers.ip'
  | 'layers.ks.a.a'
  | 'layers.ks.a.ix'
  | 'layers.ks.a.k'
  | 'layers.ks.a.l'
  | 'layers.ks.o.a'
  | 'layers.ks.o.ix'
  | 'layers.ks.o.k'
  | 'layers.ks.p.a'
  | 'layers.ks.p.ix'
  | 'layers.ks.p.k'
  | 'layers.ks.p.l'
  | 'layers.ks.r.a'
  | 'layers.ks.r.ix'
  | 'layers.ks.r.k'
  | 'layers.ks.s.a'
  | 'layers.ks.s.ix'
  | 'layers.ks.s.l'
  | 'layers.nm'
  | 'layers.op'
  | 'layers.parent'
  | 'layers.refId'
  | 'layers.shapes'
  | 'layers.shapes.bm'
  | 'layers.shapes.cix'
  | 'layers.shapes.hd'
  | 'layers.shapes.it'
  | 'layers.shapes.it.bm'
  | 'layers.shapes.it.cix'
  | 'layers.shapes.it.hd'
  | 'layers.shapes.it.ind'
  | 'layers.shapes.it.it'
  | 'layers.shapes.it.ix'
  | 'layers.shapes.it.lc'
  | 'layers.shapes.it.lj'
  | 'layers.shapes.it.mm'
  | 'layers.shapes.it.mn'
  | 'layers.shapes.it.nm'
  | 'layers.shapes.it.np'
  | 'layers.shapes.it.ty'
  | 'layers.shapes.ix'
  | 'layers.shapes.mn'
  | 'layers.shapes.nm'
  | 'layers.shapes.np'
  | 'layers.shapes.ty'
  | 'layers.sr'
  | 'layers.st'
  | 'layers.ty'
  | 'layers.w'
  | 'nm'
  | 'op'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'v'
  | 'w';

type ImagesJsonFilterInput = {
  readonly assets: InputMaybe<ImagesJsonAssetsFilterListInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly ddd: InputMaybe<IntQueryOperatorInput>;
  readonly fr: InputMaybe<IntQueryOperatorInput>;
  readonly h: InputMaybe<IntQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly ip: InputMaybe<IntQueryOperatorInput>;
  readonly layers: InputMaybe<ImagesJsonLayersFilterListInput>;
  readonly nm: InputMaybe<StringQueryOperatorInput>;
  readonly op: InputMaybe<IntQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly v: InputMaybe<StringQueryOperatorInput>;
  readonly w: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonFilterListInput = {
  readonly elemMatch: InputMaybe<ImagesJsonFilterInput>;
};

type ImagesJsonGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ImagesJsonEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ImagesJsonGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ImagesJson>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ImagesJsonGroupConnection_distinctArgs = {
  field: ImagesJsonFieldsEnum;
};


type ImagesJsonGroupConnection_groupArgs = {
  field: ImagesJsonFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ImagesJsonGroupConnection_maxArgs = {
  field: ImagesJsonFieldsEnum;
};


type ImagesJsonGroupConnection_minArgs = {
  field: ImagesJsonFieldsEnum;
};


type ImagesJsonGroupConnection_sumArgs = {
  field: ImagesJsonFieldsEnum;
};

type ImagesJsonLayers = {
  readonly ao: Maybe<Scalars['Int']>;
  readonly bm: Maybe<Scalars['Int']>;
  readonly ddd: Maybe<Scalars['Int']>;
  readonly h: Maybe<Scalars['Int']>;
  readonly ind: Maybe<Scalars['Int']>;
  readonly ip: Maybe<Scalars['Int']>;
  readonly ks: Maybe<ImagesJsonLayersKs>;
  readonly nm: Maybe<Scalars['String']>;
  readonly op: Maybe<Scalars['Int']>;
  readonly parent: Maybe<Scalars['Int']>;
  readonly refId: Maybe<Scalars['String']>;
  readonly shapes: Maybe<ReadonlyArray<Maybe<ImagesJsonLayersShapes>>>;
  readonly sr: Maybe<Scalars['Int']>;
  readonly st: Maybe<Scalars['Int']>;
  readonly ty: Maybe<Scalars['Int']>;
  readonly w: Maybe<Scalars['Int']>;
};

type ImagesJsonLayersFilterInput = {
  readonly ao: InputMaybe<IntQueryOperatorInput>;
  readonly bm: InputMaybe<IntQueryOperatorInput>;
  readonly ddd: InputMaybe<IntQueryOperatorInput>;
  readonly h: InputMaybe<IntQueryOperatorInput>;
  readonly ind: InputMaybe<IntQueryOperatorInput>;
  readonly ip: InputMaybe<IntQueryOperatorInput>;
  readonly ks: InputMaybe<ImagesJsonLayersKsFilterInput>;
  readonly nm: InputMaybe<StringQueryOperatorInput>;
  readonly op: InputMaybe<IntQueryOperatorInput>;
  readonly parent: InputMaybe<IntQueryOperatorInput>;
  readonly refId: InputMaybe<StringQueryOperatorInput>;
  readonly shapes: InputMaybe<ImagesJsonLayersShapesFilterListInput>;
  readonly sr: InputMaybe<IntQueryOperatorInput>;
  readonly st: InputMaybe<IntQueryOperatorInput>;
  readonly ty: InputMaybe<IntQueryOperatorInput>;
  readonly w: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonLayersFilterListInput = {
  readonly elemMatch: InputMaybe<ImagesJsonLayersFilterInput>;
};

type ImagesJsonLayersKs = {
  readonly a: Maybe<ImagesJsonLayersKsA>;
  readonly o: Maybe<ImagesJsonLayersKsO>;
  readonly p: Maybe<ImagesJsonLayersKsP>;
  readonly r: Maybe<ImagesJsonLayersKsR>;
  readonly s: Maybe<ImagesJsonLayersKsS>;
};

type ImagesJsonLayersKsA = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>;
  readonly l: Maybe<Scalars['Int']>;
};

type ImagesJsonLayersKsAFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<FloatQueryOperatorInput>;
  readonly l: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonLayersKsFilterInput = {
  readonly a: InputMaybe<ImagesJsonLayersKsAFilterInput>;
  readonly o: InputMaybe<ImagesJsonLayersKsOFilterInput>;
  readonly p: InputMaybe<ImagesJsonLayersKsPFilterInput>;
  readonly r: InputMaybe<ImagesJsonLayersKsRFilterInput>;
  readonly s: InputMaybe<ImagesJsonLayersKsSFilterInput>;
};

type ImagesJsonLayersKsO = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<Scalars['Int']>;
};

type ImagesJsonLayersKsOFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonLayersKsP = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>;
  readonly l: Maybe<Scalars['Int']>;
};

type ImagesJsonLayersKsPFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<FloatQueryOperatorInput>;
  readonly l: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonLayersKsR = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<Scalars['Int']>;
};

type ImagesJsonLayersKsRFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonLayersKsS = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly l: Maybe<Scalars['Int']>;
};

type ImagesJsonLayersKsSFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly l: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonLayersShapes = {
  readonly bm: Maybe<Scalars['Int']>;
  readonly cix: Maybe<Scalars['Int']>;
  readonly hd: Maybe<Scalars['Boolean']>;
  readonly it: Maybe<ReadonlyArray<Maybe<ImagesJsonLayersShapesIt>>>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly mn: Maybe<Scalars['String']>;
  readonly nm: Maybe<Scalars['String']>;
  readonly np: Maybe<Scalars['Int']>;
  readonly ty: Maybe<Scalars['String']>;
};

type ImagesJsonLayersShapesFilterInput = {
  readonly bm: InputMaybe<IntQueryOperatorInput>;
  readonly cix: InputMaybe<IntQueryOperatorInput>;
  readonly hd: InputMaybe<BooleanQueryOperatorInput>;
  readonly it: InputMaybe<ImagesJsonLayersShapesItFilterListInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly mn: InputMaybe<StringQueryOperatorInput>;
  readonly nm: InputMaybe<StringQueryOperatorInput>;
  readonly np: InputMaybe<IntQueryOperatorInput>;
  readonly ty: InputMaybe<StringQueryOperatorInput>;
};

type ImagesJsonLayersShapesFilterListInput = {
  readonly elemMatch: InputMaybe<ImagesJsonLayersShapesFilterInput>;
};

type ImagesJsonLayersShapesIt = {
  readonly a: Maybe<ImagesJsonLayersShapesItA>;
  readonly bm: Maybe<Scalars['Int']>;
  readonly c: Maybe<ImagesJsonLayersShapesItC>;
  readonly cix: Maybe<Scalars['Int']>;
  readonly hd: Maybe<Scalars['Boolean']>;
  readonly ind: Maybe<Scalars['Int']>;
  readonly it: Maybe<ReadonlyArray<Maybe<ImagesJsonLayersShapesItIt>>>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly ks: Maybe<ImagesJsonLayersShapesItKs>;
  readonly lc: Maybe<Scalars['Int']>;
  readonly lj: Maybe<Scalars['Int']>;
  readonly mm: Maybe<Scalars['Int']>;
  readonly mn: Maybe<Scalars['String']>;
  readonly nm: Maybe<Scalars['String']>;
  readonly np: Maybe<Scalars['Int']>;
  readonly o: Maybe<ImagesJsonLayersShapesItO>;
  readonly p: Maybe<ImagesJsonLayersShapesItP>;
  readonly s: Maybe<ImagesJsonLayersShapesItS>;
  readonly sa: Maybe<ImagesJsonLayersShapesItSa>;
  readonly sk: Maybe<ImagesJsonLayersShapesItSk>;
  readonly ty: Maybe<Scalars['String']>;
  readonly w: Maybe<ImagesJsonLayersShapesItW>;
};

type ImagesJsonLayersShapesItA = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>;
};

type ImagesJsonLayersShapesItAFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<FloatQueryOperatorInput>;
};

type ImagesJsonLayersShapesItC = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>;
};

type ImagesJsonLayersShapesItCFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<FloatQueryOperatorInput>;
};

type ImagesJsonLayersShapesItFilterInput = {
  readonly a: InputMaybe<ImagesJsonLayersShapesItAFilterInput>;
  readonly bm: InputMaybe<IntQueryOperatorInput>;
  readonly c: InputMaybe<ImagesJsonLayersShapesItCFilterInput>;
  readonly cix: InputMaybe<IntQueryOperatorInput>;
  readonly hd: InputMaybe<BooleanQueryOperatorInput>;
  readonly ind: InputMaybe<IntQueryOperatorInput>;
  readonly it: InputMaybe<ImagesJsonLayersShapesItItFilterListInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly ks: InputMaybe<ImagesJsonLayersShapesItKsFilterInput>;
  readonly lc: InputMaybe<IntQueryOperatorInput>;
  readonly lj: InputMaybe<IntQueryOperatorInput>;
  readonly mm: InputMaybe<IntQueryOperatorInput>;
  readonly mn: InputMaybe<StringQueryOperatorInput>;
  readonly nm: InputMaybe<StringQueryOperatorInput>;
  readonly np: InputMaybe<IntQueryOperatorInput>;
  readonly o: InputMaybe<ImagesJsonLayersShapesItOFilterInput>;
  readonly p: InputMaybe<ImagesJsonLayersShapesItPFilterInput>;
  readonly s: InputMaybe<ImagesJsonLayersShapesItSFilterInput>;
  readonly sa: InputMaybe<ImagesJsonLayersShapesItSaFilterInput>;
  readonly sk: InputMaybe<ImagesJsonLayersShapesItSkFilterInput>;
  readonly ty: InputMaybe<StringQueryOperatorInput>;
  readonly w: InputMaybe<ImagesJsonLayersShapesItWFilterInput>;
};

type ImagesJsonLayersShapesItFilterListInput = {
  readonly elemMatch: InputMaybe<ImagesJsonLayersShapesItFilterInput>;
};

type ImagesJsonLayersShapesItIt = {
  readonly a: Maybe<ImagesJsonLayersShapesItItA>;
  readonly bm: Maybe<Scalars['Int']>;
  readonly c: Maybe<ImagesJsonLayersShapesItItC>;
  readonly hd: Maybe<Scalars['Boolean']>;
  readonly ind: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly ks: Maybe<ImagesJsonLayersShapesItItKs>;
  readonly mn: Maybe<Scalars['String']>;
  readonly nm: Maybe<Scalars['String']>;
  readonly o: Maybe<ImagesJsonLayersShapesItItO>;
  readonly p: Maybe<ImagesJsonLayersShapesItItP>;
  readonly s: Maybe<ImagesJsonLayersShapesItItS>;
  readonly sa: Maybe<ImagesJsonLayersShapesItItSa>;
  readonly sk: Maybe<ImagesJsonLayersShapesItItSk>;
  readonly ty: Maybe<Scalars['String']>;
};

type ImagesJsonLayersShapesItItA = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>;
};

type ImagesJsonLayersShapesItItAFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<FloatQueryOperatorInput>;
};

type ImagesJsonLayersShapesItItC = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>;
};

type ImagesJsonLayersShapesItItCFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<FloatQueryOperatorInput>;
};

type ImagesJsonLayersShapesItItFilterInput = {
  readonly a: InputMaybe<ImagesJsonLayersShapesItItAFilterInput>;
  readonly bm: InputMaybe<IntQueryOperatorInput>;
  readonly c: InputMaybe<ImagesJsonLayersShapesItItCFilterInput>;
  readonly hd: InputMaybe<BooleanQueryOperatorInput>;
  readonly ind: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly ks: InputMaybe<ImagesJsonLayersShapesItItKsFilterInput>;
  readonly mn: InputMaybe<StringQueryOperatorInput>;
  readonly nm: InputMaybe<StringQueryOperatorInput>;
  readonly o: InputMaybe<ImagesJsonLayersShapesItItOFilterInput>;
  readonly p: InputMaybe<ImagesJsonLayersShapesItItPFilterInput>;
  readonly s: InputMaybe<ImagesJsonLayersShapesItItSFilterInput>;
  readonly sa: InputMaybe<ImagesJsonLayersShapesItItSaFilterInput>;
  readonly sk: InputMaybe<ImagesJsonLayersShapesItItSkFilterInput>;
  readonly ty: InputMaybe<StringQueryOperatorInput>;
};

type ImagesJsonLayersShapesItItFilterListInput = {
  readonly elemMatch: InputMaybe<ImagesJsonLayersShapesItItFilterInput>;
};

type ImagesJsonLayersShapesItItKs = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<ImagesJsonLayersShapesItItKsK>;
};

type ImagesJsonLayersShapesItItKsFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<ImagesJsonLayersShapesItItKsKFilterInput>;
};

type ImagesJsonLayersShapesItItKsK = {
  readonly c: Maybe<Scalars['Boolean']>;
  readonly i: Maybe<ReadonlyArray<Maybe<ReadonlyArray<Maybe<Scalars['Int']>>>>>;
  readonly o: Maybe<ReadonlyArray<Maybe<ReadonlyArray<Maybe<Scalars['Int']>>>>>;
  readonly v: Maybe<ReadonlyArray<Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>>>;
};

type ImagesJsonLayersShapesItItKsKFilterInput = {
  readonly c: InputMaybe<BooleanQueryOperatorInput>;
  readonly i: InputMaybe<IntQueryOperatorInput>;
  readonly o: InputMaybe<IntQueryOperatorInput>;
  readonly v: InputMaybe<FloatQueryOperatorInput>;
};

type ImagesJsonLayersShapesItItO = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<Scalars['Int']>;
};

type ImagesJsonLayersShapesItItOFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonLayersShapesItItP = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<ReadonlyArray<Maybe<Scalars['Float']>>>;
};

type ImagesJsonLayersShapesItItPFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<FloatQueryOperatorInput>;
};

type ImagesJsonLayersShapesItItS = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<ReadonlyArray<Maybe<Scalars['Int']>>>;
};

type ImagesJsonLayersShapesItItSFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonLayersShapesItItSa = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<Scalars['Int']>;
};

type ImagesJsonLayersShapesItItSaFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonLayersShapesItItSk = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<Scalars['Int']>;
};

type ImagesJsonLayersShapesItItSkFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonLayersShapesItKs = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
};

type ImagesJsonLayersShapesItKsFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonLayersShapesItO = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
};

type ImagesJsonLayersShapesItOFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonLayersShapesItP = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
};

type ImagesJsonLayersShapesItPFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonLayersShapesItS = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
};

type ImagesJsonLayersShapesItSFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonLayersShapesItSa = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<Scalars['Int']>;
};

type ImagesJsonLayersShapesItSaFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonLayersShapesItSk = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<Scalars['Int']>;
};

type ImagesJsonLayersShapesItSkFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<IntQueryOperatorInput>;
};

type ImagesJsonLayersShapesItW = {
  readonly a: Maybe<Scalars['Int']>;
  readonly ix: Maybe<Scalars['Int']>;
  readonly k: Maybe<Scalars['Float']>;
};

type ImagesJsonLayersShapesItWFilterInput = {
  readonly a: InputMaybe<IntQueryOperatorInput>;
  readonly ix: InputMaybe<IntQueryOperatorInput>;
  readonly k: InputMaybe<FloatQueryOperatorInput>;
};

type ImagesJsonSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<ImagesJsonFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type IntQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Int']>;
  readonly gt: InputMaybe<Scalars['Int']>;
  readonly gte: InputMaybe<Scalars['Int']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  readonly lt: InputMaybe<Scalars['Int']>;
  readonly lte: InputMaybe<Scalars['Int']>;
  readonly ne: InputMaybe<Scalars['Int']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
};

type Internal = {
  readonly content: Maybe<Scalars['String']>;
  readonly contentDigest: Scalars['String'];
  readonly description: Maybe<Scalars['String']>;
  readonly fieldOwners: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly ignoreType: Maybe<Scalars['Boolean']>;
  readonly mediaType: Maybe<Scalars['String']>;
  readonly owner: Scalars['String'];
  readonly type: Scalars['String'];
};

type InternalFilterInput = {
  readonly content: InputMaybe<StringQueryOperatorInput>;
  readonly contentDigest: InputMaybe<StringQueryOperatorInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly fieldOwners: InputMaybe<StringQueryOperatorInput>;
  readonly ignoreType: InputMaybe<BooleanQueryOperatorInput>;
  readonly mediaType: InputMaybe<StringQueryOperatorInput>;
  readonly owner: InputMaybe<StringQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type JPGOptions = {
  readonly progressive: InputMaybe<Scalars['Boolean']>;
  readonly quality: InputMaybe<Scalars['Int']>;
};

type JSONQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['JSON']>;
  readonly glob: InputMaybe<Scalars['JSON']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['JSON']>>>;
  readonly ne: InputMaybe<Scalars['JSON']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['JSON']>>>;
  readonly regex: InputMaybe<Scalars['JSON']>;
};

/** Node Interface */
type Node = {
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
};

type NodeFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type NodeFilterListInput = {
  readonly elemMatch: InputMaybe<NodeFilterInput>;
};

type PNGOptions = {
  readonly compressionSpeed: InputMaybe<Scalars['Int']>;
  readonly quality: InputMaybe<Scalars['Int']>;
};

type PageDoc = Node & {
  readonly animation: Maybe<File>;
  readonly children: ReadonlyArray<Node>;
  readonly description: Maybe<Scalars['String']>;
  readonly fileInformation: Maybe<PageDocFileInformation>;
  readonly id: Scalars['ID'];
  readonly image: Maybe<File>;
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
  readonly title: Maybe<Scalars['String']>;
  readonly video: Maybe<File>;
};

type PageDocConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<PageDocEdge>;
  readonly group: ReadonlyArray<PageDocGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<PageDoc>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type PageDocConnection_distinctArgs = {
  field: PageDocFieldsEnum;
};


type PageDocConnection_groupArgs = {
  field: PageDocFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type PageDocConnection_maxArgs = {
  field: PageDocFieldsEnum;
};


type PageDocConnection_minArgs = {
  field: PageDocFieldsEnum;
};


type PageDocConnection_sumArgs = {
  field: PageDocFieldsEnum;
};

type PageDocEdge = {
  readonly next: Maybe<PageDoc>;
  readonly node: PageDoc;
  readonly previous: Maybe<PageDoc>;
};

type PageDocFieldsEnum =
  | 'animation.absolutePath'
  | 'animation.accessTime'
  | 'animation.atime'
  | 'animation.atimeMs'
  | 'animation.base'
  | 'animation.birthTime'
  | 'animation.birthtime'
  | 'animation.birthtimeMs'
  | 'animation.blksize'
  | 'animation.blocks'
  | 'animation.changeTime'
  | 'animation.childAnimationsJson.children'
  | 'animation.childAnimationsJson.children.children'
  | 'animation.childAnimationsJson.children.id'
  | 'animation.childAnimationsJson.ddd'
  | 'animation.childAnimationsJson.fr'
  | 'animation.childAnimationsJson.h'
  | 'animation.childAnimationsJson.id'
  | 'animation.childAnimationsJson.internal.content'
  | 'animation.childAnimationsJson.internal.contentDigest'
  | 'animation.childAnimationsJson.internal.description'
  | 'animation.childAnimationsJson.internal.fieldOwners'
  | 'animation.childAnimationsJson.internal.ignoreType'
  | 'animation.childAnimationsJson.internal.mediaType'
  | 'animation.childAnimationsJson.internal.owner'
  | 'animation.childAnimationsJson.internal.type'
  | 'animation.childAnimationsJson.ip'
  | 'animation.childAnimationsJson.layers'
  | 'animation.childAnimationsJson.layers.ao'
  | 'animation.childAnimationsJson.layers.bm'
  | 'animation.childAnimationsJson.layers.ddd'
  | 'animation.childAnimationsJson.layers.ind'
  | 'animation.childAnimationsJson.layers.ip'
  | 'animation.childAnimationsJson.layers.nm'
  | 'animation.childAnimationsJson.layers.op'
  | 'animation.childAnimationsJson.layers.shapes'
  | 'animation.childAnimationsJson.layers.sr'
  | 'animation.childAnimationsJson.layers.st'
  | 'animation.childAnimationsJson.layers.ty'
  | 'animation.childAnimationsJson.nm'
  | 'animation.childAnimationsJson.op'
  | 'animation.childAnimationsJson.parent.children'
  | 'animation.childAnimationsJson.parent.id'
  | 'animation.childAnimationsJson.tgs'
  | 'animation.childAnimationsJson.v'
  | 'animation.childAnimationsJson.w'
  | 'animation.childDocsJson.children'
  | 'animation.childDocsJson.children.children'
  | 'animation.childDocsJson.children.id'
  | 'animation.childDocsJson.id'
  | 'animation.childDocsJson.internal.content'
  | 'animation.childDocsJson.internal.contentDigest'
  | 'animation.childDocsJson.internal.description'
  | 'animation.childDocsJson.internal.fieldOwners'
  | 'animation.childDocsJson.internal.ignoreType'
  | 'animation.childDocsJson.internal.mediaType'
  | 'animation.childDocsJson.internal.owner'
  | 'animation.childDocsJson.internal.type'
  | 'animation.childDocsJson.module.description'
  | 'animation.childDocsJson.module.title'
  | 'animation.childDocsJson.parent.children'
  | 'animation.childDocsJson.parent.id'
  | 'animation.childDocsJson.type'
  | 'animation.childImageSharp.children'
  | 'animation.childImageSharp.children.children'
  | 'animation.childImageSharp.children.id'
  | 'animation.childImageSharp.fixed.aspectRatio'
  | 'animation.childImageSharp.fixed.base64'
  | 'animation.childImageSharp.fixed.height'
  | 'animation.childImageSharp.fixed.originalName'
  | 'animation.childImageSharp.fixed.src'
  | 'animation.childImageSharp.fixed.srcSet'
  | 'animation.childImageSharp.fixed.srcSetWebp'
  | 'animation.childImageSharp.fixed.srcWebp'
  | 'animation.childImageSharp.fixed.tracedSVG'
  | 'animation.childImageSharp.fixed.width'
  | 'animation.childImageSharp.fluid.aspectRatio'
  | 'animation.childImageSharp.fluid.base64'
  | 'animation.childImageSharp.fluid.originalImg'
  | 'animation.childImageSharp.fluid.originalName'
  | 'animation.childImageSharp.fluid.presentationHeight'
  | 'animation.childImageSharp.fluid.presentationWidth'
  | 'animation.childImageSharp.fluid.sizes'
  | 'animation.childImageSharp.fluid.src'
  | 'animation.childImageSharp.fluid.srcSet'
  | 'animation.childImageSharp.fluid.srcSetWebp'
  | 'animation.childImageSharp.fluid.srcWebp'
  | 'animation.childImageSharp.fluid.tracedSVG'
  | 'animation.childImageSharp.gatsbyImageData'
  | 'animation.childImageSharp.id'
  | 'animation.childImageSharp.internal.content'
  | 'animation.childImageSharp.internal.contentDigest'
  | 'animation.childImageSharp.internal.description'
  | 'animation.childImageSharp.internal.fieldOwners'
  | 'animation.childImageSharp.internal.ignoreType'
  | 'animation.childImageSharp.internal.mediaType'
  | 'animation.childImageSharp.internal.owner'
  | 'animation.childImageSharp.internal.type'
  | 'animation.childImageSharp.original.height'
  | 'animation.childImageSharp.original.src'
  | 'animation.childImageSharp.original.width'
  | 'animation.childImageSharp.parent.children'
  | 'animation.childImageSharp.parent.id'
  | 'animation.childImageSharp.resize.aspectRatio'
  | 'animation.childImageSharp.resize.height'
  | 'animation.childImageSharp.resize.originalName'
  | 'animation.childImageSharp.resize.src'
  | 'animation.childImageSharp.resize.tracedSVG'
  | 'animation.childImageSharp.resize.width'
  | 'animation.childImagesJson.assets'
  | 'animation.childImagesJson.assets.id'
  | 'animation.childImagesJson.assets.layers'
  | 'animation.childImagesJson.children'
  | 'animation.childImagesJson.children.children'
  | 'animation.childImagesJson.children.id'
  | 'animation.childImagesJson.ddd'
  | 'animation.childImagesJson.fr'
  | 'animation.childImagesJson.h'
  | 'animation.childImagesJson.id'
  | 'animation.childImagesJson.internal.content'
  | 'animation.childImagesJson.internal.contentDigest'
  | 'animation.childImagesJson.internal.description'
  | 'animation.childImagesJson.internal.fieldOwners'
  | 'animation.childImagesJson.internal.ignoreType'
  | 'animation.childImagesJson.internal.mediaType'
  | 'animation.childImagesJson.internal.owner'
  | 'animation.childImagesJson.internal.type'
  | 'animation.childImagesJson.ip'
  | 'animation.childImagesJson.layers'
  | 'animation.childImagesJson.layers.ao'
  | 'animation.childImagesJson.layers.bm'
  | 'animation.childImagesJson.layers.ddd'
  | 'animation.childImagesJson.layers.h'
  | 'animation.childImagesJson.layers.ind'
  | 'animation.childImagesJson.layers.ip'
  | 'animation.childImagesJson.layers.nm'
  | 'animation.childImagesJson.layers.op'
  | 'animation.childImagesJson.layers.parent'
  | 'animation.childImagesJson.layers.refId'
  | 'animation.childImagesJson.layers.shapes'
  | 'animation.childImagesJson.layers.sr'
  | 'animation.childImagesJson.layers.st'
  | 'animation.childImagesJson.layers.ty'
  | 'animation.childImagesJson.layers.w'
  | 'animation.childImagesJson.nm'
  | 'animation.childImagesJson.op'
  | 'animation.childImagesJson.parent.children'
  | 'animation.childImagesJson.parent.id'
  | 'animation.childImagesJson.v'
  | 'animation.childImagesJson.w'
  | 'animation.childPageDoc.animation.absolutePath'
  | 'animation.childPageDoc.animation.accessTime'
  | 'animation.childPageDoc.animation.atime'
  | 'animation.childPageDoc.animation.atimeMs'
  | 'animation.childPageDoc.animation.base'
  | 'animation.childPageDoc.animation.birthTime'
  | 'animation.childPageDoc.animation.birthtime'
  | 'animation.childPageDoc.animation.birthtimeMs'
  | 'animation.childPageDoc.animation.blksize'
  | 'animation.childPageDoc.animation.blocks'
  | 'animation.childPageDoc.animation.changeTime'
  | 'animation.childPageDoc.animation.children'
  | 'animation.childPageDoc.animation.childrenAnimationsJson'
  | 'animation.childPageDoc.animation.childrenDocsJson'
  | 'animation.childPageDoc.animation.childrenImageSharp'
  | 'animation.childPageDoc.animation.childrenImagesJson'
  | 'animation.childPageDoc.animation.childrenPageDoc'
  | 'animation.childPageDoc.animation.ctime'
  | 'animation.childPageDoc.animation.ctimeMs'
  | 'animation.childPageDoc.animation.dev'
  | 'animation.childPageDoc.animation.dir'
  | 'animation.childPageDoc.animation.ext'
  | 'animation.childPageDoc.animation.extension'
  | 'animation.childPageDoc.animation.gid'
  | 'animation.childPageDoc.animation.id'
  | 'animation.childPageDoc.animation.ino'
  | 'animation.childPageDoc.animation.mode'
  | 'animation.childPageDoc.animation.modifiedTime'
  | 'animation.childPageDoc.animation.mtime'
  | 'animation.childPageDoc.animation.mtimeMs'
  | 'animation.childPageDoc.animation.name'
  | 'animation.childPageDoc.animation.nlink'
  | 'animation.childPageDoc.animation.prettySize'
  | 'animation.childPageDoc.animation.publicURL'
  | 'animation.childPageDoc.animation.rdev'
  | 'animation.childPageDoc.animation.relativeDirectory'
  | 'animation.childPageDoc.animation.relativePath'
  | 'animation.childPageDoc.animation.root'
  | 'animation.childPageDoc.animation.size'
  | 'animation.childPageDoc.animation.sourceInstanceName'
  | 'animation.childPageDoc.animation.uid'
  | 'animation.childPageDoc.children'
  | 'animation.childPageDoc.children.children'
  | 'animation.childPageDoc.children.id'
  | 'animation.childPageDoc.description'
  | 'animation.childPageDoc.fileInformation.ext'
  | 'animation.childPageDoc.fileInformation.extension'
  | 'animation.childPageDoc.fileInformation.name'
  | 'animation.childPageDoc.fileInformation.relativeDirectory'
  | 'animation.childPageDoc.id'
  | 'animation.childPageDoc.image.absolutePath'
  | 'animation.childPageDoc.image.accessTime'
  | 'animation.childPageDoc.image.atime'
  | 'animation.childPageDoc.image.atimeMs'
  | 'animation.childPageDoc.image.base'
  | 'animation.childPageDoc.image.birthTime'
  | 'animation.childPageDoc.image.birthtime'
  | 'animation.childPageDoc.image.birthtimeMs'
  | 'animation.childPageDoc.image.blksize'
  | 'animation.childPageDoc.image.blocks'
  | 'animation.childPageDoc.image.changeTime'
  | 'animation.childPageDoc.image.children'
  | 'animation.childPageDoc.image.childrenAnimationsJson'
  | 'animation.childPageDoc.image.childrenDocsJson'
  | 'animation.childPageDoc.image.childrenImageSharp'
  | 'animation.childPageDoc.image.childrenImagesJson'
  | 'animation.childPageDoc.image.childrenPageDoc'
  | 'animation.childPageDoc.image.ctime'
  | 'animation.childPageDoc.image.ctimeMs'
  | 'animation.childPageDoc.image.dev'
  | 'animation.childPageDoc.image.dir'
  | 'animation.childPageDoc.image.ext'
  | 'animation.childPageDoc.image.extension'
  | 'animation.childPageDoc.image.gid'
  | 'animation.childPageDoc.image.id'
  | 'animation.childPageDoc.image.ino'
  | 'animation.childPageDoc.image.mode'
  | 'animation.childPageDoc.image.modifiedTime'
  | 'animation.childPageDoc.image.mtime'
  | 'animation.childPageDoc.image.mtimeMs'
  | 'animation.childPageDoc.image.name'
  | 'animation.childPageDoc.image.nlink'
  | 'animation.childPageDoc.image.prettySize'
  | 'animation.childPageDoc.image.publicURL'
  | 'animation.childPageDoc.image.rdev'
  | 'animation.childPageDoc.image.relativeDirectory'
  | 'animation.childPageDoc.image.relativePath'
  | 'animation.childPageDoc.image.root'
  | 'animation.childPageDoc.image.size'
  | 'animation.childPageDoc.image.sourceInstanceName'
  | 'animation.childPageDoc.image.uid'
  | 'animation.childPageDoc.internal.content'
  | 'animation.childPageDoc.internal.contentDigest'
  | 'animation.childPageDoc.internal.description'
  | 'animation.childPageDoc.internal.fieldOwners'
  | 'animation.childPageDoc.internal.ignoreType'
  | 'animation.childPageDoc.internal.mediaType'
  | 'animation.childPageDoc.internal.owner'
  | 'animation.childPageDoc.internal.type'
  | 'animation.childPageDoc.parent.children'
  | 'animation.childPageDoc.parent.id'
  | 'animation.childPageDoc.title'
  | 'animation.childPageDoc.video.absolutePath'
  | 'animation.childPageDoc.video.accessTime'
  | 'animation.childPageDoc.video.atime'
  | 'animation.childPageDoc.video.atimeMs'
  | 'animation.childPageDoc.video.base'
  | 'animation.childPageDoc.video.birthTime'
  | 'animation.childPageDoc.video.birthtime'
  | 'animation.childPageDoc.video.birthtimeMs'
  | 'animation.childPageDoc.video.blksize'
  | 'animation.childPageDoc.video.blocks'
  | 'animation.childPageDoc.video.changeTime'
  | 'animation.childPageDoc.video.children'
  | 'animation.childPageDoc.video.childrenAnimationsJson'
  | 'animation.childPageDoc.video.childrenDocsJson'
  | 'animation.childPageDoc.video.childrenImageSharp'
  | 'animation.childPageDoc.video.childrenImagesJson'
  | 'animation.childPageDoc.video.childrenPageDoc'
  | 'animation.childPageDoc.video.ctime'
  | 'animation.childPageDoc.video.ctimeMs'
  | 'animation.childPageDoc.video.dev'
  | 'animation.childPageDoc.video.dir'
  | 'animation.childPageDoc.video.ext'
  | 'animation.childPageDoc.video.extension'
  | 'animation.childPageDoc.video.gid'
  | 'animation.childPageDoc.video.id'
  | 'animation.childPageDoc.video.ino'
  | 'animation.childPageDoc.video.mode'
  | 'animation.childPageDoc.video.modifiedTime'
  | 'animation.childPageDoc.video.mtime'
  | 'animation.childPageDoc.video.mtimeMs'
  | 'animation.childPageDoc.video.name'
  | 'animation.childPageDoc.video.nlink'
  | 'animation.childPageDoc.video.prettySize'
  | 'animation.childPageDoc.video.publicURL'
  | 'animation.childPageDoc.video.rdev'
  | 'animation.childPageDoc.video.relativeDirectory'
  | 'animation.childPageDoc.video.relativePath'
  | 'animation.childPageDoc.video.root'
  | 'animation.childPageDoc.video.size'
  | 'animation.childPageDoc.video.sourceInstanceName'
  | 'animation.childPageDoc.video.uid'
  | 'animation.children'
  | 'animation.childrenAnimationsJson'
  | 'animation.childrenAnimationsJson.children'
  | 'animation.childrenAnimationsJson.children.children'
  | 'animation.childrenAnimationsJson.children.id'
  | 'animation.childrenAnimationsJson.ddd'
  | 'animation.childrenAnimationsJson.fr'
  | 'animation.childrenAnimationsJson.h'
  | 'animation.childrenAnimationsJson.id'
  | 'animation.childrenAnimationsJson.internal.content'
  | 'animation.childrenAnimationsJson.internal.contentDigest'
  | 'animation.childrenAnimationsJson.internal.description'
  | 'animation.childrenAnimationsJson.internal.fieldOwners'
  | 'animation.childrenAnimationsJson.internal.ignoreType'
  | 'animation.childrenAnimationsJson.internal.mediaType'
  | 'animation.childrenAnimationsJson.internal.owner'
  | 'animation.childrenAnimationsJson.internal.type'
  | 'animation.childrenAnimationsJson.ip'
  | 'animation.childrenAnimationsJson.layers'
  | 'animation.childrenAnimationsJson.layers.ao'
  | 'animation.childrenAnimationsJson.layers.bm'
  | 'animation.childrenAnimationsJson.layers.ddd'
  | 'animation.childrenAnimationsJson.layers.ind'
  | 'animation.childrenAnimationsJson.layers.ip'
  | 'animation.childrenAnimationsJson.layers.nm'
  | 'animation.childrenAnimationsJson.layers.op'
  | 'animation.childrenAnimationsJson.layers.shapes'
  | 'animation.childrenAnimationsJson.layers.sr'
  | 'animation.childrenAnimationsJson.layers.st'
  | 'animation.childrenAnimationsJson.layers.ty'
  | 'animation.childrenAnimationsJson.nm'
  | 'animation.childrenAnimationsJson.op'
  | 'animation.childrenAnimationsJson.parent.children'
  | 'animation.childrenAnimationsJson.parent.id'
  | 'animation.childrenAnimationsJson.tgs'
  | 'animation.childrenAnimationsJson.v'
  | 'animation.childrenAnimationsJson.w'
  | 'animation.childrenDocsJson'
  | 'animation.childrenDocsJson.children'
  | 'animation.childrenDocsJson.children.children'
  | 'animation.childrenDocsJson.children.id'
  | 'animation.childrenDocsJson.id'
  | 'animation.childrenDocsJson.internal.content'
  | 'animation.childrenDocsJson.internal.contentDigest'
  | 'animation.childrenDocsJson.internal.description'
  | 'animation.childrenDocsJson.internal.fieldOwners'
  | 'animation.childrenDocsJson.internal.ignoreType'
  | 'animation.childrenDocsJson.internal.mediaType'
  | 'animation.childrenDocsJson.internal.owner'
  | 'animation.childrenDocsJson.internal.type'
  | 'animation.childrenDocsJson.module.description'
  | 'animation.childrenDocsJson.module.title'
  | 'animation.childrenDocsJson.parent.children'
  | 'animation.childrenDocsJson.parent.id'
  | 'animation.childrenDocsJson.type'
  | 'animation.childrenImageSharp'
  | 'animation.childrenImageSharp.children'
  | 'animation.childrenImageSharp.children.children'
  | 'animation.childrenImageSharp.children.id'
  | 'animation.childrenImageSharp.fixed.aspectRatio'
  | 'animation.childrenImageSharp.fixed.base64'
  | 'animation.childrenImageSharp.fixed.height'
  | 'animation.childrenImageSharp.fixed.originalName'
  | 'animation.childrenImageSharp.fixed.src'
  | 'animation.childrenImageSharp.fixed.srcSet'
  | 'animation.childrenImageSharp.fixed.srcSetWebp'
  | 'animation.childrenImageSharp.fixed.srcWebp'
  | 'animation.childrenImageSharp.fixed.tracedSVG'
  | 'animation.childrenImageSharp.fixed.width'
  | 'animation.childrenImageSharp.fluid.aspectRatio'
  | 'animation.childrenImageSharp.fluid.base64'
  | 'animation.childrenImageSharp.fluid.originalImg'
  | 'animation.childrenImageSharp.fluid.originalName'
  | 'animation.childrenImageSharp.fluid.presentationHeight'
  | 'animation.childrenImageSharp.fluid.presentationWidth'
  | 'animation.childrenImageSharp.fluid.sizes'
  | 'animation.childrenImageSharp.fluid.src'
  | 'animation.childrenImageSharp.fluid.srcSet'
  | 'animation.childrenImageSharp.fluid.srcSetWebp'
  | 'animation.childrenImageSharp.fluid.srcWebp'
  | 'animation.childrenImageSharp.fluid.tracedSVG'
  | 'animation.childrenImageSharp.gatsbyImageData'
  | 'animation.childrenImageSharp.id'
  | 'animation.childrenImageSharp.internal.content'
  | 'animation.childrenImageSharp.internal.contentDigest'
  | 'animation.childrenImageSharp.internal.description'
  | 'animation.childrenImageSharp.internal.fieldOwners'
  | 'animation.childrenImageSharp.internal.ignoreType'
  | 'animation.childrenImageSharp.internal.mediaType'
  | 'animation.childrenImageSharp.internal.owner'
  | 'animation.childrenImageSharp.internal.type'
  | 'animation.childrenImageSharp.original.height'
  | 'animation.childrenImageSharp.original.src'
  | 'animation.childrenImageSharp.original.width'
  | 'animation.childrenImageSharp.parent.children'
  | 'animation.childrenImageSharp.parent.id'
  | 'animation.childrenImageSharp.resize.aspectRatio'
  | 'animation.childrenImageSharp.resize.height'
  | 'animation.childrenImageSharp.resize.originalName'
  | 'animation.childrenImageSharp.resize.src'
  | 'animation.childrenImageSharp.resize.tracedSVG'
  | 'animation.childrenImageSharp.resize.width'
  | 'animation.childrenImagesJson'
  | 'animation.childrenImagesJson.assets'
  | 'animation.childrenImagesJson.assets.id'
  | 'animation.childrenImagesJson.assets.layers'
  | 'animation.childrenImagesJson.children'
  | 'animation.childrenImagesJson.children.children'
  | 'animation.childrenImagesJson.children.id'
  | 'animation.childrenImagesJson.ddd'
  | 'animation.childrenImagesJson.fr'
  | 'animation.childrenImagesJson.h'
  | 'animation.childrenImagesJson.id'
  | 'animation.childrenImagesJson.internal.content'
  | 'animation.childrenImagesJson.internal.contentDigest'
  | 'animation.childrenImagesJson.internal.description'
  | 'animation.childrenImagesJson.internal.fieldOwners'
  | 'animation.childrenImagesJson.internal.ignoreType'
  | 'animation.childrenImagesJson.internal.mediaType'
  | 'animation.childrenImagesJson.internal.owner'
  | 'animation.childrenImagesJson.internal.type'
  | 'animation.childrenImagesJson.ip'
  | 'animation.childrenImagesJson.layers'
  | 'animation.childrenImagesJson.layers.ao'
  | 'animation.childrenImagesJson.layers.bm'
  | 'animation.childrenImagesJson.layers.ddd'
  | 'animation.childrenImagesJson.layers.h'
  | 'animation.childrenImagesJson.layers.ind'
  | 'animation.childrenImagesJson.layers.ip'
  | 'animation.childrenImagesJson.layers.nm'
  | 'animation.childrenImagesJson.layers.op'
  | 'animation.childrenImagesJson.layers.parent'
  | 'animation.childrenImagesJson.layers.refId'
  | 'animation.childrenImagesJson.layers.shapes'
  | 'animation.childrenImagesJson.layers.sr'
  | 'animation.childrenImagesJson.layers.st'
  | 'animation.childrenImagesJson.layers.ty'
  | 'animation.childrenImagesJson.layers.w'
  | 'animation.childrenImagesJson.nm'
  | 'animation.childrenImagesJson.op'
  | 'animation.childrenImagesJson.parent.children'
  | 'animation.childrenImagesJson.parent.id'
  | 'animation.childrenImagesJson.v'
  | 'animation.childrenImagesJson.w'
  | 'animation.childrenPageDoc'
  | 'animation.childrenPageDoc.animation.absolutePath'
  | 'animation.childrenPageDoc.animation.accessTime'
  | 'animation.childrenPageDoc.animation.atime'
  | 'animation.childrenPageDoc.animation.atimeMs'
  | 'animation.childrenPageDoc.animation.base'
  | 'animation.childrenPageDoc.animation.birthTime'
  | 'animation.childrenPageDoc.animation.birthtime'
  | 'animation.childrenPageDoc.animation.birthtimeMs'
  | 'animation.childrenPageDoc.animation.blksize'
  | 'animation.childrenPageDoc.animation.blocks'
  | 'animation.childrenPageDoc.animation.changeTime'
  | 'animation.childrenPageDoc.animation.children'
  | 'animation.childrenPageDoc.animation.childrenAnimationsJson'
  | 'animation.childrenPageDoc.animation.childrenDocsJson'
  | 'animation.childrenPageDoc.animation.childrenImageSharp'
  | 'animation.childrenPageDoc.animation.childrenImagesJson'
  | 'animation.childrenPageDoc.animation.childrenPageDoc'
  | 'animation.childrenPageDoc.animation.ctime'
  | 'animation.childrenPageDoc.animation.ctimeMs'
  | 'animation.childrenPageDoc.animation.dev'
  | 'animation.childrenPageDoc.animation.dir'
  | 'animation.childrenPageDoc.animation.ext'
  | 'animation.childrenPageDoc.animation.extension'
  | 'animation.childrenPageDoc.animation.gid'
  | 'animation.childrenPageDoc.animation.id'
  | 'animation.childrenPageDoc.animation.ino'
  | 'animation.childrenPageDoc.animation.mode'
  | 'animation.childrenPageDoc.animation.modifiedTime'
  | 'animation.childrenPageDoc.animation.mtime'
  | 'animation.childrenPageDoc.animation.mtimeMs'
  | 'animation.childrenPageDoc.animation.name'
  | 'animation.childrenPageDoc.animation.nlink'
  | 'animation.childrenPageDoc.animation.prettySize'
  | 'animation.childrenPageDoc.animation.publicURL'
  | 'animation.childrenPageDoc.animation.rdev'
  | 'animation.childrenPageDoc.animation.relativeDirectory'
  | 'animation.childrenPageDoc.animation.relativePath'
  | 'animation.childrenPageDoc.animation.root'
  | 'animation.childrenPageDoc.animation.size'
  | 'animation.childrenPageDoc.animation.sourceInstanceName'
  | 'animation.childrenPageDoc.animation.uid'
  | 'animation.childrenPageDoc.children'
  | 'animation.childrenPageDoc.children.children'
  | 'animation.childrenPageDoc.children.id'
  | 'animation.childrenPageDoc.description'
  | 'animation.childrenPageDoc.fileInformation.ext'
  | 'animation.childrenPageDoc.fileInformation.extension'
  | 'animation.childrenPageDoc.fileInformation.name'
  | 'animation.childrenPageDoc.fileInformation.relativeDirectory'
  | 'animation.childrenPageDoc.id'
  | 'animation.childrenPageDoc.image.absolutePath'
  | 'animation.childrenPageDoc.image.accessTime'
  | 'animation.childrenPageDoc.image.atime'
  | 'animation.childrenPageDoc.image.atimeMs'
  | 'animation.childrenPageDoc.image.base'
  | 'animation.childrenPageDoc.image.birthTime'
  | 'animation.childrenPageDoc.image.birthtime'
  | 'animation.childrenPageDoc.image.birthtimeMs'
  | 'animation.childrenPageDoc.image.blksize'
  | 'animation.childrenPageDoc.image.blocks'
  | 'animation.childrenPageDoc.image.changeTime'
  | 'animation.childrenPageDoc.image.children'
  | 'animation.childrenPageDoc.image.childrenAnimationsJson'
  | 'animation.childrenPageDoc.image.childrenDocsJson'
  | 'animation.childrenPageDoc.image.childrenImageSharp'
  | 'animation.childrenPageDoc.image.childrenImagesJson'
  | 'animation.childrenPageDoc.image.childrenPageDoc'
  | 'animation.childrenPageDoc.image.ctime'
  | 'animation.childrenPageDoc.image.ctimeMs'
  | 'animation.childrenPageDoc.image.dev'
  | 'animation.childrenPageDoc.image.dir'
  | 'animation.childrenPageDoc.image.ext'
  | 'animation.childrenPageDoc.image.extension'
  | 'animation.childrenPageDoc.image.gid'
  | 'animation.childrenPageDoc.image.id'
  | 'animation.childrenPageDoc.image.ino'
  | 'animation.childrenPageDoc.image.mode'
  | 'animation.childrenPageDoc.image.modifiedTime'
  | 'animation.childrenPageDoc.image.mtime'
  | 'animation.childrenPageDoc.image.mtimeMs'
  | 'animation.childrenPageDoc.image.name'
  | 'animation.childrenPageDoc.image.nlink'
  | 'animation.childrenPageDoc.image.prettySize'
  | 'animation.childrenPageDoc.image.publicURL'
  | 'animation.childrenPageDoc.image.rdev'
  | 'animation.childrenPageDoc.image.relativeDirectory'
  | 'animation.childrenPageDoc.image.relativePath'
  | 'animation.childrenPageDoc.image.root'
  | 'animation.childrenPageDoc.image.size'
  | 'animation.childrenPageDoc.image.sourceInstanceName'
  | 'animation.childrenPageDoc.image.uid'
  | 'animation.childrenPageDoc.internal.content'
  | 'animation.childrenPageDoc.internal.contentDigest'
  | 'animation.childrenPageDoc.internal.description'
  | 'animation.childrenPageDoc.internal.fieldOwners'
  | 'animation.childrenPageDoc.internal.ignoreType'
  | 'animation.childrenPageDoc.internal.mediaType'
  | 'animation.childrenPageDoc.internal.owner'
  | 'animation.childrenPageDoc.internal.type'
  | 'animation.childrenPageDoc.parent.children'
  | 'animation.childrenPageDoc.parent.id'
  | 'animation.childrenPageDoc.title'
  | 'animation.childrenPageDoc.video.absolutePath'
  | 'animation.childrenPageDoc.video.accessTime'
  | 'animation.childrenPageDoc.video.atime'
  | 'animation.childrenPageDoc.video.atimeMs'
  | 'animation.childrenPageDoc.video.base'
  | 'animation.childrenPageDoc.video.birthTime'
  | 'animation.childrenPageDoc.video.birthtime'
  | 'animation.childrenPageDoc.video.birthtimeMs'
  | 'animation.childrenPageDoc.video.blksize'
  | 'animation.childrenPageDoc.video.blocks'
  | 'animation.childrenPageDoc.video.changeTime'
  | 'animation.childrenPageDoc.video.children'
  | 'animation.childrenPageDoc.video.childrenAnimationsJson'
  | 'animation.childrenPageDoc.video.childrenDocsJson'
  | 'animation.childrenPageDoc.video.childrenImageSharp'
  | 'animation.childrenPageDoc.video.childrenImagesJson'
  | 'animation.childrenPageDoc.video.childrenPageDoc'
  | 'animation.childrenPageDoc.video.ctime'
  | 'animation.childrenPageDoc.video.ctimeMs'
  | 'animation.childrenPageDoc.video.dev'
  | 'animation.childrenPageDoc.video.dir'
  | 'animation.childrenPageDoc.video.ext'
  | 'animation.childrenPageDoc.video.extension'
  | 'animation.childrenPageDoc.video.gid'
  | 'animation.childrenPageDoc.video.id'
  | 'animation.childrenPageDoc.video.ino'
  | 'animation.childrenPageDoc.video.mode'
  | 'animation.childrenPageDoc.video.modifiedTime'
  | 'animation.childrenPageDoc.video.mtime'
  | 'animation.childrenPageDoc.video.mtimeMs'
  | 'animation.childrenPageDoc.video.name'
  | 'animation.childrenPageDoc.video.nlink'
  | 'animation.childrenPageDoc.video.prettySize'
  | 'animation.childrenPageDoc.video.publicURL'
  | 'animation.childrenPageDoc.video.rdev'
  | 'animation.childrenPageDoc.video.relativeDirectory'
  | 'animation.childrenPageDoc.video.relativePath'
  | 'animation.childrenPageDoc.video.root'
  | 'animation.childrenPageDoc.video.size'
  | 'animation.childrenPageDoc.video.sourceInstanceName'
  | 'animation.childrenPageDoc.video.uid'
  | 'animation.children.children'
  | 'animation.children.children.children'
  | 'animation.children.children.id'
  | 'animation.children.id'
  | 'animation.children.internal.content'
  | 'animation.children.internal.contentDigest'
  | 'animation.children.internal.description'
  | 'animation.children.internal.fieldOwners'
  | 'animation.children.internal.ignoreType'
  | 'animation.children.internal.mediaType'
  | 'animation.children.internal.owner'
  | 'animation.children.internal.type'
  | 'animation.children.parent.children'
  | 'animation.children.parent.id'
  | 'animation.ctime'
  | 'animation.ctimeMs'
  | 'animation.dev'
  | 'animation.dir'
  | 'animation.ext'
  | 'animation.extension'
  | 'animation.gid'
  | 'animation.id'
  | 'animation.ino'
  | 'animation.internal.content'
  | 'animation.internal.contentDigest'
  | 'animation.internal.description'
  | 'animation.internal.fieldOwners'
  | 'animation.internal.ignoreType'
  | 'animation.internal.mediaType'
  | 'animation.internal.owner'
  | 'animation.internal.type'
  | 'animation.mode'
  | 'animation.modifiedTime'
  | 'animation.mtime'
  | 'animation.mtimeMs'
  | 'animation.name'
  | 'animation.nlink'
  | 'animation.parent.children'
  | 'animation.parent.children.children'
  | 'animation.parent.children.id'
  | 'animation.parent.id'
  | 'animation.parent.internal.content'
  | 'animation.parent.internal.contentDigest'
  | 'animation.parent.internal.description'
  | 'animation.parent.internal.fieldOwners'
  | 'animation.parent.internal.ignoreType'
  | 'animation.parent.internal.mediaType'
  | 'animation.parent.internal.owner'
  | 'animation.parent.internal.type'
  | 'animation.parent.parent.children'
  | 'animation.parent.parent.id'
  | 'animation.prettySize'
  | 'animation.publicURL'
  | 'animation.rdev'
  | 'animation.relativeDirectory'
  | 'animation.relativePath'
  | 'animation.root'
  | 'animation.size'
  | 'animation.sourceInstanceName'
  | 'animation.uid'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'description'
  | 'fileInformation.ext'
  | 'fileInformation.extension'
  | 'fileInformation.name'
  | 'fileInformation.relativeDirectory'
  | 'id'
  | 'image.absolutePath'
  | 'image.accessTime'
  | 'image.atime'
  | 'image.atimeMs'
  | 'image.base'
  | 'image.birthTime'
  | 'image.birthtime'
  | 'image.birthtimeMs'
  | 'image.blksize'
  | 'image.blocks'
  | 'image.changeTime'
  | 'image.childAnimationsJson.children'
  | 'image.childAnimationsJson.children.children'
  | 'image.childAnimationsJson.children.id'
  | 'image.childAnimationsJson.ddd'
  | 'image.childAnimationsJson.fr'
  | 'image.childAnimationsJson.h'
  | 'image.childAnimationsJson.id'
  | 'image.childAnimationsJson.internal.content'
  | 'image.childAnimationsJson.internal.contentDigest'
  | 'image.childAnimationsJson.internal.description'
  | 'image.childAnimationsJson.internal.fieldOwners'
  | 'image.childAnimationsJson.internal.ignoreType'
  | 'image.childAnimationsJson.internal.mediaType'
  | 'image.childAnimationsJson.internal.owner'
  | 'image.childAnimationsJson.internal.type'
  | 'image.childAnimationsJson.ip'
  | 'image.childAnimationsJson.layers'
  | 'image.childAnimationsJson.layers.ao'
  | 'image.childAnimationsJson.layers.bm'
  | 'image.childAnimationsJson.layers.ddd'
  | 'image.childAnimationsJson.layers.ind'
  | 'image.childAnimationsJson.layers.ip'
  | 'image.childAnimationsJson.layers.nm'
  | 'image.childAnimationsJson.layers.op'
  | 'image.childAnimationsJson.layers.shapes'
  | 'image.childAnimationsJson.layers.sr'
  | 'image.childAnimationsJson.layers.st'
  | 'image.childAnimationsJson.layers.ty'
  | 'image.childAnimationsJson.nm'
  | 'image.childAnimationsJson.op'
  | 'image.childAnimationsJson.parent.children'
  | 'image.childAnimationsJson.parent.id'
  | 'image.childAnimationsJson.tgs'
  | 'image.childAnimationsJson.v'
  | 'image.childAnimationsJson.w'
  | 'image.childDocsJson.children'
  | 'image.childDocsJson.children.children'
  | 'image.childDocsJson.children.id'
  | 'image.childDocsJson.id'
  | 'image.childDocsJson.internal.content'
  | 'image.childDocsJson.internal.contentDigest'
  | 'image.childDocsJson.internal.description'
  | 'image.childDocsJson.internal.fieldOwners'
  | 'image.childDocsJson.internal.ignoreType'
  | 'image.childDocsJson.internal.mediaType'
  | 'image.childDocsJson.internal.owner'
  | 'image.childDocsJson.internal.type'
  | 'image.childDocsJson.module.description'
  | 'image.childDocsJson.module.title'
  | 'image.childDocsJson.parent.children'
  | 'image.childDocsJson.parent.id'
  | 'image.childDocsJson.type'
  | 'image.childImageSharp.children'
  | 'image.childImageSharp.children.children'
  | 'image.childImageSharp.children.id'
  | 'image.childImageSharp.fixed.aspectRatio'
  | 'image.childImageSharp.fixed.base64'
  | 'image.childImageSharp.fixed.height'
  | 'image.childImageSharp.fixed.originalName'
  | 'image.childImageSharp.fixed.src'
  | 'image.childImageSharp.fixed.srcSet'
  | 'image.childImageSharp.fixed.srcSetWebp'
  | 'image.childImageSharp.fixed.srcWebp'
  | 'image.childImageSharp.fixed.tracedSVG'
  | 'image.childImageSharp.fixed.width'
  | 'image.childImageSharp.fluid.aspectRatio'
  | 'image.childImageSharp.fluid.base64'
  | 'image.childImageSharp.fluid.originalImg'
  | 'image.childImageSharp.fluid.originalName'
  | 'image.childImageSharp.fluid.presentationHeight'
  | 'image.childImageSharp.fluid.presentationWidth'
  | 'image.childImageSharp.fluid.sizes'
  | 'image.childImageSharp.fluid.src'
  | 'image.childImageSharp.fluid.srcSet'
  | 'image.childImageSharp.fluid.srcSetWebp'
  | 'image.childImageSharp.fluid.srcWebp'
  | 'image.childImageSharp.fluid.tracedSVG'
  | 'image.childImageSharp.gatsbyImageData'
  | 'image.childImageSharp.id'
  | 'image.childImageSharp.internal.content'
  | 'image.childImageSharp.internal.contentDigest'
  | 'image.childImageSharp.internal.description'
  | 'image.childImageSharp.internal.fieldOwners'
  | 'image.childImageSharp.internal.ignoreType'
  | 'image.childImageSharp.internal.mediaType'
  | 'image.childImageSharp.internal.owner'
  | 'image.childImageSharp.internal.type'
  | 'image.childImageSharp.original.height'
  | 'image.childImageSharp.original.src'
  | 'image.childImageSharp.original.width'
  | 'image.childImageSharp.parent.children'
  | 'image.childImageSharp.parent.id'
  | 'image.childImageSharp.resize.aspectRatio'
  | 'image.childImageSharp.resize.height'
  | 'image.childImageSharp.resize.originalName'
  | 'image.childImageSharp.resize.src'
  | 'image.childImageSharp.resize.tracedSVG'
  | 'image.childImageSharp.resize.width'
  | 'image.childImagesJson.assets'
  | 'image.childImagesJson.assets.id'
  | 'image.childImagesJson.assets.layers'
  | 'image.childImagesJson.children'
  | 'image.childImagesJson.children.children'
  | 'image.childImagesJson.children.id'
  | 'image.childImagesJson.ddd'
  | 'image.childImagesJson.fr'
  | 'image.childImagesJson.h'
  | 'image.childImagesJson.id'
  | 'image.childImagesJson.internal.content'
  | 'image.childImagesJson.internal.contentDigest'
  | 'image.childImagesJson.internal.description'
  | 'image.childImagesJson.internal.fieldOwners'
  | 'image.childImagesJson.internal.ignoreType'
  | 'image.childImagesJson.internal.mediaType'
  | 'image.childImagesJson.internal.owner'
  | 'image.childImagesJson.internal.type'
  | 'image.childImagesJson.ip'
  | 'image.childImagesJson.layers'
  | 'image.childImagesJson.layers.ao'
  | 'image.childImagesJson.layers.bm'
  | 'image.childImagesJson.layers.ddd'
  | 'image.childImagesJson.layers.h'
  | 'image.childImagesJson.layers.ind'
  | 'image.childImagesJson.layers.ip'
  | 'image.childImagesJson.layers.nm'
  | 'image.childImagesJson.layers.op'
  | 'image.childImagesJson.layers.parent'
  | 'image.childImagesJson.layers.refId'
  | 'image.childImagesJson.layers.shapes'
  | 'image.childImagesJson.layers.sr'
  | 'image.childImagesJson.layers.st'
  | 'image.childImagesJson.layers.ty'
  | 'image.childImagesJson.layers.w'
  | 'image.childImagesJson.nm'
  | 'image.childImagesJson.op'
  | 'image.childImagesJson.parent.children'
  | 'image.childImagesJson.parent.id'
  | 'image.childImagesJson.v'
  | 'image.childImagesJson.w'
  | 'image.childPageDoc.animation.absolutePath'
  | 'image.childPageDoc.animation.accessTime'
  | 'image.childPageDoc.animation.atime'
  | 'image.childPageDoc.animation.atimeMs'
  | 'image.childPageDoc.animation.base'
  | 'image.childPageDoc.animation.birthTime'
  | 'image.childPageDoc.animation.birthtime'
  | 'image.childPageDoc.animation.birthtimeMs'
  | 'image.childPageDoc.animation.blksize'
  | 'image.childPageDoc.animation.blocks'
  | 'image.childPageDoc.animation.changeTime'
  | 'image.childPageDoc.animation.children'
  | 'image.childPageDoc.animation.childrenAnimationsJson'
  | 'image.childPageDoc.animation.childrenDocsJson'
  | 'image.childPageDoc.animation.childrenImageSharp'
  | 'image.childPageDoc.animation.childrenImagesJson'
  | 'image.childPageDoc.animation.childrenPageDoc'
  | 'image.childPageDoc.animation.ctime'
  | 'image.childPageDoc.animation.ctimeMs'
  | 'image.childPageDoc.animation.dev'
  | 'image.childPageDoc.animation.dir'
  | 'image.childPageDoc.animation.ext'
  | 'image.childPageDoc.animation.extension'
  | 'image.childPageDoc.animation.gid'
  | 'image.childPageDoc.animation.id'
  | 'image.childPageDoc.animation.ino'
  | 'image.childPageDoc.animation.mode'
  | 'image.childPageDoc.animation.modifiedTime'
  | 'image.childPageDoc.animation.mtime'
  | 'image.childPageDoc.animation.mtimeMs'
  | 'image.childPageDoc.animation.name'
  | 'image.childPageDoc.animation.nlink'
  | 'image.childPageDoc.animation.prettySize'
  | 'image.childPageDoc.animation.publicURL'
  | 'image.childPageDoc.animation.rdev'
  | 'image.childPageDoc.animation.relativeDirectory'
  | 'image.childPageDoc.animation.relativePath'
  | 'image.childPageDoc.animation.root'
  | 'image.childPageDoc.animation.size'
  | 'image.childPageDoc.animation.sourceInstanceName'
  | 'image.childPageDoc.animation.uid'
  | 'image.childPageDoc.children'
  | 'image.childPageDoc.children.children'
  | 'image.childPageDoc.children.id'
  | 'image.childPageDoc.description'
  | 'image.childPageDoc.fileInformation.ext'
  | 'image.childPageDoc.fileInformation.extension'
  | 'image.childPageDoc.fileInformation.name'
  | 'image.childPageDoc.fileInformation.relativeDirectory'
  | 'image.childPageDoc.id'
  | 'image.childPageDoc.image.absolutePath'
  | 'image.childPageDoc.image.accessTime'
  | 'image.childPageDoc.image.atime'
  | 'image.childPageDoc.image.atimeMs'
  | 'image.childPageDoc.image.base'
  | 'image.childPageDoc.image.birthTime'
  | 'image.childPageDoc.image.birthtime'
  | 'image.childPageDoc.image.birthtimeMs'
  | 'image.childPageDoc.image.blksize'
  | 'image.childPageDoc.image.blocks'
  | 'image.childPageDoc.image.changeTime'
  | 'image.childPageDoc.image.children'
  | 'image.childPageDoc.image.childrenAnimationsJson'
  | 'image.childPageDoc.image.childrenDocsJson'
  | 'image.childPageDoc.image.childrenImageSharp'
  | 'image.childPageDoc.image.childrenImagesJson'
  | 'image.childPageDoc.image.childrenPageDoc'
  | 'image.childPageDoc.image.ctime'
  | 'image.childPageDoc.image.ctimeMs'
  | 'image.childPageDoc.image.dev'
  | 'image.childPageDoc.image.dir'
  | 'image.childPageDoc.image.ext'
  | 'image.childPageDoc.image.extension'
  | 'image.childPageDoc.image.gid'
  | 'image.childPageDoc.image.id'
  | 'image.childPageDoc.image.ino'
  | 'image.childPageDoc.image.mode'
  | 'image.childPageDoc.image.modifiedTime'
  | 'image.childPageDoc.image.mtime'
  | 'image.childPageDoc.image.mtimeMs'
  | 'image.childPageDoc.image.name'
  | 'image.childPageDoc.image.nlink'
  | 'image.childPageDoc.image.prettySize'
  | 'image.childPageDoc.image.publicURL'
  | 'image.childPageDoc.image.rdev'
  | 'image.childPageDoc.image.relativeDirectory'
  | 'image.childPageDoc.image.relativePath'
  | 'image.childPageDoc.image.root'
  | 'image.childPageDoc.image.size'
  | 'image.childPageDoc.image.sourceInstanceName'
  | 'image.childPageDoc.image.uid'
  | 'image.childPageDoc.internal.content'
  | 'image.childPageDoc.internal.contentDigest'
  | 'image.childPageDoc.internal.description'
  | 'image.childPageDoc.internal.fieldOwners'
  | 'image.childPageDoc.internal.ignoreType'
  | 'image.childPageDoc.internal.mediaType'
  | 'image.childPageDoc.internal.owner'
  | 'image.childPageDoc.internal.type'
  | 'image.childPageDoc.parent.children'
  | 'image.childPageDoc.parent.id'
  | 'image.childPageDoc.title'
  | 'image.childPageDoc.video.absolutePath'
  | 'image.childPageDoc.video.accessTime'
  | 'image.childPageDoc.video.atime'
  | 'image.childPageDoc.video.atimeMs'
  | 'image.childPageDoc.video.base'
  | 'image.childPageDoc.video.birthTime'
  | 'image.childPageDoc.video.birthtime'
  | 'image.childPageDoc.video.birthtimeMs'
  | 'image.childPageDoc.video.blksize'
  | 'image.childPageDoc.video.blocks'
  | 'image.childPageDoc.video.changeTime'
  | 'image.childPageDoc.video.children'
  | 'image.childPageDoc.video.childrenAnimationsJson'
  | 'image.childPageDoc.video.childrenDocsJson'
  | 'image.childPageDoc.video.childrenImageSharp'
  | 'image.childPageDoc.video.childrenImagesJson'
  | 'image.childPageDoc.video.childrenPageDoc'
  | 'image.childPageDoc.video.ctime'
  | 'image.childPageDoc.video.ctimeMs'
  | 'image.childPageDoc.video.dev'
  | 'image.childPageDoc.video.dir'
  | 'image.childPageDoc.video.ext'
  | 'image.childPageDoc.video.extension'
  | 'image.childPageDoc.video.gid'
  | 'image.childPageDoc.video.id'
  | 'image.childPageDoc.video.ino'
  | 'image.childPageDoc.video.mode'
  | 'image.childPageDoc.video.modifiedTime'
  | 'image.childPageDoc.video.mtime'
  | 'image.childPageDoc.video.mtimeMs'
  | 'image.childPageDoc.video.name'
  | 'image.childPageDoc.video.nlink'
  | 'image.childPageDoc.video.prettySize'
  | 'image.childPageDoc.video.publicURL'
  | 'image.childPageDoc.video.rdev'
  | 'image.childPageDoc.video.relativeDirectory'
  | 'image.childPageDoc.video.relativePath'
  | 'image.childPageDoc.video.root'
  | 'image.childPageDoc.video.size'
  | 'image.childPageDoc.video.sourceInstanceName'
  | 'image.childPageDoc.video.uid'
  | 'image.children'
  | 'image.childrenAnimationsJson'
  | 'image.childrenAnimationsJson.children'
  | 'image.childrenAnimationsJson.children.children'
  | 'image.childrenAnimationsJson.children.id'
  | 'image.childrenAnimationsJson.ddd'
  | 'image.childrenAnimationsJson.fr'
  | 'image.childrenAnimationsJson.h'
  | 'image.childrenAnimationsJson.id'
  | 'image.childrenAnimationsJson.internal.content'
  | 'image.childrenAnimationsJson.internal.contentDigest'
  | 'image.childrenAnimationsJson.internal.description'
  | 'image.childrenAnimationsJson.internal.fieldOwners'
  | 'image.childrenAnimationsJson.internal.ignoreType'
  | 'image.childrenAnimationsJson.internal.mediaType'
  | 'image.childrenAnimationsJson.internal.owner'
  | 'image.childrenAnimationsJson.internal.type'
  | 'image.childrenAnimationsJson.ip'
  | 'image.childrenAnimationsJson.layers'
  | 'image.childrenAnimationsJson.layers.ao'
  | 'image.childrenAnimationsJson.layers.bm'
  | 'image.childrenAnimationsJson.layers.ddd'
  | 'image.childrenAnimationsJson.layers.ind'
  | 'image.childrenAnimationsJson.layers.ip'
  | 'image.childrenAnimationsJson.layers.nm'
  | 'image.childrenAnimationsJson.layers.op'
  | 'image.childrenAnimationsJson.layers.shapes'
  | 'image.childrenAnimationsJson.layers.sr'
  | 'image.childrenAnimationsJson.layers.st'
  | 'image.childrenAnimationsJson.layers.ty'
  | 'image.childrenAnimationsJson.nm'
  | 'image.childrenAnimationsJson.op'
  | 'image.childrenAnimationsJson.parent.children'
  | 'image.childrenAnimationsJson.parent.id'
  | 'image.childrenAnimationsJson.tgs'
  | 'image.childrenAnimationsJson.v'
  | 'image.childrenAnimationsJson.w'
  | 'image.childrenDocsJson'
  | 'image.childrenDocsJson.children'
  | 'image.childrenDocsJson.children.children'
  | 'image.childrenDocsJson.children.id'
  | 'image.childrenDocsJson.id'
  | 'image.childrenDocsJson.internal.content'
  | 'image.childrenDocsJson.internal.contentDigest'
  | 'image.childrenDocsJson.internal.description'
  | 'image.childrenDocsJson.internal.fieldOwners'
  | 'image.childrenDocsJson.internal.ignoreType'
  | 'image.childrenDocsJson.internal.mediaType'
  | 'image.childrenDocsJson.internal.owner'
  | 'image.childrenDocsJson.internal.type'
  | 'image.childrenDocsJson.module.description'
  | 'image.childrenDocsJson.module.title'
  | 'image.childrenDocsJson.parent.children'
  | 'image.childrenDocsJson.parent.id'
  | 'image.childrenDocsJson.type'
  | 'image.childrenImageSharp'
  | 'image.childrenImageSharp.children'
  | 'image.childrenImageSharp.children.children'
  | 'image.childrenImageSharp.children.id'
  | 'image.childrenImageSharp.fixed.aspectRatio'
  | 'image.childrenImageSharp.fixed.base64'
  | 'image.childrenImageSharp.fixed.height'
  | 'image.childrenImageSharp.fixed.originalName'
  | 'image.childrenImageSharp.fixed.src'
  | 'image.childrenImageSharp.fixed.srcSet'
  | 'image.childrenImageSharp.fixed.srcSetWebp'
  | 'image.childrenImageSharp.fixed.srcWebp'
  | 'image.childrenImageSharp.fixed.tracedSVG'
  | 'image.childrenImageSharp.fixed.width'
  | 'image.childrenImageSharp.fluid.aspectRatio'
  | 'image.childrenImageSharp.fluid.base64'
  | 'image.childrenImageSharp.fluid.originalImg'
  | 'image.childrenImageSharp.fluid.originalName'
  | 'image.childrenImageSharp.fluid.presentationHeight'
  | 'image.childrenImageSharp.fluid.presentationWidth'
  | 'image.childrenImageSharp.fluid.sizes'
  | 'image.childrenImageSharp.fluid.src'
  | 'image.childrenImageSharp.fluid.srcSet'
  | 'image.childrenImageSharp.fluid.srcSetWebp'
  | 'image.childrenImageSharp.fluid.srcWebp'
  | 'image.childrenImageSharp.fluid.tracedSVG'
  | 'image.childrenImageSharp.gatsbyImageData'
  | 'image.childrenImageSharp.id'
  | 'image.childrenImageSharp.internal.content'
  | 'image.childrenImageSharp.internal.contentDigest'
  | 'image.childrenImageSharp.internal.description'
  | 'image.childrenImageSharp.internal.fieldOwners'
  | 'image.childrenImageSharp.internal.ignoreType'
  | 'image.childrenImageSharp.internal.mediaType'
  | 'image.childrenImageSharp.internal.owner'
  | 'image.childrenImageSharp.internal.type'
  | 'image.childrenImageSharp.original.height'
  | 'image.childrenImageSharp.original.src'
  | 'image.childrenImageSharp.original.width'
  | 'image.childrenImageSharp.parent.children'
  | 'image.childrenImageSharp.parent.id'
  | 'image.childrenImageSharp.resize.aspectRatio'
  | 'image.childrenImageSharp.resize.height'
  | 'image.childrenImageSharp.resize.originalName'
  | 'image.childrenImageSharp.resize.src'
  | 'image.childrenImageSharp.resize.tracedSVG'
  | 'image.childrenImageSharp.resize.width'
  | 'image.childrenImagesJson'
  | 'image.childrenImagesJson.assets'
  | 'image.childrenImagesJson.assets.id'
  | 'image.childrenImagesJson.assets.layers'
  | 'image.childrenImagesJson.children'
  | 'image.childrenImagesJson.children.children'
  | 'image.childrenImagesJson.children.id'
  | 'image.childrenImagesJson.ddd'
  | 'image.childrenImagesJson.fr'
  | 'image.childrenImagesJson.h'
  | 'image.childrenImagesJson.id'
  | 'image.childrenImagesJson.internal.content'
  | 'image.childrenImagesJson.internal.contentDigest'
  | 'image.childrenImagesJson.internal.description'
  | 'image.childrenImagesJson.internal.fieldOwners'
  | 'image.childrenImagesJson.internal.ignoreType'
  | 'image.childrenImagesJson.internal.mediaType'
  | 'image.childrenImagesJson.internal.owner'
  | 'image.childrenImagesJson.internal.type'
  | 'image.childrenImagesJson.ip'
  | 'image.childrenImagesJson.layers'
  | 'image.childrenImagesJson.layers.ao'
  | 'image.childrenImagesJson.layers.bm'
  | 'image.childrenImagesJson.layers.ddd'
  | 'image.childrenImagesJson.layers.h'
  | 'image.childrenImagesJson.layers.ind'
  | 'image.childrenImagesJson.layers.ip'
  | 'image.childrenImagesJson.layers.nm'
  | 'image.childrenImagesJson.layers.op'
  | 'image.childrenImagesJson.layers.parent'
  | 'image.childrenImagesJson.layers.refId'
  | 'image.childrenImagesJson.layers.shapes'
  | 'image.childrenImagesJson.layers.sr'
  | 'image.childrenImagesJson.layers.st'
  | 'image.childrenImagesJson.layers.ty'
  | 'image.childrenImagesJson.layers.w'
  | 'image.childrenImagesJson.nm'
  | 'image.childrenImagesJson.op'
  | 'image.childrenImagesJson.parent.children'
  | 'image.childrenImagesJson.parent.id'
  | 'image.childrenImagesJson.v'
  | 'image.childrenImagesJson.w'
  | 'image.childrenPageDoc'
  | 'image.childrenPageDoc.animation.absolutePath'
  | 'image.childrenPageDoc.animation.accessTime'
  | 'image.childrenPageDoc.animation.atime'
  | 'image.childrenPageDoc.animation.atimeMs'
  | 'image.childrenPageDoc.animation.base'
  | 'image.childrenPageDoc.animation.birthTime'
  | 'image.childrenPageDoc.animation.birthtime'
  | 'image.childrenPageDoc.animation.birthtimeMs'
  | 'image.childrenPageDoc.animation.blksize'
  | 'image.childrenPageDoc.animation.blocks'
  | 'image.childrenPageDoc.animation.changeTime'
  | 'image.childrenPageDoc.animation.children'
  | 'image.childrenPageDoc.animation.childrenAnimationsJson'
  | 'image.childrenPageDoc.animation.childrenDocsJson'
  | 'image.childrenPageDoc.animation.childrenImageSharp'
  | 'image.childrenPageDoc.animation.childrenImagesJson'
  | 'image.childrenPageDoc.animation.childrenPageDoc'
  | 'image.childrenPageDoc.animation.ctime'
  | 'image.childrenPageDoc.animation.ctimeMs'
  | 'image.childrenPageDoc.animation.dev'
  | 'image.childrenPageDoc.animation.dir'
  | 'image.childrenPageDoc.animation.ext'
  | 'image.childrenPageDoc.animation.extension'
  | 'image.childrenPageDoc.animation.gid'
  | 'image.childrenPageDoc.animation.id'
  | 'image.childrenPageDoc.animation.ino'
  | 'image.childrenPageDoc.animation.mode'
  | 'image.childrenPageDoc.animation.modifiedTime'
  | 'image.childrenPageDoc.animation.mtime'
  | 'image.childrenPageDoc.animation.mtimeMs'
  | 'image.childrenPageDoc.animation.name'
  | 'image.childrenPageDoc.animation.nlink'
  | 'image.childrenPageDoc.animation.prettySize'
  | 'image.childrenPageDoc.animation.publicURL'
  | 'image.childrenPageDoc.animation.rdev'
  | 'image.childrenPageDoc.animation.relativeDirectory'
  | 'image.childrenPageDoc.animation.relativePath'
  | 'image.childrenPageDoc.animation.root'
  | 'image.childrenPageDoc.animation.size'
  | 'image.childrenPageDoc.animation.sourceInstanceName'
  | 'image.childrenPageDoc.animation.uid'
  | 'image.childrenPageDoc.children'
  | 'image.childrenPageDoc.children.children'
  | 'image.childrenPageDoc.children.id'
  | 'image.childrenPageDoc.description'
  | 'image.childrenPageDoc.fileInformation.ext'
  | 'image.childrenPageDoc.fileInformation.extension'
  | 'image.childrenPageDoc.fileInformation.name'
  | 'image.childrenPageDoc.fileInformation.relativeDirectory'
  | 'image.childrenPageDoc.id'
  | 'image.childrenPageDoc.image.absolutePath'
  | 'image.childrenPageDoc.image.accessTime'
  | 'image.childrenPageDoc.image.atime'
  | 'image.childrenPageDoc.image.atimeMs'
  | 'image.childrenPageDoc.image.base'
  | 'image.childrenPageDoc.image.birthTime'
  | 'image.childrenPageDoc.image.birthtime'
  | 'image.childrenPageDoc.image.birthtimeMs'
  | 'image.childrenPageDoc.image.blksize'
  | 'image.childrenPageDoc.image.blocks'
  | 'image.childrenPageDoc.image.changeTime'
  | 'image.childrenPageDoc.image.children'
  | 'image.childrenPageDoc.image.childrenAnimationsJson'
  | 'image.childrenPageDoc.image.childrenDocsJson'
  | 'image.childrenPageDoc.image.childrenImageSharp'
  | 'image.childrenPageDoc.image.childrenImagesJson'
  | 'image.childrenPageDoc.image.childrenPageDoc'
  | 'image.childrenPageDoc.image.ctime'
  | 'image.childrenPageDoc.image.ctimeMs'
  | 'image.childrenPageDoc.image.dev'
  | 'image.childrenPageDoc.image.dir'
  | 'image.childrenPageDoc.image.ext'
  | 'image.childrenPageDoc.image.extension'
  | 'image.childrenPageDoc.image.gid'
  | 'image.childrenPageDoc.image.id'
  | 'image.childrenPageDoc.image.ino'
  | 'image.childrenPageDoc.image.mode'
  | 'image.childrenPageDoc.image.modifiedTime'
  | 'image.childrenPageDoc.image.mtime'
  | 'image.childrenPageDoc.image.mtimeMs'
  | 'image.childrenPageDoc.image.name'
  | 'image.childrenPageDoc.image.nlink'
  | 'image.childrenPageDoc.image.prettySize'
  | 'image.childrenPageDoc.image.publicURL'
  | 'image.childrenPageDoc.image.rdev'
  | 'image.childrenPageDoc.image.relativeDirectory'
  | 'image.childrenPageDoc.image.relativePath'
  | 'image.childrenPageDoc.image.root'
  | 'image.childrenPageDoc.image.size'
  | 'image.childrenPageDoc.image.sourceInstanceName'
  | 'image.childrenPageDoc.image.uid'
  | 'image.childrenPageDoc.internal.content'
  | 'image.childrenPageDoc.internal.contentDigest'
  | 'image.childrenPageDoc.internal.description'
  | 'image.childrenPageDoc.internal.fieldOwners'
  | 'image.childrenPageDoc.internal.ignoreType'
  | 'image.childrenPageDoc.internal.mediaType'
  | 'image.childrenPageDoc.internal.owner'
  | 'image.childrenPageDoc.internal.type'
  | 'image.childrenPageDoc.parent.children'
  | 'image.childrenPageDoc.parent.id'
  | 'image.childrenPageDoc.title'
  | 'image.childrenPageDoc.video.absolutePath'
  | 'image.childrenPageDoc.video.accessTime'
  | 'image.childrenPageDoc.video.atime'
  | 'image.childrenPageDoc.video.atimeMs'
  | 'image.childrenPageDoc.video.base'
  | 'image.childrenPageDoc.video.birthTime'
  | 'image.childrenPageDoc.video.birthtime'
  | 'image.childrenPageDoc.video.birthtimeMs'
  | 'image.childrenPageDoc.video.blksize'
  | 'image.childrenPageDoc.video.blocks'
  | 'image.childrenPageDoc.video.changeTime'
  | 'image.childrenPageDoc.video.children'
  | 'image.childrenPageDoc.video.childrenAnimationsJson'
  | 'image.childrenPageDoc.video.childrenDocsJson'
  | 'image.childrenPageDoc.video.childrenImageSharp'
  | 'image.childrenPageDoc.video.childrenImagesJson'
  | 'image.childrenPageDoc.video.childrenPageDoc'
  | 'image.childrenPageDoc.video.ctime'
  | 'image.childrenPageDoc.video.ctimeMs'
  | 'image.childrenPageDoc.video.dev'
  | 'image.childrenPageDoc.video.dir'
  | 'image.childrenPageDoc.video.ext'
  | 'image.childrenPageDoc.video.extension'
  | 'image.childrenPageDoc.video.gid'
  | 'image.childrenPageDoc.video.id'
  | 'image.childrenPageDoc.video.ino'
  | 'image.childrenPageDoc.video.mode'
  | 'image.childrenPageDoc.video.modifiedTime'
  | 'image.childrenPageDoc.video.mtime'
  | 'image.childrenPageDoc.video.mtimeMs'
  | 'image.childrenPageDoc.video.name'
  | 'image.childrenPageDoc.video.nlink'
  | 'image.childrenPageDoc.video.prettySize'
  | 'image.childrenPageDoc.video.publicURL'
  | 'image.childrenPageDoc.video.rdev'
  | 'image.childrenPageDoc.video.relativeDirectory'
  | 'image.childrenPageDoc.video.relativePath'
  | 'image.childrenPageDoc.video.root'
  | 'image.childrenPageDoc.video.size'
  | 'image.childrenPageDoc.video.sourceInstanceName'
  | 'image.childrenPageDoc.video.uid'
  | 'image.children.children'
  | 'image.children.children.children'
  | 'image.children.children.id'
  | 'image.children.id'
  | 'image.children.internal.content'
  | 'image.children.internal.contentDigest'
  | 'image.children.internal.description'
  | 'image.children.internal.fieldOwners'
  | 'image.children.internal.ignoreType'
  | 'image.children.internal.mediaType'
  | 'image.children.internal.owner'
  | 'image.children.internal.type'
  | 'image.children.parent.children'
  | 'image.children.parent.id'
  | 'image.ctime'
  | 'image.ctimeMs'
  | 'image.dev'
  | 'image.dir'
  | 'image.ext'
  | 'image.extension'
  | 'image.gid'
  | 'image.id'
  | 'image.ino'
  | 'image.internal.content'
  | 'image.internal.contentDigest'
  | 'image.internal.description'
  | 'image.internal.fieldOwners'
  | 'image.internal.ignoreType'
  | 'image.internal.mediaType'
  | 'image.internal.owner'
  | 'image.internal.type'
  | 'image.mode'
  | 'image.modifiedTime'
  | 'image.mtime'
  | 'image.mtimeMs'
  | 'image.name'
  | 'image.nlink'
  | 'image.parent.children'
  | 'image.parent.children.children'
  | 'image.parent.children.id'
  | 'image.parent.id'
  | 'image.parent.internal.content'
  | 'image.parent.internal.contentDigest'
  | 'image.parent.internal.description'
  | 'image.parent.internal.fieldOwners'
  | 'image.parent.internal.ignoreType'
  | 'image.parent.internal.mediaType'
  | 'image.parent.internal.owner'
  | 'image.parent.internal.type'
  | 'image.parent.parent.children'
  | 'image.parent.parent.id'
  | 'image.prettySize'
  | 'image.publicURL'
  | 'image.rdev'
  | 'image.relativeDirectory'
  | 'image.relativePath'
  | 'image.root'
  | 'image.size'
  | 'image.sourceInstanceName'
  | 'image.uid'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'title'
  | 'video.absolutePath'
  | 'video.accessTime'
  | 'video.atime'
  | 'video.atimeMs'
  | 'video.base'
  | 'video.birthTime'
  | 'video.birthtime'
  | 'video.birthtimeMs'
  | 'video.blksize'
  | 'video.blocks'
  | 'video.changeTime'
  | 'video.childAnimationsJson.children'
  | 'video.childAnimationsJson.children.children'
  | 'video.childAnimationsJson.children.id'
  | 'video.childAnimationsJson.ddd'
  | 'video.childAnimationsJson.fr'
  | 'video.childAnimationsJson.h'
  | 'video.childAnimationsJson.id'
  | 'video.childAnimationsJson.internal.content'
  | 'video.childAnimationsJson.internal.contentDigest'
  | 'video.childAnimationsJson.internal.description'
  | 'video.childAnimationsJson.internal.fieldOwners'
  | 'video.childAnimationsJson.internal.ignoreType'
  | 'video.childAnimationsJson.internal.mediaType'
  | 'video.childAnimationsJson.internal.owner'
  | 'video.childAnimationsJson.internal.type'
  | 'video.childAnimationsJson.ip'
  | 'video.childAnimationsJson.layers'
  | 'video.childAnimationsJson.layers.ao'
  | 'video.childAnimationsJson.layers.bm'
  | 'video.childAnimationsJson.layers.ddd'
  | 'video.childAnimationsJson.layers.ind'
  | 'video.childAnimationsJson.layers.ip'
  | 'video.childAnimationsJson.layers.nm'
  | 'video.childAnimationsJson.layers.op'
  | 'video.childAnimationsJson.layers.shapes'
  | 'video.childAnimationsJson.layers.sr'
  | 'video.childAnimationsJson.layers.st'
  | 'video.childAnimationsJson.layers.ty'
  | 'video.childAnimationsJson.nm'
  | 'video.childAnimationsJson.op'
  | 'video.childAnimationsJson.parent.children'
  | 'video.childAnimationsJson.parent.id'
  | 'video.childAnimationsJson.tgs'
  | 'video.childAnimationsJson.v'
  | 'video.childAnimationsJson.w'
  | 'video.childDocsJson.children'
  | 'video.childDocsJson.children.children'
  | 'video.childDocsJson.children.id'
  | 'video.childDocsJson.id'
  | 'video.childDocsJson.internal.content'
  | 'video.childDocsJson.internal.contentDigest'
  | 'video.childDocsJson.internal.description'
  | 'video.childDocsJson.internal.fieldOwners'
  | 'video.childDocsJson.internal.ignoreType'
  | 'video.childDocsJson.internal.mediaType'
  | 'video.childDocsJson.internal.owner'
  | 'video.childDocsJson.internal.type'
  | 'video.childDocsJson.module.description'
  | 'video.childDocsJson.module.title'
  | 'video.childDocsJson.parent.children'
  | 'video.childDocsJson.parent.id'
  | 'video.childDocsJson.type'
  | 'video.childImageSharp.children'
  | 'video.childImageSharp.children.children'
  | 'video.childImageSharp.children.id'
  | 'video.childImageSharp.fixed.aspectRatio'
  | 'video.childImageSharp.fixed.base64'
  | 'video.childImageSharp.fixed.height'
  | 'video.childImageSharp.fixed.originalName'
  | 'video.childImageSharp.fixed.src'
  | 'video.childImageSharp.fixed.srcSet'
  | 'video.childImageSharp.fixed.srcSetWebp'
  | 'video.childImageSharp.fixed.srcWebp'
  | 'video.childImageSharp.fixed.tracedSVG'
  | 'video.childImageSharp.fixed.width'
  | 'video.childImageSharp.fluid.aspectRatio'
  | 'video.childImageSharp.fluid.base64'
  | 'video.childImageSharp.fluid.originalImg'
  | 'video.childImageSharp.fluid.originalName'
  | 'video.childImageSharp.fluid.presentationHeight'
  | 'video.childImageSharp.fluid.presentationWidth'
  | 'video.childImageSharp.fluid.sizes'
  | 'video.childImageSharp.fluid.src'
  | 'video.childImageSharp.fluid.srcSet'
  | 'video.childImageSharp.fluid.srcSetWebp'
  | 'video.childImageSharp.fluid.srcWebp'
  | 'video.childImageSharp.fluid.tracedSVG'
  | 'video.childImageSharp.gatsbyImageData'
  | 'video.childImageSharp.id'
  | 'video.childImageSharp.internal.content'
  | 'video.childImageSharp.internal.contentDigest'
  | 'video.childImageSharp.internal.description'
  | 'video.childImageSharp.internal.fieldOwners'
  | 'video.childImageSharp.internal.ignoreType'
  | 'video.childImageSharp.internal.mediaType'
  | 'video.childImageSharp.internal.owner'
  | 'video.childImageSharp.internal.type'
  | 'video.childImageSharp.original.height'
  | 'video.childImageSharp.original.src'
  | 'video.childImageSharp.original.width'
  | 'video.childImageSharp.parent.children'
  | 'video.childImageSharp.parent.id'
  | 'video.childImageSharp.resize.aspectRatio'
  | 'video.childImageSharp.resize.height'
  | 'video.childImageSharp.resize.originalName'
  | 'video.childImageSharp.resize.src'
  | 'video.childImageSharp.resize.tracedSVG'
  | 'video.childImageSharp.resize.width'
  | 'video.childImagesJson.assets'
  | 'video.childImagesJson.assets.id'
  | 'video.childImagesJson.assets.layers'
  | 'video.childImagesJson.children'
  | 'video.childImagesJson.children.children'
  | 'video.childImagesJson.children.id'
  | 'video.childImagesJson.ddd'
  | 'video.childImagesJson.fr'
  | 'video.childImagesJson.h'
  | 'video.childImagesJson.id'
  | 'video.childImagesJson.internal.content'
  | 'video.childImagesJson.internal.contentDigest'
  | 'video.childImagesJson.internal.description'
  | 'video.childImagesJson.internal.fieldOwners'
  | 'video.childImagesJson.internal.ignoreType'
  | 'video.childImagesJson.internal.mediaType'
  | 'video.childImagesJson.internal.owner'
  | 'video.childImagesJson.internal.type'
  | 'video.childImagesJson.ip'
  | 'video.childImagesJson.layers'
  | 'video.childImagesJson.layers.ao'
  | 'video.childImagesJson.layers.bm'
  | 'video.childImagesJson.layers.ddd'
  | 'video.childImagesJson.layers.h'
  | 'video.childImagesJson.layers.ind'
  | 'video.childImagesJson.layers.ip'
  | 'video.childImagesJson.layers.nm'
  | 'video.childImagesJson.layers.op'
  | 'video.childImagesJson.layers.parent'
  | 'video.childImagesJson.layers.refId'
  | 'video.childImagesJson.layers.shapes'
  | 'video.childImagesJson.layers.sr'
  | 'video.childImagesJson.layers.st'
  | 'video.childImagesJson.layers.ty'
  | 'video.childImagesJson.layers.w'
  | 'video.childImagesJson.nm'
  | 'video.childImagesJson.op'
  | 'video.childImagesJson.parent.children'
  | 'video.childImagesJson.parent.id'
  | 'video.childImagesJson.v'
  | 'video.childImagesJson.w'
  | 'video.childPageDoc.animation.absolutePath'
  | 'video.childPageDoc.animation.accessTime'
  | 'video.childPageDoc.animation.atime'
  | 'video.childPageDoc.animation.atimeMs'
  | 'video.childPageDoc.animation.base'
  | 'video.childPageDoc.animation.birthTime'
  | 'video.childPageDoc.animation.birthtime'
  | 'video.childPageDoc.animation.birthtimeMs'
  | 'video.childPageDoc.animation.blksize'
  | 'video.childPageDoc.animation.blocks'
  | 'video.childPageDoc.animation.changeTime'
  | 'video.childPageDoc.animation.children'
  | 'video.childPageDoc.animation.childrenAnimationsJson'
  | 'video.childPageDoc.animation.childrenDocsJson'
  | 'video.childPageDoc.animation.childrenImageSharp'
  | 'video.childPageDoc.animation.childrenImagesJson'
  | 'video.childPageDoc.animation.childrenPageDoc'
  | 'video.childPageDoc.animation.ctime'
  | 'video.childPageDoc.animation.ctimeMs'
  | 'video.childPageDoc.animation.dev'
  | 'video.childPageDoc.animation.dir'
  | 'video.childPageDoc.animation.ext'
  | 'video.childPageDoc.animation.extension'
  | 'video.childPageDoc.animation.gid'
  | 'video.childPageDoc.animation.id'
  | 'video.childPageDoc.animation.ino'
  | 'video.childPageDoc.animation.mode'
  | 'video.childPageDoc.animation.modifiedTime'
  | 'video.childPageDoc.animation.mtime'
  | 'video.childPageDoc.animation.mtimeMs'
  | 'video.childPageDoc.animation.name'
  | 'video.childPageDoc.animation.nlink'
  | 'video.childPageDoc.animation.prettySize'
  | 'video.childPageDoc.animation.publicURL'
  | 'video.childPageDoc.animation.rdev'
  | 'video.childPageDoc.animation.relativeDirectory'
  | 'video.childPageDoc.animation.relativePath'
  | 'video.childPageDoc.animation.root'
  | 'video.childPageDoc.animation.size'
  | 'video.childPageDoc.animation.sourceInstanceName'
  | 'video.childPageDoc.animation.uid'
  | 'video.childPageDoc.children'
  | 'video.childPageDoc.children.children'
  | 'video.childPageDoc.children.id'
  | 'video.childPageDoc.description'
  | 'video.childPageDoc.fileInformation.ext'
  | 'video.childPageDoc.fileInformation.extension'
  | 'video.childPageDoc.fileInformation.name'
  | 'video.childPageDoc.fileInformation.relativeDirectory'
  | 'video.childPageDoc.id'
  | 'video.childPageDoc.image.absolutePath'
  | 'video.childPageDoc.image.accessTime'
  | 'video.childPageDoc.image.atime'
  | 'video.childPageDoc.image.atimeMs'
  | 'video.childPageDoc.image.base'
  | 'video.childPageDoc.image.birthTime'
  | 'video.childPageDoc.image.birthtime'
  | 'video.childPageDoc.image.birthtimeMs'
  | 'video.childPageDoc.image.blksize'
  | 'video.childPageDoc.image.blocks'
  | 'video.childPageDoc.image.changeTime'
  | 'video.childPageDoc.image.children'
  | 'video.childPageDoc.image.childrenAnimationsJson'
  | 'video.childPageDoc.image.childrenDocsJson'
  | 'video.childPageDoc.image.childrenImageSharp'
  | 'video.childPageDoc.image.childrenImagesJson'
  | 'video.childPageDoc.image.childrenPageDoc'
  | 'video.childPageDoc.image.ctime'
  | 'video.childPageDoc.image.ctimeMs'
  | 'video.childPageDoc.image.dev'
  | 'video.childPageDoc.image.dir'
  | 'video.childPageDoc.image.ext'
  | 'video.childPageDoc.image.extension'
  | 'video.childPageDoc.image.gid'
  | 'video.childPageDoc.image.id'
  | 'video.childPageDoc.image.ino'
  | 'video.childPageDoc.image.mode'
  | 'video.childPageDoc.image.modifiedTime'
  | 'video.childPageDoc.image.mtime'
  | 'video.childPageDoc.image.mtimeMs'
  | 'video.childPageDoc.image.name'
  | 'video.childPageDoc.image.nlink'
  | 'video.childPageDoc.image.prettySize'
  | 'video.childPageDoc.image.publicURL'
  | 'video.childPageDoc.image.rdev'
  | 'video.childPageDoc.image.relativeDirectory'
  | 'video.childPageDoc.image.relativePath'
  | 'video.childPageDoc.image.root'
  | 'video.childPageDoc.image.size'
  | 'video.childPageDoc.image.sourceInstanceName'
  | 'video.childPageDoc.image.uid'
  | 'video.childPageDoc.internal.content'
  | 'video.childPageDoc.internal.contentDigest'
  | 'video.childPageDoc.internal.description'
  | 'video.childPageDoc.internal.fieldOwners'
  | 'video.childPageDoc.internal.ignoreType'
  | 'video.childPageDoc.internal.mediaType'
  | 'video.childPageDoc.internal.owner'
  | 'video.childPageDoc.internal.type'
  | 'video.childPageDoc.parent.children'
  | 'video.childPageDoc.parent.id'
  | 'video.childPageDoc.title'
  | 'video.childPageDoc.video.absolutePath'
  | 'video.childPageDoc.video.accessTime'
  | 'video.childPageDoc.video.atime'
  | 'video.childPageDoc.video.atimeMs'
  | 'video.childPageDoc.video.base'
  | 'video.childPageDoc.video.birthTime'
  | 'video.childPageDoc.video.birthtime'
  | 'video.childPageDoc.video.birthtimeMs'
  | 'video.childPageDoc.video.blksize'
  | 'video.childPageDoc.video.blocks'
  | 'video.childPageDoc.video.changeTime'
  | 'video.childPageDoc.video.children'
  | 'video.childPageDoc.video.childrenAnimationsJson'
  | 'video.childPageDoc.video.childrenDocsJson'
  | 'video.childPageDoc.video.childrenImageSharp'
  | 'video.childPageDoc.video.childrenImagesJson'
  | 'video.childPageDoc.video.childrenPageDoc'
  | 'video.childPageDoc.video.ctime'
  | 'video.childPageDoc.video.ctimeMs'
  | 'video.childPageDoc.video.dev'
  | 'video.childPageDoc.video.dir'
  | 'video.childPageDoc.video.ext'
  | 'video.childPageDoc.video.extension'
  | 'video.childPageDoc.video.gid'
  | 'video.childPageDoc.video.id'
  | 'video.childPageDoc.video.ino'
  | 'video.childPageDoc.video.mode'
  | 'video.childPageDoc.video.modifiedTime'
  | 'video.childPageDoc.video.mtime'
  | 'video.childPageDoc.video.mtimeMs'
  | 'video.childPageDoc.video.name'
  | 'video.childPageDoc.video.nlink'
  | 'video.childPageDoc.video.prettySize'
  | 'video.childPageDoc.video.publicURL'
  | 'video.childPageDoc.video.rdev'
  | 'video.childPageDoc.video.relativeDirectory'
  | 'video.childPageDoc.video.relativePath'
  | 'video.childPageDoc.video.root'
  | 'video.childPageDoc.video.size'
  | 'video.childPageDoc.video.sourceInstanceName'
  | 'video.childPageDoc.video.uid'
  | 'video.children'
  | 'video.childrenAnimationsJson'
  | 'video.childrenAnimationsJson.children'
  | 'video.childrenAnimationsJson.children.children'
  | 'video.childrenAnimationsJson.children.id'
  | 'video.childrenAnimationsJson.ddd'
  | 'video.childrenAnimationsJson.fr'
  | 'video.childrenAnimationsJson.h'
  | 'video.childrenAnimationsJson.id'
  | 'video.childrenAnimationsJson.internal.content'
  | 'video.childrenAnimationsJson.internal.contentDigest'
  | 'video.childrenAnimationsJson.internal.description'
  | 'video.childrenAnimationsJson.internal.fieldOwners'
  | 'video.childrenAnimationsJson.internal.ignoreType'
  | 'video.childrenAnimationsJson.internal.mediaType'
  | 'video.childrenAnimationsJson.internal.owner'
  | 'video.childrenAnimationsJson.internal.type'
  | 'video.childrenAnimationsJson.ip'
  | 'video.childrenAnimationsJson.layers'
  | 'video.childrenAnimationsJson.layers.ao'
  | 'video.childrenAnimationsJson.layers.bm'
  | 'video.childrenAnimationsJson.layers.ddd'
  | 'video.childrenAnimationsJson.layers.ind'
  | 'video.childrenAnimationsJson.layers.ip'
  | 'video.childrenAnimationsJson.layers.nm'
  | 'video.childrenAnimationsJson.layers.op'
  | 'video.childrenAnimationsJson.layers.shapes'
  | 'video.childrenAnimationsJson.layers.sr'
  | 'video.childrenAnimationsJson.layers.st'
  | 'video.childrenAnimationsJson.layers.ty'
  | 'video.childrenAnimationsJson.nm'
  | 'video.childrenAnimationsJson.op'
  | 'video.childrenAnimationsJson.parent.children'
  | 'video.childrenAnimationsJson.parent.id'
  | 'video.childrenAnimationsJson.tgs'
  | 'video.childrenAnimationsJson.v'
  | 'video.childrenAnimationsJson.w'
  | 'video.childrenDocsJson'
  | 'video.childrenDocsJson.children'
  | 'video.childrenDocsJson.children.children'
  | 'video.childrenDocsJson.children.id'
  | 'video.childrenDocsJson.id'
  | 'video.childrenDocsJson.internal.content'
  | 'video.childrenDocsJson.internal.contentDigest'
  | 'video.childrenDocsJson.internal.description'
  | 'video.childrenDocsJson.internal.fieldOwners'
  | 'video.childrenDocsJson.internal.ignoreType'
  | 'video.childrenDocsJson.internal.mediaType'
  | 'video.childrenDocsJson.internal.owner'
  | 'video.childrenDocsJson.internal.type'
  | 'video.childrenDocsJson.module.description'
  | 'video.childrenDocsJson.module.title'
  | 'video.childrenDocsJson.parent.children'
  | 'video.childrenDocsJson.parent.id'
  | 'video.childrenDocsJson.type'
  | 'video.childrenImageSharp'
  | 'video.childrenImageSharp.children'
  | 'video.childrenImageSharp.children.children'
  | 'video.childrenImageSharp.children.id'
  | 'video.childrenImageSharp.fixed.aspectRatio'
  | 'video.childrenImageSharp.fixed.base64'
  | 'video.childrenImageSharp.fixed.height'
  | 'video.childrenImageSharp.fixed.originalName'
  | 'video.childrenImageSharp.fixed.src'
  | 'video.childrenImageSharp.fixed.srcSet'
  | 'video.childrenImageSharp.fixed.srcSetWebp'
  | 'video.childrenImageSharp.fixed.srcWebp'
  | 'video.childrenImageSharp.fixed.tracedSVG'
  | 'video.childrenImageSharp.fixed.width'
  | 'video.childrenImageSharp.fluid.aspectRatio'
  | 'video.childrenImageSharp.fluid.base64'
  | 'video.childrenImageSharp.fluid.originalImg'
  | 'video.childrenImageSharp.fluid.originalName'
  | 'video.childrenImageSharp.fluid.presentationHeight'
  | 'video.childrenImageSharp.fluid.presentationWidth'
  | 'video.childrenImageSharp.fluid.sizes'
  | 'video.childrenImageSharp.fluid.src'
  | 'video.childrenImageSharp.fluid.srcSet'
  | 'video.childrenImageSharp.fluid.srcSetWebp'
  | 'video.childrenImageSharp.fluid.srcWebp'
  | 'video.childrenImageSharp.fluid.tracedSVG'
  | 'video.childrenImageSharp.gatsbyImageData'
  | 'video.childrenImageSharp.id'
  | 'video.childrenImageSharp.internal.content'
  | 'video.childrenImageSharp.internal.contentDigest'
  | 'video.childrenImageSharp.internal.description'
  | 'video.childrenImageSharp.internal.fieldOwners'
  | 'video.childrenImageSharp.internal.ignoreType'
  | 'video.childrenImageSharp.internal.mediaType'
  | 'video.childrenImageSharp.internal.owner'
  | 'video.childrenImageSharp.internal.type'
  | 'video.childrenImageSharp.original.height'
  | 'video.childrenImageSharp.original.src'
  | 'video.childrenImageSharp.original.width'
  | 'video.childrenImageSharp.parent.children'
  | 'video.childrenImageSharp.parent.id'
  | 'video.childrenImageSharp.resize.aspectRatio'
  | 'video.childrenImageSharp.resize.height'
  | 'video.childrenImageSharp.resize.originalName'
  | 'video.childrenImageSharp.resize.src'
  | 'video.childrenImageSharp.resize.tracedSVG'
  | 'video.childrenImageSharp.resize.width'
  | 'video.childrenImagesJson'
  | 'video.childrenImagesJson.assets'
  | 'video.childrenImagesJson.assets.id'
  | 'video.childrenImagesJson.assets.layers'
  | 'video.childrenImagesJson.children'
  | 'video.childrenImagesJson.children.children'
  | 'video.childrenImagesJson.children.id'
  | 'video.childrenImagesJson.ddd'
  | 'video.childrenImagesJson.fr'
  | 'video.childrenImagesJson.h'
  | 'video.childrenImagesJson.id'
  | 'video.childrenImagesJson.internal.content'
  | 'video.childrenImagesJson.internal.contentDigest'
  | 'video.childrenImagesJson.internal.description'
  | 'video.childrenImagesJson.internal.fieldOwners'
  | 'video.childrenImagesJson.internal.ignoreType'
  | 'video.childrenImagesJson.internal.mediaType'
  | 'video.childrenImagesJson.internal.owner'
  | 'video.childrenImagesJson.internal.type'
  | 'video.childrenImagesJson.ip'
  | 'video.childrenImagesJson.layers'
  | 'video.childrenImagesJson.layers.ao'
  | 'video.childrenImagesJson.layers.bm'
  | 'video.childrenImagesJson.layers.ddd'
  | 'video.childrenImagesJson.layers.h'
  | 'video.childrenImagesJson.layers.ind'
  | 'video.childrenImagesJson.layers.ip'
  | 'video.childrenImagesJson.layers.nm'
  | 'video.childrenImagesJson.layers.op'
  | 'video.childrenImagesJson.layers.parent'
  | 'video.childrenImagesJson.layers.refId'
  | 'video.childrenImagesJson.layers.shapes'
  | 'video.childrenImagesJson.layers.sr'
  | 'video.childrenImagesJson.layers.st'
  | 'video.childrenImagesJson.layers.ty'
  | 'video.childrenImagesJson.layers.w'
  | 'video.childrenImagesJson.nm'
  | 'video.childrenImagesJson.op'
  | 'video.childrenImagesJson.parent.children'
  | 'video.childrenImagesJson.parent.id'
  | 'video.childrenImagesJson.v'
  | 'video.childrenImagesJson.w'
  | 'video.childrenPageDoc'
  | 'video.childrenPageDoc.animation.absolutePath'
  | 'video.childrenPageDoc.animation.accessTime'
  | 'video.childrenPageDoc.animation.atime'
  | 'video.childrenPageDoc.animation.atimeMs'
  | 'video.childrenPageDoc.animation.base'
  | 'video.childrenPageDoc.animation.birthTime'
  | 'video.childrenPageDoc.animation.birthtime'
  | 'video.childrenPageDoc.animation.birthtimeMs'
  | 'video.childrenPageDoc.animation.blksize'
  | 'video.childrenPageDoc.animation.blocks'
  | 'video.childrenPageDoc.animation.changeTime'
  | 'video.childrenPageDoc.animation.children'
  | 'video.childrenPageDoc.animation.childrenAnimationsJson'
  | 'video.childrenPageDoc.animation.childrenDocsJson'
  | 'video.childrenPageDoc.animation.childrenImageSharp'
  | 'video.childrenPageDoc.animation.childrenImagesJson'
  | 'video.childrenPageDoc.animation.childrenPageDoc'
  | 'video.childrenPageDoc.animation.ctime'
  | 'video.childrenPageDoc.animation.ctimeMs'
  | 'video.childrenPageDoc.animation.dev'
  | 'video.childrenPageDoc.animation.dir'
  | 'video.childrenPageDoc.animation.ext'
  | 'video.childrenPageDoc.animation.extension'
  | 'video.childrenPageDoc.animation.gid'
  | 'video.childrenPageDoc.animation.id'
  | 'video.childrenPageDoc.animation.ino'
  | 'video.childrenPageDoc.animation.mode'
  | 'video.childrenPageDoc.animation.modifiedTime'
  | 'video.childrenPageDoc.animation.mtime'
  | 'video.childrenPageDoc.animation.mtimeMs'
  | 'video.childrenPageDoc.animation.name'
  | 'video.childrenPageDoc.animation.nlink'
  | 'video.childrenPageDoc.animation.prettySize'
  | 'video.childrenPageDoc.animation.publicURL'
  | 'video.childrenPageDoc.animation.rdev'
  | 'video.childrenPageDoc.animation.relativeDirectory'
  | 'video.childrenPageDoc.animation.relativePath'
  | 'video.childrenPageDoc.animation.root'
  | 'video.childrenPageDoc.animation.size'
  | 'video.childrenPageDoc.animation.sourceInstanceName'
  | 'video.childrenPageDoc.animation.uid'
  | 'video.childrenPageDoc.children'
  | 'video.childrenPageDoc.children.children'
  | 'video.childrenPageDoc.children.id'
  | 'video.childrenPageDoc.description'
  | 'video.childrenPageDoc.fileInformation.ext'
  | 'video.childrenPageDoc.fileInformation.extension'
  | 'video.childrenPageDoc.fileInformation.name'
  | 'video.childrenPageDoc.fileInformation.relativeDirectory'
  | 'video.childrenPageDoc.id'
  | 'video.childrenPageDoc.image.absolutePath'
  | 'video.childrenPageDoc.image.accessTime'
  | 'video.childrenPageDoc.image.atime'
  | 'video.childrenPageDoc.image.atimeMs'
  | 'video.childrenPageDoc.image.base'
  | 'video.childrenPageDoc.image.birthTime'
  | 'video.childrenPageDoc.image.birthtime'
  | 'video.childrenPageDoc.image.birthtimeMs'
  | 'video.childrenPageDoc.image.blksize'
  | 'video.childrenPageDoc.image.blocks'
  | 'video.childrenPageDoc.image.changeTime'
  | 'video.childrenPageDoc.image.children'
  | 'video.childrenPageDoc.image.childrenAnimationsJson'
  | 'video.childrenPageDoc.image.childrenDocsJson'
  | 'video.childrenPageDoc.image.childrenImageSharp'
  | 'video.childrenPageDoc.image.childrenImagesJson'
  | 'video.childrenPageDoc.image.childrenPageDoc'
  | 'video.childrenPageDoc.image.ctime'
  | 'video.childrenPageDoc.image.ctimeMs'
  | 'video.childrenPageDoc.image.dev'
  | 'video.childrenPageDoc.image.dir'
  | 'video.childrenPageDoc.image.ext'
  | 'video.childrenPageDoc.image.extension'
  | 'video.childrenPageDoc.image.gid'
  | 'video.childrenPageDoc.image.id'
  | 'video.childrenPageDoc.image.ino'
  | 'video.childrenPageDoc.image.mode'
  | 'video.childrenPageDoc.image.modifiedTime'
  | 'video.childrenPageDoc.image.mtime'
  | 'video.childrenPageDoc.image.mtimeMs'
  | 'video.childrenPageDoc.image.name'
  | 'video.childrenPageDoc.image.nlink'
  | 'video.childrenPageDoc.image.prettySize'
  | 'video.childrenPageDoc.image.publicURL'
  | 'video.childrenPageDoc.image.rdev'
  | 'video.childrenPageDoc.image.relativeDirectory'
  | 'video.childrenPageDoc.image.relativePath'
  | 'video.childrenPageDoc.image.root'
  | 'video.childrenPageDoc.image.size'
  | 'video.childrenPageDoc.image.sourceInstanceName'
  | 'video.childrenPageDoc.image.uid'
  | 'video.childrenPageDoc.internal.content'
  | 'video.childrenPageDoc.internal.contentDigest'
  | 'video.childrenPageDoc.internal.description'
  | 'video.childrenPageDoc.internal.fieldOwners'
  | 'video.childrenPageDoc.internal.ignoreType'
  | 'video.childrenPageDoc.internal.mediaType'
  | 'video.childrenPageDoc.internal.owner'
  | 'video.childrenPageDoc.internal.type'
  | 'video.childrenPageDoc.parent.children'
  | 'video.childrenPageDoc.parent.id'
  | 'video.childrenPageDoc.title'
  | 'video.childrenPageDoc.video.absolutePath'
  | 'video.childrenPageDoc.video.accessTime'
  | 'video.childrenPageDoc.video.atime'
  | 'video.childrenPageDoc.video.atimeMs'
  | 'video.childrenPageDoc.video.base'
  | 'video.childrenPageDoc.video.birthTime'
  | 'video.childrenPageDoc.video.birthtime'
  | 'video.childrenPageDoc.video.birthtimeMs'
  | 'video.childrenPageDoc.video.blksize'
  | 'video.childrenPageDoc.video.blocks'
  | 'video.childrenPageDoc.video.changeTime'
  | 'video.childrenPageDoc.video.children'
  | 'video.childrenPageDoc.video.childrenAnimationsJson'
  | 'video.childrenPageDoc.video.childrenDocsJson'
  | 'video.childrenPageDoc.video.childrenImageSharp'
  | 'video.childrenPageDoc.video.childrenImagesJson'
  | 'video.childrenPageDoc.video.childrenPageDoc'
  | 'video.childrenPageDoc.video.ctime'
  | 'video.childrenPageDoc.video.ctimeMs'
  | 'video.childrenPageDoc.video.dev'
  | 'video.childrenPageDoc.video.dir'
  | 'video.childrenPageDoc.video.ext'
  | 'video.childrenPageDoc.video.extension'
  | 'video.childrenPageDoc.video.gid'
  | 'video.childrenPageDoc.video.id'
  | 'video.childrenPageDoc.video.ino'
  | 'video.childrenPageDoc.video.mode'
  | 'video.childrenPageDoc.video.modifiedTime'
  | 'video.childrenPageDoc.video.mtime'
  | 'video.childrenPageDoc.video.mtimeMs'
  | 'video.childrenPageDoc.video.name'
  | 'video.childrenPageDoc.video.nlink'
  | 'video.childrenPageDoc.video.prettySize'
  | 'video.childrenPageDoc.video.publicURL'
  | 'video.childrenPageDoc.video.rdev'
  | 'video.childrenPageDoc.video.relativeDirectory'
  | 'video.childrenPageDoc.video.relativePath'
  | 'video.childrenPageDoc.video.root'
  | 'video.childrenPageDoc.video.size'
  | 'video.childrenPageDoc.video.sourceInstanceName'
  | 'video.childrenPageDoc.video.uid'
  | 'video.children.children'
  | 'video.children.children.children'
  | 'video.children.children.id'
  | 'video.children.id'
  | 'video.children.internal.content'
  | 'video.children.internal.contentDigest'
  | 'video.children.internal.description'
  | 'video.children.internal.fieldOwners'
  | 'video.children.internal.ignoreType'
  | 'video.children.internal.mediaType'
  | 'video.children.internal.owner'
  | 'video.children.internal.type'
  | 'video.children.parent.children'
  | 'video.children.parent.id'
  | 'video.ctime'
  | 'video.ctimeMs'
  | 'video.dev'
  | 'video.dir'
  | 'video.ext'
  | 'video.extension'
  | 'video.gid'
  | 'video.id'
  | 'video.ino'
  | 'video.internal.content'
  | 'video.internal.contentDigest'
  | 'video.internal.description'
  | 'video.internal.fieldOwners'
  | 'video.internal.ignoreType'
  | 'video.internal.mediaType'
  | 'video.internal.owner'
  | 'video.internal.type'
  | 'video.mode'
  | 'video.modifiedTime'
  | 'video.mtime'
  | 'video.mtimeMs'
  | 'video.name'
  | 'video.nlink'
  | 'video.parent.children'
  | 'video.parent.children.children'
  | 'video.parent.children.id'
  | 'video.parent.id'
  | 'video.parent.internal.content'
  | 'video.parent.internal.contentDigest'
  | 'video.parent.internal.description'
  | 'video.parent.internal.fieldOwners'
  | 'video.parent.internal.ignoreType'
  | 'video.parent.internal.mediaType'
  | 'video.parent.internal.owner'
  | 'video.parent.internal.type'
  | 'video.parent.parent.children'
  | 'video.parent.parent.id'
  | 'video.prettySize'
  | 'video.publicURL'
  | 'video.rdev'
  | 'video.relativeDirectory'
  | 'video.relativePath'
  | 'video.root'
  | 'video.size'
  | 'video.sourceInstanceName'
  | 'video.uid';

type PageDocFileInformation = {
  readonly ext: Maybe<Scalars['String']>;
  readonly extension: Maybe<Scalars['String']>;
  readonly name: Maybe<Scalars['String']>;
  readonly relativeDirectory: Maybe<Scalars['String']>;
};

type PageDocFileInformationFilterInput = {
  readonly ext: InputMaybe<StringQueryOperatorInput>;
  readonly extension: InputMaybe<StringQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly relativeDirectory: InputMaybe<StringQueryOperatorInput>;
};

type PageDocFilterInput = {
  readonly animation: InputMaybe<FileFilterInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly fileInformation: InputMaybe<PageDocFileInformationFilterInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly image: InputMaybe<FileFilterInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly video: InputMaybe<FileFilterInput>;
};

type PageDocFilterListInput = {
  readonly elemMatch: InputMaybe<PageDocFilterInput>;
};

type PageDocGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<PageDocEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<PageDocGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<PageDoc>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type PageDocGroupConnection_distinctArgs = {
  field: PageDocFieldsEnum;
};


type PageDocGroupConnection_groupArgs = {
  field: PageDocFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type PageDocGroupConnection_maxArgs = {
  field: PageDocFieldsEnum;
};


type PageDocGroupConnection_minArgs = {
  field: PageDocFieldsEnum;
};


type PageDocGroupConnection_sumArgs = {
  field: PageDocFieldsEnum;
};

type PageDocSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<PageDocFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type PageInfo = {
  readonly currentPage: Scalars['Int'];
  readonly hasNextPage: Scalars['Boolean'];
  readonly hasPreviousPage: Scalars['Boolean'];
  readonly itemCount: Scalars['Int'];
  readonly pageCount: Scalars['Int'];
  readonly perPage: Maybe<Scalars['Int']>;
  readonly totalCount: Scalars['Int'];
};

type Potrace = {
  readonly alphaMax: InputMaybe<Scalars['Float']>;
  readonly background: InputMaybe<Scalars['String']>;
  readonly blackOnWhite: InputMaybe<Scalars['Boolean']>;
  readonly color: InputMaybe<Scalars['String']>;
  readonly optCurve: InputMaybe<Scalars['Boolean']>;
  readonly optTolerance: InputMaybe<Scalars['Float']>;
  readonly threshold: InputMaybe<Scalars['Int']>;
  readonly turdSize: InputMaybe<Scalars['Float']>;
  readonly turnPolicy: InputMaybe<PotraceTurnPolicy>;
};

type PotraceTurnPolicy =
  | 'black'
  | 'left'
  | 'majority'
  | 'minority'
  | 'right'
  | 'white';

type Query = {
  readonly allAnimationsJson: AnimationsJsonConnection;
  readonly allDirectory: DirectoryConnection;
  readonly allDocsJson: DocsJsonConnection;
  readonly allExtractedLottie: ExtractedLottieConnection;
  readonly allExtractedSvg: ExtractedSvgConnection;
  readonly allFile: FileConnection;
  readonly allImageSharp: ImageSharpConnection;
  readonly allImagesJson: ImagesJsonConnection;
  readonly allPageDoc: PageDocConnection;
  readonly allSite: SiteConnection;
  readonly allSiteBuildMetadata: SiteBuildMetadataConnection;
  readonly allSiteFunction: SiteFunctionConnection;
  readonly allSitePage: SitePageConnection;
  readonly allSitePlugin: SitePluginConnection;
  readonly animationsJson: Maybe<AnimationsJson>;
  readonly directory: Maybe<Directory>;
  readonly docsJson: Maybe<DocsJson>;
  readonly extractedLottie: Maybe<ExtractedLottie>;
  readonly extractedSvg: Maybe<ExtractedSvg>;
  readonly file: Maybe<File>;
  readonly imageSharp: Maybe<ImageSharp>;
  readonly imagesJson: Maybe<ImagesJson>;
  readonly pageDoc: Maybe<PageDoc>;
  readonly site: Maybe<Site>;
  readonly siteBuildMetadata: Maybe<SiteBuildMetadata>;
  readonly siteFunction: Maybe<SiteFunction>;
  readonly sitePage: Maybe<SitePage>;
  readonly sitePlugin: Maybe<SitePlugin>;
};


type Query_allAnimationsJsonArgs = {
  filter: InputMaybe<AnimationsJsonFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<AnimationsJsonSortInput>;
};


type Query_allDirectoryArgs = {
  filter: InputMaybe<DirectoryFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<DirectorySortInput>;
};


type Query_allDocsJsonArgs = {
  filter: InputMaybe<DocsJsonFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<DocsJsonSortInput>;
};


type Query_allExtractedLottieArgs = {
  filter: InputMaybe<ExtractedLottieFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ExtractedLottieSortInput>;
};


type Query_allExtractedSvgArgs = {
  filter: InputMaybe<ExtractedSvgFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ExtractedSvgSortInput>;
};


type Query_allFileArgs = {
  filter: InputMaybe<FileFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<FileSortInput>;
};


type Query_allImageSharpArgs = {
  filter: InputMaybe<ImageSharpFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ImageSharpSortInput>;
};


type Query_allImagesJsonArgs = {
  filter: InputMaybe<ImagesJsonFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ImagesJsonSortInput>;
};


type Query_allPageDocArgs = {
  filter: InputMaybe<PageDocFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<PageDocSortInput>;
};


type Query_allSiteArgs = {
  filter: InputMaybe<SiteFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SiteSortInput>;
};


type Query_allSiteBuildMetadataArgs = {
  filter: InputMaybe<SiteBuildMetadataFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SiteBuildMetadataSortInput>;
};


type Query_allSiteFunctionArgs = {
  filter: InputMaybe<SiteFunctionFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SiteFunctionSortInput>;
};


type Query_allSitePageArgs = {
  filter: InputMaybe<SitePageFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SitePageSortInput>;
};


type Query_allSitePluginArgs = {
  filter: InputMaybe<SitePluginFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SitePluginSortInput>;
};


type Query_animationsJsonArgs = {
  children: InputMaybe<NodeFilterListInput>;
  ddd: InputMaybe<IntQueryOperatorInput>;
  fr: InputMaybe<IntQueryOperatorInput>;
  h: InputMaybe<IntQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  ip: InputMaybe<IntQueryOperatorInput>;
  layers: InputMaybe<AnimationsJsonLayersFilterListInput>;
  nm: InputMaybe<StringQueryOperatorInput>;
  op: InputMaybe<IntQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  tgs: InputMaybe<IntQueryOperatorInput>;
  v: InputMaybe<StringQueryOperatorInput>;
  w: InputMaybe<IntQueryOperatorInput>;
};


type Query_directoryArgs = {
  absolutePath: InputMaybe<StringQueryOperatorInput>;
  accessTime: InputMaybe<DateQueryOperatorInput>;
  atime: InputMaybe<DateQueryOperatorInput>;
  atimeMs: InputMaybe<FloatQueryOperatorInput>;
  base: InputMaybe<StringQueryOperatorInput>;
  birthTime: InputMaybe<DateQueryOperatorInput>;
  birthtime: InputMaybe<DateQueryOperatorInput>;
  birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  changeTime: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  ctime: InputMaybe<DateQueryOperatorInput>;
  ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  dev: InputMaybe<IntQueryOperatorInput>;
  dir: InputMaybe<StringQueryOperatorInput>;
  ext: InputMaybe<StringQueryOperatorInput>;
  extension: InputMaybe<StringQueryOperatorInput>;
  gid: InputMaybe<IntQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  ino: InputMaybe<FloatQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  mode: InputMaybe<IntQueryOperatorInput>;
  modifiedTime: InputMaybe<DateQueryOperatorInput>;
  mtime: InputMaybe<DateQueryOperatorInput>;
  mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  nlink: InputMaybe<IntQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  prettySize: InputMaybe<StringQueryOperatorInput>;
  rdev: InputMaybe<IntQueryOperatorInput>;
  relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  relativePath: InputMaybe<StringQueryOperatorInput>;
  root: InputMaybe<StringQueryOperatorInput>;
  size: InputMaybe<IntQueryOperatorInput>;
  sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  uid: InputMaybe<IntQueryOperatorInput>;
};


type Query_docsJsonArgs = {
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  module: InputMaybe<DocsJsonModuleFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  type: InputMaybe<StringQueryOperatorInput>;
};


type Query_extractedLottieArgs = {
  animationJson: InputMaybe<StringQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  content: InputMaybe<StringQueryOperatorInput>;
  encoded: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
};


type Query_extractedSvgArgs = {
  children: InputMaybe<NodeFilterListInput>;
  content: InputMaybe<StringQueryOperatorInput>;
  encoded: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  path: InputMaybe<StringQueryOperatorInput>;
};


type Query_fileArgs = {
  absolutePath: InputMaybe<StringQueryOperatorInput>;
  accessTime: InputMaybe<DateQueryOperatorInput>;
  atime: InputMaybe<DateQueryOperatorInput>;
  atimeMs: InputMaybe<FloatQueryOperatorInput>;
  base: InputMaybe<StringQueryOperatorInput>;
  birthTime: InputMaybe<DateQueryOperatorInput>;
  birthtime: InputMaybe<DateQueryOperatorInput>;
  birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  blksize: InputMaybe<IntQueryOperatorInput>;
  blocks: InputMaybe<IntQueryOperatorInput>;
  changeTime: InputMaybe<DateQueryOperatorInput>;
  childAnimationsJson: InputMaybe<AnimationsJsonFilterInput>;
  childDocsJson: InputMaybe<DocsJsonFilterInput>;
  childImageSharp: InputMaybe<ImageSharpFilterInput>;
  childImagesJson: InputMaybe<ImagesJsonFilterInput>;
  childPageDoc: InputMaybe<PageDocFilterInput>;
  children: InputMaybe<NodeFilterListInput>;
  childrenAnimationsJson: InputMaybe<AnimationsJsonFilterListInput>;
  childrenDocsJson: InputMaybe<DocsJsonFilterListInput>;
  childrenImageSharp: InputMaybe<ImageSharpFilterListInput>;
  childrenImagesJson: InputMaybe<ImagesJsonFilterListInput>;
  childrenPageDoc: InputMaybe<PageDocFilterListInput>;
  ctime: InputMaybe<DateQueryOperatorInput>;
  ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  dev: InputMaybe<IntQueryOperatorInput>;
  dir: InputMaybe<StringQueryOperatorInput>;
  ext: InputMaybe<StringQueryOperatorInput>;
  extension: InputMaybe<StringQueryOperatorInput>;
  gid: InputMaybe<IntQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  ino: InputMaybe<FloatQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  mode: InputMaybe<IntQueryOperatorInput>;
  modifiedTime: InputMaybe<DateQueryOperatorInput>;
  mtime: InputMaybe<DateQueryOperatorInput>;
  mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  nlink: InputMaybe<IntQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  prettySize: InputMaybe<StringQueryOperatorInput>;
  publicURL: InputMaybe<StringQueryOperatorInput>;
  rdev: InputMaybe<IntQueryOperatorInput>;
  relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  relativePath: InputMaybe<StringQueryOperatorInput>;
  root: InputMaybe<StringQueryOperatorInput>;
  size: InputMaybe<IntQueryOperatorInput>;
  sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  uid: InputMaybe<IntQueryOperatorInput>;
};


type Query_imageSharpArgs = {
  children: InputMaybe<NodeFilterListInput>;
  fixed: InputMaybe<ImageSharpFixedFilterInput>;
  fluid: InputMaybe<ImageSharpFluidFilterInput>;
  gatsbyImageData: InputMaybe<GatsbyImageDataQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  original: InputMaybe<ImageSharpOriginalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  resize: InputMaybe<ImageSharpResizeFilterInput>;
};


type Query_imagesJsonArgs = {
  assets: InputMaybe<ImagesJsonAssetsFilterListInput>;
  children: InputMaybe<NodeFilterListInput>;
  ddd: InputMaybe<IntQueryOperatorInput>;
  fr: InputMaybe<IntQueryOperatorInput>;
  h: InputMaybe<IntQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  ip: InputMaybe<IntQueryOperatorInput>;
  layers: InputMaybe<ImagesJsonLayersFilterListInput>;
  nm: InputMaybe<StringQueryOperatorInput>;
  op: InputMaybe<IntQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  v: InputMaybe<StringQueryOperatorInput>;
  w: InputMaybe<IntQueryOperatorInput>;
};


type Query_pageDocArgs = {
  animation: InputMaybe<FileFilterInput>;
  children: InputMaybe<NodeFilterListInput>;
  description: InputMaybe<StringQueryOperatorInput>;
  fileInformation: InputMaybe<PageDocFileInformationFilterInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  image: InputMaybe<FileFilterInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  title: InputMaybe<StringQueryOperatorInput>;
  video: InputMaybe<FileFilterInput>;
};


type Query_siteArgs = {
  buildTime: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  graphqlTypegen: InputMaybe<BooleanQueryOperatorInput>;
  host: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  jsxRuntime: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  pathPrefix: InputMaybe<StringQueryOperatorInput>;
  polyfill: InputMaybe<BooleanQueryOperatorInput>;
  port: InputMaybe<IntQueryOperatorInput>;
  siteMetadata: InputMaybe<SiteSiteMetadataFilterInput>;
  trailingSlash: InputMaybe<StringQueryOperatorInput>;
};


type Query_siteBuildMetadataArgs = {
  buildTime: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
};


type Query_siteFunctionArgs = {
  absoluteCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  functionRoute: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  matchPath: InputMaybe<StringQueryOperatorInput>;
  originalAbsoluteFilePath: InputMaybe<StringQueryOperatorInput>;
  originalRelativeFilePath: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  pluginName: InputMaybe<StringQueryOperatorInput>;
  relativeCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
};


type Query_sitePageArgs = {
  children: InputMaybe<NodeFilterListInput>;
  component: InputMaybe<StringQueryOperatorInput>;
  componentChunkName: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  internalComponentName: InputMaybe<StringQueryOperatorInput>;
  matchPath: InputMaybe<StringQueryOperatorInput>;
  pageContext: InputMaybe<JSONQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  path: InputMaybe<StringQueryOperatorInput>;
  pluginCreator: InputMaybe<SitePluginFilterInput>;
};


type Query_sitePluginArgs = {
  browserAPIs: InputMaybe<StringQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  nodeAPIs: InputMaybe<StringQueryOperatorInput>;
  packageJson: InputMaybe<JSONQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  pluginFilepath: InputMaybe<StringQueryOperatorInput>;
  pluginOptions: InputMaybe<JSONQueryOperatorInput>;
  resolve: InputMaybe<StringQueryOperatorInput>;
  ssrAPIs: InputMaybe<StringQueryOperatorInput>;
  version: InputMaybe<StringQueryOperatorInput>;
};

type Site = Node & {
  readonly buildTime: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly graphqlTypegen: Maybe<Scalars['Boolean']>;
  readonly host: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly jsxRuntime: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly pathPrefix: Maybe<Scalars['String']>;
  readonly polyfill: Maybe<Scalars['Boolean']>;
  readonly port: Maybe<Scalars['Int']>;
  readonly siteMetadata: Maybe<SiteSiteMetadata>;
  readonly trailingSlash: Maybe<Scalars['String']>;
};


type Site_buildTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type SiteBuildMetadata = Node & {
  readonly buildTime: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
};


type SiteBuildMetadata_buildTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type SiteBuildMetadataConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteBuildMetadataEdge>;
  readonly group: ReadonlyArray<SiteBuildMetadataGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteBuildMetadata>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteBuildMetadataConnection_distinctArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataConnection_groupArgs = {
  field: SiteBuildMetadataFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteBuildMetadataConnection_maxArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataConnection_minArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataConnection_sumArgs = {
  field: SiteBuildMetadataFieldsEnum;
};

type SiteBuildMetadataEdge = {
  readonly next: Maybe<SiteBuildMetadata>;
  readonly node: SiteBuildMetadata;
  readonly previous: Maybe<SiteBuildMetadata>;
};

type SiteBuildMetadataFieldsEnum =
  | 'buildTime'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id';

type SiteBuildMetadataFilterInput = {
  readonly buildTime: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type SiteBuildMetadataGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteBuildMetadataEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SiteBuildMetadataGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteBuildMetadata>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteBuildMetadataGroupConnection_distinctArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataGroupConnection_groupArgs = {
  field: SiteBuildMetadataFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteBuildMetadataGroupConnection_maxArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataGroupConnection_minArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataGroupConnection_sumArgs = {
  field: SiteBuildMetadataFieldsEnum;
};

type SiteBuildMetadataSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SiteBuildMetadataFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SiteConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteEdge>;
  readonly group: ReadonlyArray<SiteGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Site>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteConnection_distinctArgs = {
  field: SiteFieldsEnum;
};


type SiteConnection_groupArgs = {
  field: SiteFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteConnection_maxArgs = {
  field: SiteFieldsEnum;
};


type SiteConnection_minArgs = {
  field: SiteFieldsEnum;
};


type SiteConnection_sumArgs = {
  field: SiteFieldsEnum;
};

type SiteEdge = {
  readonly next: Maybe<Site>;
  readonly node: Site;
  readonly previous: Maybe<Site>;
};

type SiteFieldsEnum =
  | 'buildTime'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'graphqlTypegen'
  | 'host'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'jsxRuntime'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'pathPrefix'
  | 'polyfill'
  | 'port'
  | 'siteMetadata.cookieName'
  | 'siteMetadata.description'
  | 'siteMetadata.logo'
  | 'siteMetadata.siteName'
  | 'siteMetadata.siteUrl'
  | 'siteMetadata.title'
  | 'trailingSlash';

type SiteFilterInput = {
  readonly buildTime: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly graphqlTypegen: InputMaybe<BooleanQueryOperatorInput>;
  readonly host: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly jsxRuntime: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly pathPrefix: InputMaybe<StringQueryOperatorInput>;
  readonly polyfill: InputMaybe<BooleanQueryOperatorInput>;
  readonly port: InputMaybe<IntQueryOperatorInput>;
  readonly siteMetadata: InputMaybe<SiteSiteMetadataFilterInput>;
  readonly trailingSlash: InputMaybe<StringQueryOperatorInput>;
};

type SiteFunction = Node & {
  readonly absoluteCompiledFilePath: Scalars['String'];
  readonly children: ReadonlyArray<Node>;
  readonly functionRoute: Scalars['String'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly matchPath: Maybe<Scalars['String']>;
  readonly originalAbsoluteFilePath: Scalars['String'];
  readonly originalRelativeFilePath: Scalars['String'];
  readonly parent: Maybe<Node>;
  readonly pluginName: Scalars['String'];
  readonly relativeCompiledFilePath: Scalars['String'];
};

type SiteFunctionConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteFunctionEdge>;
  readonly group: ReadonlyArray<SiteFunctionGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteFunction>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteFunctionConnection_distinctArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionConnection_groupArgs = {
  field: SiteFunctionFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteFunctionConnection_maxArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionConnection_minArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionConnection_sumArgs = {
  field: SiteFunctionFieldsEnum;
};

type SiteFunctionEdge = {
  readonly next: Maybe<SiteFunction>;
  readonly node: SiteFunction;
  readonly previous: Maybe<SiteFunction>;
};

type SiteFunctionFieldsEnum =
  | 'absoluteCompiledFilePath'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'functionRoute'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'matchPath'
  | 'originalAbsoluteFilePath'
  | 'originalRelativeFilePath'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'pluginName'
  | 'relativeCompiledFilePath';

type SiteFunctionFilterInput = {
  readonly absoluteCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly functionRoute: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly matchPath: InputMaybe<StringQueryOperatorInput>;
  readonly originalAbsoluteFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly originalRelativeFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly pluginName: InputMaybe<StringQueryOperatorInput>;
  readonly relativeCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
};

type SiteFunctionGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteFunctionEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SiteFunctionGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteFunction>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteFunctionGroupConnection_distinctArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionGroupConnection_groupArgs = {
  field: SiteFunctionFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteFunctionGroupConnection_maxArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionGroupConnection_minArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionGroupConnection_sumArgs = {
  field: SiteFunctionFieldsEnum;
};

type SiteFunctionSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SiteFunctionFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SiteGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SiteGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Site>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteGroupConnection_distinctArgs = {
  field: SiteFieldsEnum;
};


type SiteGroupConnection_groupArgs = {
  field: SiteFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteGroupConnection_maxArgs = {
  field: SiteFieldsEnum;
};


type SiteGroupConnection_minArgs = {
  field: SiteFieldsEnum;
};


type SiteGroupConnection_sumArgs = {
  field: SiteFieldsEnum;
};

type SitePage = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly component: Scalars['String'];
  readonly componentChunkName: Scalars['String'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly internalComponentName: Scalars['String'];
  readonly matchPath: Maybe<Scalars['String']>;
  readonly pageContext: Maybe<Scalars['JSON']>;
  readonly parent: Maybe<Node>;
  readonly path: Scalars['String'];
  readonly pluginCreator: Maybe<SitePlugin>;
};

type SitePageConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePageEdge>;
  readonly group: ReadonlyArray<SitePageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePageConnection_distinctArgs = {
  field: SitePageFieldsEnum;
};


type SitePageConnection_groupArgs = {
  field: SitePageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePageConnection_maxArgs = {
  field: SitePageFieldsEnum;
};


type SitePageConnection_minArgs = {
  field: SitePageFieldsEnum;
};


type SitePageConnection_sumArgs = {
  field: SitePageFieldsEnum;
};

type SitePageEdge = {
  readonly next: Maybe<SitePage>;
  readonly node: SitePage;
  readonly previous: Maybe<SitePage>;
};

type SitePageFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'component'
  | 'componentChunkName'
  | 'id'
  | 'internalComponentName'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'matchPath'
  | 'pageContext'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'path'
  | 'pluginCreator.browserAPIs'
  | 'pluginCreator.children'
  | 'pluginCreator.children.children'
  | 'pluginCreator.children.children.children'
  | 'pluginCreator.children.children.id'
  | 'pluginCreator.children.id'
  | 'pluginCreator.children.internal.content'
  | 'pluginCreator.children.internal.contentDigest'
  | 'pluginCreator.children.internal.description'
  | 'pluginCreator.children.internal.fieldOwners'
  | 'pluginCreator.children.internal.ignoreType'
  | 'pluginCreator.children.internal.mediaType'
  | 'pluginCreator.children.internal.owner'
  | 'pluginCreator.children.internal.type'
  | 'pluginCreator.children.parent.children'
  | 'pluginCreator.children.parent.id'
  | 'pluginCreator.id'
  | 'pluginCreator.internal.content'
  | 'pluginCreator.internal.contentDigest'
  | 'pluginCreator.internal.description'
  | 'pluginCreator.internal.fieldOwners'
  | 'pluginCreator.internal.ignoreType'
  | 'pluginCreator.internal.mediaType'
  | 'pluginCreator.internal.owner'
  | 'pluginCreator.internal.type'
  | 'pluginCreator.name'
  | 'pluginCreator.nodeAPIs'
  | 'pluginCreator.packageJson'
  | 'pluginCreator.parent.children'
  | 'pluginCreator.parent.children.children'
  | 'pluginCreator.parent.children.id'
  | 'pluginCreator.parent.id'
  | 'pluginCreator.parent.internal.content'
  | 'pluginCreator.parent.internal.contentDigest'
  | 'pluginCreator.parent.internal.description'
  | 'pluginCreator.parent.internal.fieldOwners'
  | 'pluginCreator.parent.internal.ignoreType'
  | 'pluginCreator.parent.internal.mediaType'
  | 'pluginCreator.parent.internal.owner'
  | 'pluginCreator.parent.internal.type'
  | 'pluginCreator.parent.parent.children'
  | 'pluginCreator.parent.parent.id'
  | 'pluginCreator.pluginFilepath'
  | 'pluginCreator.pluginOptions'
  | 'pluginCreator.resolve'
  | 'pluginCreator.ssrAPIs'
  | 'pluginCreator.version';

type SitePageFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly component: InputMaybe<StringQueryOperatorInput>;
  readonly componentChunkName: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly internalComponentName: InputMaybe<StringQueryOperatorInput>;
  readonly matchPath: InputMaybe<StringQueryOperatorInput>;
  readonly pageContext: InputMaybe<JSONQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly path: InputMaybe<StringQueryOperatorInput>;
  readonly pluginCreator: InputMaybe<SitePluginFilterInput>;
};

type SitePageGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePageEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SitePageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePageGroupConnection_distinctArgs = {
  field: SitePageFieldsEnum;
};


type SitePageGroupConnection_groupArgs = {
  field: SitePageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePageGroupConnection_maxArgs = {
  field: SitePageFieldsEnum;
};


type SitePageGroupConnection_minArgs = {
  field: SitePageFieldsEnum;
};


type SitePageGroupConnection_sumArgs = {
  field: SitePageFieldsEnum;
};

type SitePageSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SitePageFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SitePlugin = Node & {
  readonly browserAPIs: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly name: Maybe<Scalars['String']>;
  readonly nodeAPIs: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly packageJson: Maybe<Scalars['JSON']>;
  readonly parent: Maybe<Node>;
  readonly pluginFilepath: Maybe<Scalars['String']>;
  readonly pluginOptions: Maybe<Scalars['JSON']>;
  readonly resolve: Maybe<Scalars['String']>;
  readonly ssrAPIs: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly version: Maybe<Scalars['String']>;
};

type SitePluginConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePluginEdge>;
  readonly group: ReadonlyArray<SitePluginGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePlugin>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePluginConnection_distinctArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginConnection_groupArgs = {
  field: SitePluginFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePluginConnection_maxArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginConnection_minArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginConnection_sumArgs = {
  field: SitePluginFieldsEnum;
};

type SitePluginEdge = {
  readonly next: Maybe<SitePlugin>;
  readonly node: SitePlugin;
  readonly previous: Maybe<SitePlugin>;
};

type SitePluginFieldsEnum =
  | 'browserAPIs'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'name'
  | 'nodeAPIs'
  | 'packageJson'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'pluginFilepath'
  | 'pluginOptions'
  | 'resolve'
  | 'ssrAPIs'
  | 'version';

type SitePluginFilterInput = {
  readonly browserAPIs: InputMaybe<StringQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly nodeAPIs: InputMaybe<StringQueryOperatorInput>;
  readonly packageJson: InputMaybe<JSONQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly pluginFilepath: InputMaybe<StringQueryOperatorInput>;
  readonly pluginOptions: InputMaybe<JSONQueryOperatorInput>;
  readonly resolve: InputMaybe<StringQueryOperatorInput>;
  readonly ssrAPIs: InputMaybe<StringQueryOperatorInput>;
  readonly version: InputMaybe<StringQueryOperatorInput>;
};

type SitePluginGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePluginEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SitePluginGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePlugin>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePluginGroupConnection_distinctArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginGroupConnection_groupArgs = {
  field: SitePluginFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePluginGroupConnection_maxArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginGroupConnection_minArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginGroupConnection_sumArgs = {
  field: SitePluginFieldsEnum;
};

type SitePluginSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SitePluginFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SiteSiteMetadata = {
  readonly cookieName: Maybe<Scalars['String']>;
  readonly description: Maybe<Scalars['String']>;
  readonly logo: Maybe<Scalars['String']>;
  readonly siteName: Maybe<Scalars['String']>;
  readonly siteUrl: Maybe<Scalars['String']>;
  readonly title: Maybe<Scalars['String']>;
};

type SiteSiteMetadataFilterInput = {
  readonly cookieName: InputMaybe<StringQueryOperatorInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly logo: InputMaybe<StringQueryOperatorInput>;
  readonly siteName: InputMaybe<StringQueryOperatorInput>;
  readonly siteUrl: InputMaybe<StringQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
};

type SiteSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SiteFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SortOrderEnum =
  | 'ASC'
  | 'DESC';

type StringQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['String']>;
  readonly glob: InputMaybe<Scalars['String']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  readonly ne: InputMaybe<Scalars['String']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  readonly regex: InputMaybe<Scalars['String']>;
};

type TransformOptions = {
  readonly cropFocus: InputMaybe<ImageCropFocus>;
  readonly duotone: InputMaybe<DuotoneGradient>;
  readonly fit: InputMaybe<ImageFit>;
  readonly grayscale: InputMaybe<Scalars['Boolean']>;
  readonly rotate: InputMaybe<Scalars['Int']>;
  readonly trim: InputMaybe<Scalars['Float']>;
};

type WebPOptions = {
  readonly quality: InputMaybe<Scalars['Int']>;
};

type FooterQueryVariables = Exact<{ [key: string]: never; }>;


type FooterQuery = { readonly siteBuildMetadata: { readonly buildTime: string | null, readonly buildYear: string | null } | null };

type TestImagesQueryVariables = Exact<{ [key: string]: never; }>;


type TestImagesQuery = { readonly allFile: { readonly nodes: ReadonlyArray<{ readonly id: string, readonly uid: number, readonly name: string, readonly extension: string, readonly publicURL: string | null, readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null }> } };

type ImageFragmentFragment = { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null };

type VideoFragmentFragment = { readonly publicURL: string | null };

type SvgFragmentFragment = { readonly svg: { readonly encoded: string, readonly content: string } | null };

type LottieFragmentFragment = { readonly lottie: { readonly animationJson: string, readonly encoded: string } | null };

type LayoutQueryVariables = Exact<{ [key: string]: never; }>;


type LayoutQuery = { readonly site: { readonly siteMetadata: { readonly description: string | null, readonly siteName: string | null, readonly siteUrl: string | null, readonly cookieName: string | null, readonly logo: string | null } | null } | null, readonly siteBuildMetadata: { readonly buildTime: string | null, readonly buildYear: string | null } | null };

type IndexPageQueryVariables = Exact<{ [key: string]: never; }>;


type IndexPageQuery = { readonly pageDoc: { readonly title: string | null, readonly description: string | null, readonly image: { readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null } | null, readonly video: { readonly publicURL: string | null } | null, readonly animation: { readonly lottie: { readonly animationJson: string, readonly encoded: string } | null } | null } | null };

type GatsbyImageSharpFixedFragment = { readonly base64: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string };

type GatsbyImageSharpFixed_tracedSVGFragment = { readonly tracedSVG: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string };

type GatsbyImageSharpFixed_withWebpFragment = { readonly base64: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null };

type GatsbyImageSharpFixed_withWebp_tracedSVGFragment = { readonly tracedSVG: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null };

type GatsbyImageSharpFixed_noBase64Fragment = { readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string };

type GatsbyImageSharpFixed_withWebp_noBase64Fragment = { readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null };

type GatsbyImageSharpFluidFragment = { readonly base64: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly sizes: string };

type GatsbyImageSharpFluidLimitPresentationSizeFragment = { readonly maxHeight: number, readonly maxWidth: number };

type GatsbyImageSharpFluid_tracedSVGFragment = { readonly tracedSVG: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly sizes: string };

type GatsbyImageSharpFluid_withWebpFragment = { readonly base64: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null, readonly sizes: string };

type GatsbyImageSharpFluid_withWebp_tracedSVGFragment = { readonly tracedSVG: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null, readonly sizes: string };

type GatsbyImageSharpFluid_noBase64Fragment = { readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly sizes: string };

type GatsbyImageSharpFluid_withWebp_noBase64Fragment = { readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null, readonly sizes: string };

type AllFilesQueryVariables = Exact<{ [key: string]: never; }>;


type AllFilesQuery = { readonly allFile: { readonly nodes: ReadonlyArray<{ readonly name: string, readonly ext: string, readonly publicURL: string | null, readonly childImageSharp: { readonly gatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData } | null, readonly lottie: { readonly animationJson: string, readonly encoded: string } | null, readonly svg: { readonly encoded: string, readonly content: string } | null }> } };


}
